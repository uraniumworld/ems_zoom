[{"E:\\Github\\ems_zoom\\src\\index.js":"1","E:\\Github\\ems_zoom\\src\\reportWebVitals.js":"2","E:\\Github\\ems_zoom\\src\\App.js":"3","E:\\Github\\ems_zoom\\src\\mobx\\global-context.js":"4","E:\\Github\\ems_zoom\\src\\ui\\login.js":"5","E:\\Github\\ems_zoom\\src\\ui\\home.js":"6","E:\\Github\\ems_zoom\\src\\ui\\email.js":"7","E:\\Github\\ems_zoom\\src\\mobx\\mobx-store.js":"8","E:\\Github\\ems_zoom\\src\\ui\\view-schedule.js":"9","E:\\Github\\ems_zoom\\src\\layouts\\full-layout.js":"10","E:\\Github\\ems_zoom\\src\\ui\\view-student.js":"11","E:\\Github\\ems_zoom\\src\\components\\footer.js":"12","E:\\Github\\ems_zoom\\src\\components\\top-menu.js":"13","E:\\Github\\ems_zoom\\src\\components\\schedule.js":"14","E:\\Github\\ems_zoom\\src\\config.js":"15","E:\\Github\\ems_zoom\\src\\components\\services.js":"16"},{"size":690,"mtime":1610037146193,"results":"17","hashOfConfig":"18"},{"size":375,"mtime":1610037146195,"results":"19","hashOfConfig":"18"},{"size":1325,"mtime":1610626042102,"results":"20","hashOfConfig":"18"},{"size":113,"mtime":1610037146194,"results":"21","hashOfConfig":"18"},{"size":1256,"mtime":1610037146196,"results":"22","hashOfConfig":"18"},{"size":1897,"mtime":1610539454486,"results":"23","hashOfConfig":"18"},{"size":151,"mtime":1610037146196,"results":"24","hashOfConfig":"18"},{"size":4705,"mtime":1610421451472,"results":"25","hashOfConfig":"18"},{"size":3222,"mtime":1610626042103,"results":"26","hashOfConfig":"18"},{"size":660,"mtime":1610037146194,"results":"27","hashOfConfig":"18"},{"size":6661,"mtime":1610637130600,"results":"28","hashOfConfig":"18"},{"size":189,"mtime":1610037146192,"results":"29","hashOfConfig":"18"},{"size":2048,"mtime":1610421451471,"results":"30","hashOfConfig":"18"},{"size":5230,"mtime":1610626042103,"results":"31","hashOfConfig":"18"},{"size":88,"mtime":1610421451471,"results":"32","hashOfConfig":"18"},{"size":1753,"mtime":1610626042103,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"i71ozh",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"36"},"E:\\Github\\ems_zoom\\src\\index.js",[],["75","76"],"E:\\Github\\ems_zoom\\src\\reportWebVitals.js",[],"E:\\Github\\ems_zoom\\src\\App.js",[],"E:\\Github\\ems_zoom\\src\\mobx\\global-context.js",[],"E:\\Github\\ems_zoom\\src\\ui\\login.js",[],"E:\\Github\\ems_zoom\\src\\ui\\home.js",["77"],"import Schedule from \"../components/schedule\";\r\nimport {Col, Form, Row} from \"react-bootstrap\";\r\nimport {useState} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst currentDate=new Date();\r\nconst currentMonth=currentDate.getMonth();\r\nconst currentYear=currentDate.getFullYear();\r\nconst Home = ()=>{\r\n    const [selectedMonth,setSelectedMonth]=useState(currentMonth+1);\r\n    const [selectedYear,setSelectedYear]=useState(currentYear);\r\n\r\n\r\n    return <div>\r\n        <Row>\r\n            <Col md={6}>\r\n                <Form.Group>\r\n                    <Form.Label>Month</Form.Label>\r\n                    <Form.Control as=\"select\" value={selectedMonth} onChange={e=>{\r\n                        setSelectedMonth(e.target.value)\r\n                    }}>\r\n                        {\r\n                            [...new Array(31)].map((v,i)=>{\r\n                                let value = i+1;\r\n                                return <option key={value} value={value}>{value}</option>\r\n                            })\r\n                        }\r\n                    </Form.Control>\r\n                </Form.Group>\r\n            </Col>\r\n            <Col md={6}>\r\n                <Form.Group>\r\n                    <Form.Label>Year</Form.Label>\r\n                    <Form.Control as=\"select\" value={selectedYear} onChange={e=>{\r\n                        setSelectedYear(e.target.value)\r\n                    }}>\r\n                        {\r\n                            [...new Array(5)].map((v,i)=>{\r\n                                let value = currentYear-i;\r\n                                return <option key={value} value={value}>{value}</option>\r\n                            })\r\n                        }\r\n                    </Form.Control>\r\n                </Form.Group>\r\n            </Col>\r\n        </Row>\r\n        <Schedule month={selectedMonth} year={selectedYear}/>\r\n    </div>\r\n}\r\nexport default Home;\r\n","E:\\Github\\ems_zoom\\src\\ui\\email.js",[],"E:\\Github\\ems_zoom\\src\\mobx\\mobx-store.js",["78","79"],"import {makeAutoObservable} from \"mobx\";\r\n\r\nclass MobxStore {\r\n    currentUser = 'xmuz';\r\n    daySchedule = [\r\n        {\r\n            date: '01-01-2020',\r\n            schedules: [\r\n                {\r\n                    id: 1,\r\n                    schedule: 'ems-121212',\r\n                    examDate: '12-12-12',\r\n                    studentCount: 50,\r\n                },\r\n                {\r\n                    id: 2,\r\n                    schedule: 'ems-55555',\r\n                    examDate: '12-12-12',\r\n                    studentCount: 70,\r\n                },\r\n                {\r\n                    id: 3,\r\n                    schedule: 'ems-55556',\r\n                    examDate: '12-12-12',\r\n                    studentCount: 60,\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            date: '01-01-2021',\r\n            schedules: [\r\n                {\r\n                    id: 1,\r\n                    schedule: 'ems-121212',\r\n                    examDate: '12-12-12',\r\n                    studentCount: 50,\r\n                },\r\n                {\r\n                    id: 2,\r\n                    schedule: 'ems-55555',\r\n                    examDate: '12-12-12',\r\n                    studentCount: 70,\r\n                },\r\n                {\r\n                    id: 3,\r\n                    schedule: 'ems-55556',\r\n                    examDate: '12-12-12',\r\n                    studentCount: 60,\r\n                }\r\n            ]\r\n        }\r\n    ];\r\n    students = {\r\n        Group1: [\r\n            {\r\n                code: '602254535-2',\r\n                email: 'ffff@kkumail.com',\r\n                fullname: 'xxxx oooo',\r\n                approved: true,\r\n                logged: true,\r\n            },\r\n            {\r\n                code: '602253343-2',\r\n                email: 'ttttee@kkumail.com',\r\n                fullname: 'ffgf ssss',\r\n                approved: false,\r\n            }\r\n        ],\r\n        Group2: [\r\n            {\r\n                code: '222222-2',\r\n                email: '2222@kkumail.com',\r\n                fullname: '2222 oooo',\r\n                approved: false,\r\n            },\r\n            {\r\n                code: '3333333-2',\r\n                email: '3333@kkumail.com',\r\n                fullname: '3333 ssss',\r\n                approved: false,\r\n            }\r\n        ]\r\n    };\r\n\r\n    scheduleMenu=[];\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    getScheduleYear(year){\r\n        let schedule=[\r\n            {\r\n                date: '01-01-2020',\r\n                schedules: [\r\n                    {\r\n                        id: 1,\r\n                        schedule: 'ems-121212',\r\n                        examDate: '12-12-12',\r\n                        studentCount: 50,\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        schedule: 'ems-55555',\r\n                        examDate: '12-12-12',\r\n                        studentCount: 70,\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        schedule: 'ems-55556',\r\n                        examDate: '12-12-12',\r\n                        studentCount: 60,\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                date: '01-01-2021',\r\n                schedules: [\r\n                    {\r\n                        id: 1,\r\n                        schedule: 'ems-121212',\r\n                        examDate: '12-12-12',\r\n                        studentCount: 50,\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        schedule: 'ems-55555',\r\n                        examDate: '12-12-12',\r\n                        studentCount: 70,\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        schedule: 'ems-55556',\r\n                        examDate: '12-12-12',\r\n                        studentCount: 60,\r\n                    }\r\n                ]\r\n            }\r\n        ];\r\n        return schedule;\r\n    }\r\n\r\n    setUser(user) {\r\n        this.currentUser = user;\r\n    }\r\n\r\n    studentApprove(code) {\r\n        let student = this.findStudent(code);\r\n        if (student) {\r\n            student.approved = true;\r\n        }\r\n    }\r\n\r\n    studentReject(code) {\r\n        let student = this.findStudent(code);\r\n        if (student) {\r\n            student.approved = false;\r\n        }\r\n    }\r\n    findStudent(code) {\r\n        let student = void 0;\r\n        Object.keys(this.students).map(group => {\r\n            if (!student) student = this.students[group].find(std => std.code == code);\r\n        })\r\n        return student;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default MobxStore;","E:\\Github\\ems_zoom\\src\\ui\\view-schedule.js",["80","81","82"],"import {observer} from \"mobx-react\";\r\nimport {useContext, useEffect, useState} from \"react\";\r\nimport StateContext from \"../mobx/global-context\";\r\nimport {Link, useParams} from 'react-router-dom';\r\nimport {Button, Card, Col, Row} from \"react-bootstrap\";\r\n\r\nconst ViewSchedule = () => {\r\n    const state = useContext(StateContext);\r\n    const {SchdID, SchdDetailID} = useParams();\r\n    const [schedule,setSchedule] = useState(null);\r\n    console.log('===', SchdID,SchdDetailID);\r\n\r\n    useEffect(()=>{\r\n        state.scheduleMenu=[\r\n            {to:`/schedule/${SchdID}/${SchdDetailID}`,title:'Group'}\r\n        ];\r\n        setTimeout(()=>{\r\n            const schedule={\r\n                id: 1,\r\n                examCode: 'ems-121212',\r\n                examDate: '12-12-12',\r\n                studentCount: 50,\r\n                students:{\r\n                    Group1:[\r\n                        {\r\n                            code: '602254535-2',\r\n                            email: 'ffff@kkumail.com',\r\n                            fullname: 'xxxx oooo',\r\n                            approved: true,\r\n                            logined: true,\r\n                        },\r\n                        {\r\n                            code: '602253343-2',\r\n                            email: 'ttttee@kkumail.com',\r\n                            fullname: 'ffgf ssss',\r\n                            approved: false,\r\n                            logged: true,\r\n                        }\r\n                    ],\r\n                    Group2:[\r\n                        {\r\n                            code: '602254535-2',\r\n                            email: 'ffff@kkumail.com',\r\n                            fullname: 'xxxx oooo',\r\n                            approved: true,\r\n                            logged: true,\r\n                        },\r\n                        {\r\n                            code: '602253343-2',\r\n                            email: 'ttttee@kkumail.com',\r\n                            fullname: 'ffgf ssss',\r\n                            approved: false,\r\n                            logged: true,\r\n                        }\r\n                    ]\r\n                }\r\n            };\r\n            setSchedule({...schedule});\r\n        },500);\r\n    },[]);\r\n\r\n    function getGroup() {\r\n        // let key = Object.keys(schedule.students)[group ? group - 1 : 0];\r\n        // console.log('===', key);\r\n        // return state.students[key] || [];\r\n    }\r\n    if(!schedule)return <div>Loading...</div>\r\n    return <>\r\n        <h3>รอบสอบ {schedule.examCode} ซึ่งมีทั้งหมด {Object.keys(schedule.students).length} กลุ่ม</h3>\r\n        <Row>\r\n            {\r\n                Object.keys(schedule.students).map(grp =>\r\n                    <Col key={grp}>\r\n                        <Card>\r\n                            <Card.Body>\r\n                                {grp} (50 คน) <Link to={`/schedule/${SchdID}/${SchdDetailID}/${grp}`} className=\"btn btn-primary ml-2\">View</Link>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                )\r\n            }\r\n        </Row>\r\n    </>\r\n}\r\nexport default observer(ViewSchedule);","E:\\Github\\ems_zoom\\src\\layouts\\full-layout.js",["83","84"],"import React from 'react';\r\nimport {Col, Container, Navbar, Row} from \"react-bootstrap\";\r\nimport TopMenu from \"../components/top-menu\";\r\nimport Footer from \"../components/footer\";\r\nimport {useParams,withRouter} from \"react-router-dom\";\r\n\r\nconst FullLayout = (props)=>{\r\n    const params = useParams();\r\n    console.log('top layout===',props);\r\n    return <>\r\n        <div className=\"container-wrapper\">\r\n            <TopMenu/>\r\n            <Container>\r\n                <Row>\r\n                    <Col>{props.children}</Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n        <Footer/>\r\n    </>\r\n}\r\nexport default withRouter(FullLayout);","E:\\Github\\ems_zoom\\src\\ui\\view-student.js",["85","86","87","88","89"],"E:\\Github\\ems_zoom\\src\\components\\footer.js",["90"],"import {Container} from \"react-bootstrap\";\r\n\r\nconst Footer=()=>{\r\n    return <div className=\"footer\">\r\n        <div style={{padding:'10px'}}>ddd</div>\r\n    </div>\r\n}\r\nexport default Footer;","E:\\Github\\ems_zoom\\src\\components\\top-menu.js",["91","92","93"],"import {observer} from \"mobx-react\";\r\nimport {useContext} from \"react\";\r\nimport StateContext from \"../mobx/global-context\";\r\nimport {useLocation,NavLink,useParams,withRouter} from 'react-router-dom';\r\n\r\nconst TopMenu=(props)=>{\r\n    const state = useContext(StateContext);\r\n    // const location = useLocation();\r\n    const params = useParams();\r\n    console.log('top===',params);\r\n    return <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <a className=\"navbar-brand\" href=\"#\">Ems Check-in</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\r\n                aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/\" exact>Schedule</NavLink>\r\n                </li>\r\n                {\r\n                    state.scheduleMenu.map(mn=>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to={mn.to} exact>-> {mn.title}</NavLink>\r\n                        </li>\r\n                    )\r\n                }\r\n            </ul>\r\n        </div>\r\n        {/*<div className=\"collapse navbar-collapse\" id=\"navbarNav\">*/}\r\n        {/*    {location && location.pathname.match(/\\/schedule/) &&*/}\r\n        {/*    <ul className=\"navbar-nav\">*/}\r\n        {/*        {*/}\r\n        {/*            Object.keys(students).map(grp=>(*/}\r\n        {/*                <li className=\"nav-item\">*/}\r\n        {/*                    <NavLink className=\"nav-link\" to={`/schedule/${id}/group/${group}`}>{grp}</NavLink>*/}\r\n        {/*                </li>*/}\r\n        {/*            ))*/}\r\n        {/*        }*/}\r\n        {/*    </ul>*/}\r\n        {/*    }*/}\r\n        {/*</div>*/}\r\n    </nav>\r\n}\r\nexport default observer(TopMenu);","E:\\Github\\ems_zoom\\src\\components\\schedule.js",["94","95","96","97","98","99","100","101"],"import {Alert, Badge, Button, Card, Col, Row, Modal, Form} from \"react-bootstrap\";\r\nimport {observer} from \"mobx-react\";\r\nimport {useContext, useEffect, useState} from \"react\";\r\nimport StateContext from \"../mobx/global-context\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Config from \"../config\";\r\nimport {getEmailByScheduleDetail, getSchedules} from \"./services\";\r\nimport {$mobx} from \"mobx\";\r\n\r\nconst Schedule = ({month,year}) => {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [modalContent, setModalContent] = useState(null);\r\n    const [schedules,setSchedules] = useState(null);\r\n    const state = useContext(StateContext);\r\n\r\n    useEffect(()=>{\r\n        state.scheduleMenu=[];\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n       getSchedules(month,year).then(results=>{\r\n           setSchedules(results);\r\n       });\r\n    },[month,year]);\r\n\r\n    function showEmail(schd){\r\n        getEmailByScheduleDetail(schd.SchdID,schd.SchdDetailID);\r\n        setTimeout(()=>{\r\n            let exampleContent={\r\n                Group1:[\r\n                    '123456@kkumail.com',\r\n                    '123456@kkumail.com',\r\n                    '123456@kkumail.com',\r\n                    '123456@kkumail.com',\r\n                ],\r\n                Group2:[\r\n                    '123456@kkumail.com',\r\n                    '123456@kkumail.com',\r\n                    '123456@kkumail.com',\r\n                    '123456@kkumail.com',\r\n                ]\r\n            };\r\n            setModalContent({title: schd.examDate,content:getContent(exampleContent)});\r\n        },500);\r\n        setShowModal(true);\r\n    }\r\n    function hideModal(){\r\n        setModalContent(null);\r\n        setShowModal(false);\r\n    }\r\n    function getContent(groupData){\r\n        let text='';\r\n        Object.keys(groupData).map(group=>{\r\n            text+=group+'\\n';\r\n            groupData[group].map(email=>{\r\n                text+=email+'\\n';\r\n            })\r\n        });\r\n        return text;\r\n    }\r\n    return <>\r\n        <h3>รอบสอบของ ปี {year}</h3>\r\n        {\r\n            schedules && Object.keys(schedules).map(day => {\r\n                return (\r\n                    <Card key={day} className=\"mt-2\">\r\n                        <Card.Header>\r\n                            <Card.Text>การสอบวันที่ {day}</Card.Text>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Row>\r\n                                {schedules[day].map((schd,i) =>\r\n                                    <SchdBlock key={`${schd.examDate}_${i}`} schd={schd} onEmail={showEmail.bind(this,schd)}/>\r\n                                )}\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                )\r\n            })\r\n        }\r\n        <Modal show={showModal} onHide={hideModal}>\r\n            <Modal.Header closeButton>\r\n                {modalContent\r\n                    ?<Modal.Title>Email ในรอบสอบ {modalContent.title}</Modal.Title>\r\n                    :<Modal.Title>Loading...</Modal.Title>\r\n                }\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {\r\n                    modalContent\r\n                    ?<Form.Control as=\"textarea\"\r\n                                   rows={20}\r\n                                   value={modalContent.content}\r\n                                   onChange={()=>{}}\r\n                        ></Form.Control>\r\n                    :'Loading...'\r\n                }\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={hideModal}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={hideModal}>\r\n                    Save Changes\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    </>\r\n}\r\n\r\n\r\nconst SchdBlock = ({schd,onEmail}) => {\r\n    const history = useHistory();\r\n    console.log('===', schd);\r\n    return <Col md={4}>\r\n        <div style={{padding: '10px'}}>\r\n            <Card>\r\n                <Card.Header>\r\n                    <Card.Title>\r\n                        <small>{schd.ExamTimeStart}-{schd.ExamTimeEnd}</small>\r\n                    </Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <div className=\"text-center\">\r\n                    {schd.ModuleType==\"1\"?<Alert variant=\"info\">ทฤษฎี</Alert>:<Alert variant=\"dark\">ปฏิบัติ</Alert>}\r\n                        <div className=\"text-center\">\r\n                            <Button className=\"ml-2\" onClick={e => history.push(`/schedule/${schd.SchdID}/${schd.SchdDetailID}`)}>Enter</Button>\r\n                            <Button variant=\"secondary\" className=\"ml-2\" onClick={onEmail}>Email</Button>\r\n                        </div>\r\n                    </div>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <Card.Text className=\"text-right\">Student: {schd.studentCount}</Card.Text>\r\n                </Card.Footer>\r\n            </Card>\r\n        </div>\r\n    </Col>\r\n}\r\n\r\nexport default observer(Schedule);\r\n","E:\\Github\\ems_zoom\\src\\config.js",[],"E:\\Github\\ems_zoom\\src\\components\\services.js",["102","103","104","105"],"import axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\nexport function getSchedules(month,year){\r\n    return  new Promise(resolve => {\r\n        axios.post('/check_in_resful_api.php?method=schedule',{m:parseInt(month),y:parseInt(year)})\r\n            .then(res=>{\r\n               let resultWithGroup={};\r\n               res.data.results.sort((a,b)=>{\r\n                  let aDate = moment(a.ExamDate);\r\n                  let bDate = moment(b.ExamDate);\r\n                   if(aDate==bDate)return 0;\r\n                   if(aDate>bDate)return 1;\r\n                   return -1;\r\n               });\r\n               res.data.results.map(schd=>{\r\n                    schd.ExamDate=schd.ExamDate.split(' ')[0];\r\n                    schd.ExamTimeStart=schd.ExamTimeStart.split(' ')[1];\r\n                    schd.ExamTimeEnd=schd.ExamTimeEnd.split(' ')[1];\r\n                    if(!resultWithGroup[schd.ExamDate])resultWithGroup[schd.ExamDate]=[];\r\n                    resultWithGroup[schd.ExamDate].push(schd);\r\n                });\r\n                Object.keys(resultWithGroup).map(key=>{\r\n                    resultWithGroup[key].sort((a,b)=>{\r\n                        let aDate = parseInt(a.ExamTimeStart);\r\n                        let bDate = parseInt(b.ExamTimeEnd);\r\n                        if(aDate==bDate)return 0;\r\n                        if(aDate>bDate)return 1;\r\n                        return -1;\r\n                    })\r\n                })\r\n                console.log(resultWithGroup);\r\n                resolve(resultWithGroup);\r\n            })\r\n    })\r\n}\r\n\r\nexport function getEmailByScheduleDetail(SchdID,SchdDetailID){\r\n    axios.post('/check_in_resful_api.php?method=students',{SchdID,SchdDetailID})\r\n        .then(res=>{\r\n\r\n        });\r\n}\r\n",{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":4,"column":8,"nodeType":"112","messageId":"113","endLine":4,"endColumn":13},{"ruleId":"114","severity":1,"message":"115","line":162,"column":46,"nodeType":"116","messageId":"117","endLine":162,"endColumn":48},{"ruleId":"118","severity":1,"message":"119","line":163,"column":79,"nodeType":"120","messageId":"121","endLine":163,"endColumn":81},{"ruleId":"110","severity":1,"message":"122","line":5,"column":9,"nodeType":"112","messageId":"113","endLine":5,"endColumn":15},{"ruleId":"123","severity":1,"message":"124","line":60,"column":7,"nodeType":"125","endLine":60,"endColumn":9,"suggestions":"126"},{"ruleId":"110","severity":1,"message":"127","line":62,"column":14,"nodeType":"112","messageId":"113","endLine":62,"endColumn":22},{"ruleId":"110","severity":1,"message":"128","line":2,"column":25,"nodeType":"112","messageId":"113","endLine":2,"endColumn":31},{"ruleId":"110","severity":1,"message":"129","line":8,"column":11,"nodeType":"112","messageId":"113","endLine":8,"endColumn":17},{"ruleId":"110","severity":1,"message":"130","line":6,"column":9,"nodeType":"112","messageId":"113","endLine":6,"endColumn":15},{"ruleId":"123","severity":1,"message":"131","line":50,"column":8,"nodeType":"125","endLine":50,"endColumn":10,"suggestions":"132"},{"ruleId":"118","severity":1,"message":"119","line":54,"column":57,"nodeType":"120","messageId":"121","endLine":54,"endColumn":59},{"ruleId":"118","severity":1,"message":"119","line":62,"column":57,"nodeType":"120","messageId":"121","endLine":62,"endColumn":59},{"ruleId":"133","severity":1,"message":"134","line":87,"column":25,"nodeType":"135","endLine":93,"endColumn":27},{"ruleId":"110","severity":1,"message":"136","line":1,"column":9,"nodeType":"112","messageId":"113","endLine":1,"endColumn":18},{"ruleId":"110","severity":1,"message":"137","line":4,"column":9,"nodeType":"112","messageId":"113","endLine":4,"endColumn":20},{"ruleId":"110","severity":1,"message":"138","line":4,"column":39,"nodeType":"112","messageId":"113","endLine":4,"endColumn":49},{"ruleId":"139","severity":1,"message":"140","line":12,"column":9,"nodeType":"135","endLine":12,"endColumn":46},{"ruleId":"110","severity":1,"message":"141","line":1,"column":16,"nodeType":"112","messageId":"113","endLine":1,"endColumn":21},{"ruleId":"110","severity":1,"message":"111","line":6,"column":8,"nodeType":"112","messageId":"113","endLine":6,"endColumn":13},{"ruleId":"110","severity":1,"message":"142","line":7,"column":8,"nodeType":"112","messageId":"113","endLine":7,"endColumn":14},{"ruleId":"110","severity":1,"message":"143","line":9,"column":9,"nodeType":"112","messageId":"113","endLine":9,"endColumn":14},{"ruleId":"123","severity":1,"message":"144","line":19,"column":7,"nodeType":"125","endLine":19,"endColumn":9,"suggestions":"145"},{"ruleId":"114","severity":1,"message":"115","line":54,"column":41,"nodeType":"116","messageId":"117","endLine":54,"endColumn":43},{"ruleId":"114","severity":1,"message":"115","line":56,"column":39,"nodeType":"116","messageId":"117","endLine":56,"endColumn":41},{"ruleId":"118","severity":1,"message":"119","line":126,"column":37,"nodeType":"120","messageId":"121","endLine":126,"endColumn":39},{"ruleId":"118","severity":1,"message":"119","line":12,"column":28,"nodeType":"120","messageId":"121","endLine":12,"endColumn":30},{"ruleId":"114","severity":1,"message":"115","line":16,"column":41,"nodeType":"116","messageId":"117","endLine":16,"endColumn":43},{"ruleId":"114","severity":1,"message":"115","line":23,"column":53,"nodeType":"116","messageId":"117","endLine":23,"endColumn":55},{"ruleId":"118","severity":1,"message":"119","line":27,"column":33,"nodeType":"120","messageId":"121","endLine":27,"endColumn":35},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'SchdDetailID', 'SchdID', and 'state'. Either include them or remove the dependency array.","ArrayExpression",["148"],"'getGroup' is defined but never used.","'Navbar' is defined but never used.","'params' is assigned a value but never used.","'render' is defined but never used.","React Hook useEffect has missing dependencies: 'SchdDetailID', 'SchdID', 'group', and 'state'. Either include them or remove the dependency array.",["149"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'Container' is defined but never used.","'useLocation' is defined but never used.","'withRouter' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Badge' is defined but never used.","'Config' is defined but never used.","'$mobx' is defined but never used.","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.",["150"],"no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},"Update the dependencies array to be: [SchdDetailID, SchdID, state]",{"range":"157","text":"158"},"Update the dependencies array to be: [SchdDetailID, SchdID, group, state]",{"range":"159","text":"160"},"Update the dependencies array to be: [state]",{"range":"161","text":"162"},[2251,2253],"[SchdDetailID, SchdID, state]",[1831,1833],"[SchdDetailID, SchdID, group, state]",[751,753],"[state]"]