[{"E:\\Github\\ems_zoom\\src\\index.js":"1","E:\\Github\\ems_zoom\\src\\reportWebVitals.js":"2","E:\\Github\\ems_zoom\\src\\App.js":"3","E:\\Github\\ems_zoom\\src\\config.js":"4","E:\\Github\\ems_zoom\\src\\mobx\\global-context.js":"5","E:\\Github\\ems_zoom\\src\\ui\\home.js":"6","E:\\Github\\ems_zoom\\src\\ui\\login.js":"7","E:\\Github\\ems_zoom\\src\\ui\\admin.js":"8","E:\\Github\\ems_zoom\\src\\client-ui\\theory.js":"9","E:\\Github\\ems_zoom\\src\\ui\\view-group.js":"10","E:\\Github\\ems_zoom\\src\\client-ui\\workshop.js":"11","E:\\Github\\ems_zoom\\src\\client-ui\\client-home.js":"12","E:\\Github\\ems_zoom\\src\\client-ui\\student.js":"13","E:\\Github\\ems_zoom\\src\\ui\\view-student.js":"14","E:\\Github\\ems_zoom\\src\\mobx\\mobx-store.js":"15","E:\\Github\\ems_zoom\\src\\layouts\\full-layout.js":"16","E:\\Github\\ems_zoom\\src\\components\\services.js":"17","E:\\Github\\ems_zoom\\src\\client-ui\\exam.js":"18","E:\\Github\\ems_zoom\\src\\client-ui\\login-client.js":"19","E:\\Github\\ems_zoom\\src\\components\\schedule.js":"20","E:\\Github\\ems_zoom\\src\\components\\footer.js":"21","E:\\Github\\ems_zoom\\src\\components\\top-menu.js":"22","E:\\Github\\ems_zoom\\src\\client-components\\exam-schedule-day.js":"23","E:\\Github\\ems_zoom\\src\\client-components\\client-services.js":"24","E:\\Github\\ems_zoom\\src\\client-components\\check-in-process.js":"25","E:\\Github\\ems_zoom\\src\\client-components\\header.js":"26"},{"size":689,"mtime":1610890832106,"results":"27","hashOfConfig":"28"},{"size":375,"mtime":1610037146195,"results":"29","hashOfConfig":"28"},{"size":1727,"mtime":1611329393904,"results":"30","hashOfConfig":"28"},{"size":166,"mtime":1610806797530,"results":"31","hashOfConfig":"28"},{"size":113,"mtime":1610037146194,"results":"32","hashOfConfig":"28"},{"size":1897,"mtime":1610539454486,"results":"33","hashOfConfig":"28"},{"size":1820,"mtime":1610808463040,"results":"34","hashOfConfig":"28"},{"size":1840,"mtime":1610984121010,"results":"35","hashOfConfig":"28"},{"size":79,"mtime":1610808276617,"results":"36","hashOfConfig":"28"},{"size":3363,"mtime":1610806967224,"results":"37","hashOfConfig":"28"},{"size":13027,"mtime":1610984774470,"results":"38","hashOfConfig":"28"},{"size":91,"mtime":1610808070672,"results":"39","hashOfConfig":"28"},{"size":1593,"mtime":1610984121008,"results":"40","hashOfConfig":"28"},{"size":23726,"mtime":1611595880600,"results":"41","hashOfConfig":"28"},{"size":1146,"mtime":1611329393906,"results":"42","hashOfConfig":"28"},{"size":621,"mtime":1611329393906,"results":"43","hashOfConfig":"28"},{"size":4425,"mtime":1611329393906,"results":"44","hashOfConfig":"28"},{"size":1377,"mtime":1611329393905,"results":"45","hashOfConfig":"28"},{"size":2084,"mtime":1611329393905,"results":"46","hashOfConfig":"28"},{"size":5333,"mtime":1610809565096,"results":"47","hashOfConfig":"28"},{"size":188,"mtime":1610790676063,"results":"48","hashOfConfig":"28"},{"size":2120,"mtime":1610808597384,"results":"49","hashOfConfig":"28"},{"size":2169,"mtime":1610984875285,"results":"50","hashOfConfig":"28"},{"size":1582,"mtime":1611329393905,"results":"51","hashOfConfig":"28"},{"size":8376,"mtime":1611329393904,"results":"52","hashOfConfig":"28"},{"size":303,"mtime":1610984121007,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"i71ozh",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"56"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"56"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"E:\\Github\\ems_zoom\\src\\index.js",[],["122","123"],"E:\\Github\\ems_zoom\\src\\reportWebVitals.js",[],"E:\\Github\\ems_zoom\\src\\App.js",["124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139"],"import './App.css';\r\nimport {Route, Switch, useLocation,Redirect} from 'react-router-dom';\r\nimport Login from \"./ui/login\";\r\nimport StateContext from \"./mobx/global-context\";\r\nimport MobxStore from \"./mobx/mobx-store\";\r\nimport {observer} from \"mobx-react\";\r\nimport Home from \"./ui/home\";\r\nimport FullLayout from \"./layouts/full-layout\";\r\nimport ViewGroup from \"./ui/view-group\";\r\nimport ViewStudent from \"./ui/view-student\";\r\nimport {ToastContainer, toast, Slide} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport {useEffect} from \"react\";\r\nimport {checkLogin} from \"./components/services\";\r\nimport {Alert} from \"react-bootstrap\"; // Import css\r\nimport Config from './config';\r\nimport Workshop from \"./client-ui/workshop\";\r\nimport ClientHome from \"./client-ui/client-home\";\r\nimport Theory from \"./client-ui/theory\";\r\nimport Exam from \"./client-ui/exam\";\r\nimport LoginClient from \"./client-ui/login-client\";\r\nimport Admin from \"./ui/admin\";\r\nimport Student from \"./client-ui/student\";\r\n\r\nexport const mobxStore = new MobxStore();\r\n\r\nfunction App() {\r\n    let location = useLocation();\r\n    let {adminPath} = Config;\r\n    return (\r\n        <StateContext.Provider value={mobxStore}>\r\n            <Switch>\r\n                <Route path={adminPath()}>\r\n                    <Admin/>\r\n                </Route>\r\n                <Route path=\"/\">\r\n                    <Student/>\r\n                </Route>\r\n            </Switch>\r\n            <ToastContainer\r\n                transition={Slide}\r\n                limit={3}\r\n                autoClose={2000}\r\n            />\r\n        </StateContext.Provider>\r\n    );\r\n}\r\n\r\nexport default observer(App);\r\n","E:\\Github\\ems_zoom\\src\\config.js",[],"E:\\Github\\ems_zoom\\src\\mobx\\global-context.js",[],"E:\\Github\\ems_zoom\\src\\ui\\home.js",["140"],"import Schedule from \"../components/schedule\";\r\nimport {Col, Form, Row} from \"react-bootstrap\";\r\nimport {useState} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst currentDate=new Date();\r\nconst currentMonth=currentDate.getMonth();\r\nconst currentYear=currentDate.getFullYear();\r\nconst Home = ()=>{\r\n    const [selectedMonth,setSelectedMonth]=useState(currentMonth+1);\r\n    const [selectedYear,setSelectedYear]=useState(currentYear);\r\n\r\n\r\n    return <div>\r\n        <Row>\r\n            <Col md={6}>\r\n                <Form.Group>\r\n                    <Form.Label>Month</Form.Label>\r\n                    <Form.Control as=\"select\" value={selectedMonth} onChange={e=>{\r\n                        setSelectedMonth(e.target.value)\r\n                    }}>\r\n                        {\r\n                            [...new Array(31)].map((v,i)=>{\r\n                                let value = i+1;\r\n                                return <option key={value} value={value}>{value}</option>\r\n                            })\r\n                        }\r\n                    </Form.Control>\r\n                </Form.Group>\r\n            </Col>\r\n            <Col md={6}>\r\n                <Form.Group>\r\n                    <Form.Label>Year</Form.Label>\r\n                    <Form.Control as=\"select\" value={selectedYear} onChange={e=>{\r\n                        setSelectedYear(e.target.value)\r\n                    }}>\r\n                        {\r\n                            [...new Array(5)].map((v,i)=>{\r\n                                let value = currentYear-i;\r\n                                return <option key={value} value={value}>{value}</option>\r\n                            })\r\n                        }\r\n                    </Form.Control>\r\n                </Form.Group>\r\n            </Col>\r\n        </Row>\r\n        <Schedule month={selectedMonth} year={selectedYear}/>\r\n    </div>\r\n}\r\nexport default Home;\r\n","E:\\Github\\ems_zoom\\src\\ui\\login.js",[],"E:\\Github\\ems_zoom\\src\\ui\\admin.js",["141"],"import FullLayout from \"../layouts/full-layout\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport Home from \"./home\";\r\nimport ViewGroup from \"./view-group\";\r\nimport ViewStudent from \"./view-student\";\r\nimport Login from \"./login\";\r\nimport {observer} from \"mobx-react\";\r\nimport {useContext, useEffect} from \"react\";\r\nimport StateContext from \"../mobx/global-context\";\r\nimport Config from \"../config\";\r\nimport {Alert} from \"react-bootstrap\";\r\nimport {checkLogin} from \"../components/services\";\r\n\r\nlet timer;\r\nconst Admin = ()=>{\r\n    const state = useContext(StateContext);\r\n    let {adminPath} = Config;\r\n    useEffect(() => {\r\n        checker();\r\n        timer=setInterval(() => {\r\n            checker()\r\n        }, 5 * 60000)\r\n        return ()=>{\r\n            clearInterval(timer);\r\n        }\r\n    }, []);\r\n    function checker() {\r\n        checkLogin().then(user => {\r\n            if (user) {\r\n                state.setUser(user);\r\n            } else {\r\n                state.setUser(null);\r\n            }\r\n        })\r\n    }\r\n    if (typeof state.currentUser == 'undefined') return <Alert variant='info'>Loading...</Alert>\r\n    return <>\r\n        {state.currentUser\r\n            ?\r\n            <FullLayout>\r\n                <Switch>\r\n                    <Route path={adminPath()} exact component={Home}/>\r\n                    <Route path={adminPath('/schedule/:SchdID(\\\\d+)/:SchdDetailID(\\\\d+)')} exact\r\n                           component={ViewGroup}/>\r\n                    <Route path={adminPath('/schedule/:SchdID(\\\\d+)/:SchdDetailID(\\\\d+)/:group')}\r\n                           component={ViewStudent}/>\r\n                </Switch>\r\n            </FullLayout>\r\n            :\r\n            <Switch>\r\n                <Route path=\"*\" component={Login}/>\r\n            </Switch>\r\n        }\r\n    </>\r\n}\r\nexport default observer(Admin);","E:\\Github\\ems_zoom\\src\\client-ui\\theory.js",[],"E:\\Github\\ems_zoom\\src\\ui\\view-group.js",["142","143","144"],"import {observer} from \"mobx-react\";\r\nimport {useContext, useEffect, useState} from \"react\";\r\nimport StateContext from \"../mobx/global-context\";\r\nimport {Link, useParams} from 'react-router-dom';\r\nimport {Badge, Button, Card, Col, Form, Modal, Row} from \"react-bootstrap\";\r\nimport {getEmailByScheduleDetail, getScheduleInfo} from \"../components/services\";\r\nimport Config from \"../config\";\r\n\r\nconst ViewGroup = () => {\r\n    const state = useContext(StateContext);\r\n    const {SchdID, SchdDetailID} = useParams();\r\n    const [schedule,setSchedule] = useState(null);\r\n    const [studentsWithGroup,setStudentsWithGroup] = useState(null);\r\n    const [showingGroup,setShowingGroup] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        state.scheduleMenu=[\r\n            {to:`/schedule/${SchdID}/${SchdDetailID}`,title:'Group'}\r\n        ];\r\n        getEmailByScheduleDetail(SchdID,SchdDetailID).then(res=>{\r\n            setStudentsWithGroup(res);\r\n        });\r\n        getScheduleInfo(SchdID,SchdDetailID).then(res=>{\r\n            setSchedule(res);\r\n        })\r\n    },[]);\r\n\r\n    function getEmail(group) {\r\n        if(!studentsWithGroup[group])return;\r\n        let text='';\r\n        studentsWithGroup[group].map(std=>{\r\n            text+=`${std.RegKKU.KKUMAIL},`;\r\n        })\r\n        return text.substr(0,text.length-1);\r\n    }\r\n    if(!schedule || !studentsWithGroup)return <div>Loading...</div>\r\n    return <>\r\n        <h3>รอบสอบ {schedule.SchdCode} ซึ่งมีทั้งหมด {studentsWithGroup && Object.keys(studentsWithGroup).length} กลุ่ม</h3>\r\n        <div dangerouslySetInnerHTML={{__html:schedule.DateRegist_Desc_Th}}></div>\r\n        <div>ภาค {schedule.ModuleType==1?<Badge variant=\"danger\">ทฤษฎี</Badge>:<Badge variant=\"info\">ปฏิบัติ</Badge>} ประจำวันที่ {schedule.ExamDate} / {schedule.ExamTimeStart}-{schedule.ExamTimeEnd}</div>\r\n        <Row>\r\n            {\r\n                studentsWithGroup && Object.keys(studentsWithGroup).map(grp =>\r\n                    <Col key={grp} md={6}>\r\n                        <Card className=\"mt-2\">\r\n                            <Card.Body>\r\n                                <Badge className=\"text-uppercase\">{grp}</Badge> ({studentsWithGroup[grp].length} คน) <Link to={Config.adminPath(`/schedule/${SchdID}/${SchdDetailID}/${grp}`)} className=\"btn btn-primary ml-2\">View</Link>\r\n                                <Button variant=\"secondary\" className=\"ml-2\" onClick={setShowingGroup.bind(this,grp)}>Email</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                )\r\n            }\r\n        </Row>\r\n        <Modal show={!!showingGroup} onHide={e=>setShowingGroup(null)}>\r\n            <Modal.Header closeButton>\r\n                <span className=\"text-uppercase\">{showingGroup}</span> : Email\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form.Control rows={20} as=\"textarea\" onChange={e=>{}} onClick={e=>e.target.select()} value={getEmail(showingGroup)}/>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={e=>setShowingGroup(null)}>\r\n                    Close\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    </>\r\n}\r\nexport default observer(ViewGroup);\r\n","E:\\Github\\ems_zoom\\src\\client-ui\\workshop.js",["145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163"],"import {Alert, Badge, Button, Card, Col, Container, FormControl, Modal, Nav, Navbar, Row} from \"react-bootstrap\";\r\nimport Footer from \"../components/footer\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {Form} from \"formik\";\r\nimport {download, getWorkshopQuestion, getWorkshopUser, uploadWorkshopFile} from \"../client-components/client-services\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faFileWord, faFileExcel, faFilePowerpoint, faDatabase, faCheckCircle} from '@fortawesome/free-solid-svg-icons'\r\nimport classNames from \"classnames\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\n\r\n//http://localhost:3000/exam/workshop/125180/3474\r\n\r\n\r\nconst Workshop = () => {\r\n    const [questions, setQuestions] = useState();\r\n    const [filter, setFilter] = useState('1');\r\n    const [currentUserWorkshop, setCurrentUserWorkshop] = useState(null);\r\n    const [showConfirmSubmit, setShowConfirmSubmit] = useState(false);\r\n    const {StdRegistID, SchdDetailID} = useParams();\r\n\r\n    useEffect(() => {\r\n        getWorkshopQuestion(StdRegistID, SchdDetailID).then(data => setQuestions(data))\r\n        reloadWorkshopFile();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n    }, [filter]);\r\n\r\n    function getPracticeName(PracticeID, size) {\r\n        switch (PracticeID) {\r\n            case '1':\r\n                return {\r\n                    name: 'Microsoft Word',\r\n                    icon: <FontAwesomeIcon style={{fontSize: size}} icon={faFileWord}/>,\r\n                    color: '#0062cc',\r\n                    class: 'primary',\r\n                };\r\n            case '2':\r\n                return {\r\n                    name: 'Microsoft Excel',\r\n                    icon: <FontAwesomeIcon style={{fontSize: size}} icon={faFileExcel}/>,\r\n                    color: '#1e7e34',\r\n                    class: 'success',\r\n                };\r\n            case '3':\r\n                return {\r\n                    name: 'Microsoft Powerpoint',\r\n                    icon: <FontAwesomeIcon style={{fontSize: size}} icon={faFilePowerpoint}/>,\r\n                    color: '#d39e00',\r\n                    class: 'warning',\r\n                };\r\n            case '4':\r\n                return {\r\n                    name: 'Microsoft Access',\r\n                    icon: <FontAwesomeIcon style={{fontSize: size}} icon={faDatabase}/>,\r\n                    color: '#ea2971',\r\n                    class: 'danger',\r\n                };\r\n        }\r\n    }\r\n\r\n    function reloadWorkshopFile() {\r\n        getWorkshopUser(StdRegistID, SchdDetailID).then(data => setCurrentUserWorkshop(data));\r\n    }\r\n\r\n    function uploadFile(e) {\r\n        let file = e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append('file', file, file.name);\r\n        formData.append('StdRegistID', StdRegistID);\r\n        formData.append('SchdDetailID', SchdDetailID);\r\n        uploadWorkshopFile(formData);\r\n    }\r\n\r\n    async function confirmSubmit() {\r\n        await reloadWorkshopFile();\r\n        setShowConfirmSubmit(true);\r\n    }\r\n\r\n    return <>\r\n        {(questions && currentUserWorkshop)\r\n            ?\r\n            <div className=\"container-wrapper\" style={{paddingLeft: '120px'}}>\r\n                <div className=\"exam-sidebar\">\r\n                    <ul>\r\n                        {questions.map((q, i) => {\r\n                            let icon;\r\n                            let color;\r\n                            switch (q.PracticeID) {\r\n                                case '1':\r\n                                    icon = faFileWord;\r\n                                    color = '#0062cc';\r\n                                    break;\r\n                                case '2':\r\n                                    icon = faFileExcel;\r\n                                    color = '#1e7e34';\r\n                                    break;\r\n                                case '3':\r\n                                    icon = faFilePowerpoint;\r\n                                    color = '#d39e00';\r\n                                    break;\r\n                                case '4':\r\n                                    icon = faDatabase;\r\n                                    color = '#ea2971';\r\n                                    break;\r\n                            }\r\n                            return (\r\n                                <li key={'q_' + i} style={{cursor: 'pointer', background: color}} className={\r\n                                    classNames({\r\n                                        'exam-workshop-active': filter == q.PracticeID,\r\n                                        'exam-word-color': q.PracticeID == 1,\r\n                                        'exam-excel-color': q.PracticeID == 2,\r\n                                        'exam-powerpoint-color': q.PracticeID == 3,\r\n                                        'exam-access-color': q.PracticeID == 4,\r\n                                    })} onClick={e => setFilter(q.PracticeID)}>\r\n                                    <span className=\"mr-1\">{i + 1}.</span><FontAwesomeIcon style={{fontSize: '50px'}}\r\n                                                                                           icon={icon}/>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n                <Container className=\"exam-container\">\r\n                    <div className=\"exam-top-menu\">\r\n                        <Navbar bg=\"light\" expand=\"md\">\r\n                            <Navbar.Brand href=\"#home\">EMS KKU - Workshop</Navbar.Brand>\r\n                            <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                            <Navbar.Collapse>\r\n                                <Nav className=\"mr-auto\">\r\n                                    <Nav.Link href=\"#home\">\r\n                                        <Button variant='primary' onClick={e => confirmSubmit()}>Submit and\r\n                                            exit</Button>\r\n                                    </Nav.Link>\r\n                                </Nav>\r\n                                <Nav className=\"ml-auto\">\r\n\r\n                                    <Nav.Link href=\"#link\">\r\n                                        <div>\r\n                                            <Badge className=\"mr-2\">\r\n                                                <span className=\"mr-2\">{currentUserWorkshop.student.StudentID}</span>\r\n                                                <span className=\"mr-2\">|</span>\r\n                                                <span>{currentUserWorkshop.student.FirstName_Th} {currentUserWorkshop.student.LastName_Th}</span>\r\n                                            </Badge>\r\n                                            <Button variant=\"danger\">Logout</Button>\r\n                                        </div>\r\n                                    </Nav.Link>\r\n                                </Nav>\r\n                            </Navbar.Collapse>\r\n                        </Navbar>\r\n                    </div>\r\n                    <div className=\"exam-content\">\r\n                        <Card className={classNames(' mb-4', {\r\n                            'bg-primary text-light': filter == '1',\r\n                            'bg-success text-light': filter == '2',\r\n                            'bg-warning text-dark': filter == '3',\r\n                            'bg-danger text-light': filter == '4',\r\n                        })}>\r\n                            <Card.Header>Your workshop documents {(() => {\r\n                                switch (filter) {\r\n                                    case '1':\r\n                                        return <strong>Microsoft Word</strong>;\r\n                                    case '2':\r\n                                        return <strong>Microsoft Excel</strong>;\r\n                                    case '3':\r\n                                        return <strong>Microsoft Powerpoint</strong>;\r\n                                    case '4':\r\n                                        return <strong>Microsoft Access</strong>;\r\n                                }\r\n                            })()}</Card.Header>\r\n                            <Card.Body>\r\n                                {\r\n                                    (() => {\r\n                                        let existed = currentUserWorkshop['practice_answer'].find(v => v.PracticeID == filter);\r\n                                        if (existed) {\r\n                                            return <Badge variant='light' style={{fontSize: '15px'}}>\r\n                                                <Button variant='light' onClick={e => download(existed.RowID)}>\r\n                                                    <FontAwesomeIcon style={{fontSize: '20px'}} className='mr-1'\r\n                                                                     icon={faCheckCircle}/>\r\n                                                    <span>{existed.FileName}</span>\r\n                                                </Button>\r\n                                            </Badge>\r\n                                        } else {\r\n                                            return <span>After you finish please upload your file here.</span>\r\n                                        }\r\n                                    })()\r\n                                }\r\n                            </Card.Body>\r\n                            <Card.Footer className=\"bg-dark text-light\">\r\n                                <strong className=\"mr-4\">Upload document for score:</strong>\r\n                                <input type='file' onChange={e => uploadFile(e)}/>\r\n                            </Card.Footer>\r\n                        </Card>\r\n                        <div>\r\n                            {\r\n                                questions.filter(question => question.PracticeID == filter).map((question, i) => {\r\n                                    let practice = getPracticeName(question.PracticeID);\r\n                                    return <Row key={'question_' + i}>\r\n                                        <Col>\r\n                                            <div className=\"mb-4\">\r\n                                                <Card>\r\n                                                    <Card.Header>\r\n                                                        <div style={{color: practice.color}}>{practice.icon} {practice.name} Questions</div>\r\n                                                    </Card.Header>\r\n                                                    <Card.Body style={{overflowX: 'auto'}}>\r\n                                                        <div\r\n                                                            dangerouslySetInnerHTML={{__html: question.PracticeQuestionTh}}></div>\r\n                                                    </Card.Body>\r\n                                                </Card>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </Container>\r\n                <Modal className='exam-confirm-modal' size='lg' show={showConfirmSubmit} onHide={e => setShowConfirmSubmit(false)}>\r\n                    <Modal.Header closeButton>\r\n                        <span className=\"text-uppercase\">Confirm to submit</span>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className='mb-2'><strong>Uploaded file:</strong></div>\r\n                        {\r\n                            currentUserWorkshop.practice_answer.map(answer => {\r\n                                let practice = getPracticeName(answer.PracticeID);\r\n                                return <Alert key={'wk_'+answer.PracticeID} variant={practice.class}>\r\n                                    <strong className='mr-2'>{practice.icon} {practice.name}</strong>\r\n                                    <a href='#' className={'text-'+practice.class} onClick={e=>{e.preventDefault();download(answer.RowID)}}>{answer.FileName}</a>\r\n                                </Alert>\r\n                            })\r\n                        }\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"primary\" onClick={e => setShowConfirmSubmit(false)}>\r\n                            Yes, Submit and exit\r\n                        </Button>\r\n                        <Button variant=\"secondary\" onClick={e => setShowConfirmSubmit(false)}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n            :\r\n            <Alert variant='info'>Loading...</Alert>\r\n        }\r\n    </>\r\n}\r\nexport default Workshop;\r\n","E:\\Github\\ems_zoom\\src\\client-ui\\client-home.js",[],"E:\\Github\\ems_zoom\\src\\client-ui\\student.js",["164","165","166"],"import {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Exam from \"./exam\";\r\nimport ClientHome from \"./client-home\";\r\nimport LoginClient from \"./login-client\";\r\nimport {useContext, useEffect} from \"react\";\r\nimport StateContext from \"../mobx/global-context\";\r\nimport {checkLogin} from \"../client-components/client-services\";\r\nimport {Alert} from \"react-bootstrap\";\r\nimport {observer} from \"mobx-react\";\r\n\r\nlet timer;\r\nconst Student = ()=>{\r\n    const state = useContext(StateContext);\r\n    useEffect(() => {\r\n        checker();\r\n        timer=setInterval(() => {\r\n            checker()\r\n        }, 5 * 60000)\r\n        return ()=>{\r\n            clearInterval(timer);\r\n        }\r\n    }, []);\r\n    function checker() {\r\n        checkLogin().then(user => {\r\n            if (user) {\r\n                state.setStudent(user);\r\n            } else {\r\n                state.setStudent(null);\r\n            }\r\n        })\r\n    }\r\n    if (typeof state.currentStudent == 'undefined') return <Alert variant='info'>Loading...</Alert>\r\n    return <>\r\n        {state.currentStudent\r\n            ?\r\n            <Switch>\r\n                <Route path=\"/\" exact component={ClientHome}/>\r\n                <Route path=\"/exam\" exact exact component={Exam}/>\r\n                <Route path=\"/exam/:type/:StdRegistID/:SchdDetailID\" component={Exam}/>\r\n            </Switch>\r\n            :\r\n            <Switch>\r\n                <Route path=\"/\" exact component={ClientHome}/>\r\n                <Route path=\"*\" component={LoginClient}/>\r\n            </Switch>\r\n        }\r\n    </>\r\n}\r\nexport default observer(Student);","E:\\Github\\ems_zoom\\src\\ui\\view-student.js",["167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200"],"E:\\Github\\ems_zoom\\src\\mobx\\mobx-store.js",["201","202"],"import {makeAutoObservable} from \"mobx\";\r\n\r\nclass MobxStore {\r\n    currentUser = void 0;\r\n    currentStudent = void 0;\r\n\r\n    scheduleMenu=[];\r\n\r\n    studentPicture={};\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    setStudentPicture(Username,student_image_data){\r\n        this.studentPicture={\r\n            ...this.studentPicture,\r\n            [Username]:student_image_data\r\n        }\r\n    }\r\n\r\n    setUser(user) {\r\n        this.currentUser = user;\r\n    }\r\n\r\n    setStudent(student){\r\n        this.currentStudent=student;\r\n    }\r\n\r\n    studentApprove(code) {\r\n        let student = this.findStudent(code);\r\n        if (student) {\r\n            student.approved = true;\r\n        }\r\n    }\r\n\r\n    studentReject(code) {\r\n        let student = this.findStudent(code);\r\n        if (student) {\r\n            student.approved = false;\r\n        }\r\n    }\r\n    findStudent(code) {\r\n        let student = void 0;\r\n        Object.keys(this.students).map(group => {\r\n            if (!student) student = this.students[group].find(std => std.code == code);\r\n        })\r\n        return student;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default MobxStore;\r\n","E:\\Github\\ems_zoom\\src\\layouts\\full-layout.js",["203","204"],"import React from 'react';\r\nimport {Col, Container, Navbar, Row} from \"react-bootstrap\";\r\nimport TopMenu from \"../components/top-menu\";\r\nimport Footer from \"../components/footer\";\r\nimport {useParams,withRouter} from \"react-router-dom\";\r\n\r\nconst FullLayout = (props)=>{\r\n    const params = useParams();\r\n    return <>\r\n        <div className=\"container-wrapper\">\r\n            <TopMenu/>\r\n            <Container>\r\n                <Row>\r\n                    <Col>{props.children}</Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n        <Footer/>\r\n    </>\r\n}\r\nexport default withRouter(FullLayout);\r\n","E:\\Github\\ems_zoom\\src\\components\\services.js",["205","206","207","208"],"import axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport {confirmAlert} from \"react-confirm-alert\";\r\nimport {mobxStore} from \"../App\";\r\n\r\nexport function getSchedules(month,year){\r\n    return  new Promise(resolve => {\r\n        axios.post('/check_in_resful_api.php?method=schedule',{m:parseInt(month),y:parseInt(year)})\r\n            .then(res=>{\r\n               let resultWithGroup={};\r\n               res.data.results.sort((a,b)=>{\r\n                  let aDate = moment(a.ExamDate);\r\n                  let bDate = moment(b.ExamDate);\r\n                   if(aDate==bDate)return 0;\r\n                   if(aDate>bDate)return 1;\r\n                   return -1;\r\n               });\r\n               res.data.results.map(schd=>{\r\n                    schd = tranformScheduleDate(schd);\r\n                    if(!resultWithGroup[schd.ExamDate])resultWithGroup[schd.ExamDate]=[];\r\n                    resultWithGroup[schd.ExamDate].push(schd);\r\n                });\r\n                Object.keys(resultWithGroup).map(key=>{\r\n                    resultWithGroup[key].sort((a,b)=>{\r\n                        let aDate = parseInt(a.ExamTimeStart);\r\n                        let bDate = parseInt(b.ExamTimeEnd);\r\n                        if(aDate==bDate)return 0;\r\n                        if(aDate>bDate)return 1;\r\n                        return -1;\r\n                    })\r\n                })\r\n                console.log(resultWithGroup);\r\n                resolve(resultWithGroup);\r\n            })\r\n    })\r\n}\r\n\r\nexport function getEmailByScheduleDetail(SchdID,SchdDetailID){\r\n    return new Promise(resolve => {\r\n        axios.post('/check_in_resful_api.php?method=students',{SchdID,SchdDetailID})\r\n            .then(res=>{\r\n                let {data} = res;\r\n                resolve(data);\r\n            }).catch(e=>{\r\n                resolve(null)\r\n        });\r\n    })\r\n}\r\n\r\nexport function getScheduleInfo(SchdID,SchdDetailID){\r\n    return new Promise(async resolve => {\r\n        let schedule = await request('schedule-info',{SchdID,SchdDetailID});\r\n        schedule = tranformScheduleDate(schedule);\r\n        resolve(schedule);\r\n    });\r\n}\r\n\r\nexport function getCheckInStudents(SchdID,SchdDetailID,group){\r\n    return request('get-check-in-students',{SchdID,SchdDetailID,group})\r\n}\r\n\r\nexport function changeCheckInState(StdRegistID,state){\r\n    return request('change-state',{StdRegistID,state})\r\n}\r\n\r\nexport function getMeetURL(SchdID, SchdDetailID,group){\r\n    return request('get-meet-url',{SchdID,SchdDetailID,group})\r\n}\r\n\r\nexport function setMeetURL(SchdID, SchdDetailID,group,url){\r\n    return request('set-meet-url',{SchdID,SchdDetailID,group,url})\r\n}\r\n\r\nexport function removeMeetURL(SchdID, SchdDetailID,group){\r\n    return request('remove-meet-url',{SchdID,SchdDetailID,group})\r\n}\r\n\r\nexport function pairUserData(pairData=[]){\r\n    return request('pair-user',{pairData})\r\n}\r\n\r\nexport function checkLogin(){\r\n    return request('check-login')\r\n}\r\n\r\nexport function userLogout(){\r\n    return request('logout')\r\n}\r\n\r\nexport function userLogin(username,password){\r\n    return request('login',{username,password})\r\n}\r\n\r\nexport function confirmBox(title,detail,fn){\r\n    confirmAlert({\r\n        title:title,\r\n        message:detail?detail:'Do you want to do?',\r\n        buttons:[\r\n            {\r\n                label: 'Yes',\r\n                onClick: () => fn()\r\n            },\r\n            {\r\n                label: 'No',\r\n            }\r\n        ]\r\n    });\r\n}\r\n\r\nexport function tranformScheduleDate(schedule){\r\n    schedule.ExamDate=schedule.ExamDate.split(' ')[0];\r\n    schedule.ExamTimeStart=schedule.ExamTimeStart.split(' ')[1];\r\n    schedule.ExamTimeEnd=schedule.ExamTimeEnd.split(' ')[1];\r\n    return schedule;\r\n}\r\n\r\nexport async function loadStudentPicture(Username){\r\n    if(!mobxStore.studentPicture[Username]){\r\n        let results = await request('get-student-picture',{Username});\r\n        if(results){\r\n            mobxStore.setStudentPicture(Username,results.student_image_data);\r\n        }else{\r\n            mobxStore.setStudentPicture(Username,null);\r\n        }\r\n    }\r\n}\r\n\r\nfunction request(method,params={}){\r\n    return new Promise(resolve => {\r\n        axios.post('/check_in_resful_api.php?method='+method,params)\r\n            .then(res=>{\r\n                resolve(res.data);\r\n            }).catch(e=>{\r\n                document.location.href='/login'\r\n            // resolve(null)\r\n        });\r\n    })\r\n}\r\n","E:\\Github\\ems_zoom\\src\\client-ui\\exam.js",["209","210","211","212","213","214"],"import {useParams} from \"react-router-dom\";\r\nimport CheckInProcess from \"../client-components/check-in-process\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport Workshop from \"./workshop\";\r\nimport ExamScheduleDay from \"../client-components/exam-schedule-day\";\r\nimport {checkLogin, getExamSchedules} from \"../client-components/client-services\";\r\nimport {observer} from \"mobx-react\";\r\nimport StateContext from \"../mobx/global-context\";\r\nimport {toast} from \"react-toastify\";\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst Exam=()=>{\r\n    const {type,StdRegistID, SchdDetailID} = useParams();\r\n    const state = useContext(StateContext);\r\n    const history = useHistory();\r\n    const [examSchedule,setExamSchedule] = useState();\r\n\r\n    useEffect(()=>{\r\n        getExamSchedules().then(data=>{\r\n            setExamSchedule(data);\r\n        });\r\n    },[]);\r\n    function onApproved(){\r\n\r\n    }\r\n    function onDenied(){\r\n\r\n    }\r\n    if(!type){\r\n        return <ExamScheduleDay schedules={examSchedule}/>\r\n    }\r\n    return <CheckInProcess\r\n        state={state}\r\n        StdRegistID={StdRegistID}\r\n        onApproved={onApproved}\r\n        onDenied={onDenied}\r\n    >\r\n        {type=='workshop' &&\r\n            <Workshop/>\r\n        }\r\n        {type=='theory' &&\r\n        <Workshop/>\r\n        }\r\n    </CheckInProcess>\r\n}\r\nexport default observer(Exam);\r\n","E:\\Github\\ems_zoom\\src\\client-ui\\login-client.js",[],"E:\\Github\\ems_zoom\\src\\components\\schedule.js",["215","216","217","218","219","220"],"import {Alert, Badge, Button, Card, Col, Row, Modal, Form} from \"react-bootstrap\";\r\nimport {observer} from \"mobx-react\";\r\nimport {useContext, useEffect, useState} from \"react\";\r\nimport StateContext from \"../mobx/global-context\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Config from \"../config\";\r\nimport {getEmailByScheduleDetail, getSchedules} from \"./services\";\r\nimport {$mobx} from \"mobx\";\r\n\r\nconst Schedule = ({month,year}) => {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [studentsWithGroup, setStudentsWithGroup] = useState(null);\r\n    const [schedules,setSchedules] = useState(null);\r\n    const state = useContext(StateContext);\r\n\r\n    useEffect(()=>{\r\n        state.scheduleMenu=[];\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n       getSchedules(month,year).then(results=>{\r\n           setSchedules(results);\r\n       });\r\n    },[month,year]);\r\n\r\n    async function showEmail(schd){\r\n        let studentsWithGroup = await getEmailByScheduleDetail(schd.SchdID,schd.SchdDetailID);\r\n        setStudentsWithGroup(studentsWithGroup);\r\n        setShowModal(true);\r\n    }\r\n    function hideModal(){\r\n        setStudentsWithGroup(null);\r\n        setShowModal(false);\r\n    }\r\n    return <>\r\n        <h3>รอบสอบของ ปี {year}</h3>\r\n        {\r\n            schedules && Object.keys(schedules).map(day => {\r\n                return (\r\n                    <Card key={day} className=\"mt-2\">\r\n                        <Card.Header>\r\n                            <Card.Text>การสอบวันที่ {day}</Card.Text>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Row>\r\n                                {schedules[day].map((schd,i) =>\r\n                                    <SchdBlock key={`${schd.examDate}_${i}`} schd={schd} onEmail={showEmail.bind(this,schd)}/>\r\n                                )}\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                )\r\n            })\r\n        }\r\n        <Modal show={showModal} onHide={hideModal}>\r\n            <Modal.Header closeButton>\r\n                {studentsWithGroup\r\n                    ?<Modal.Title>Email ในรอบสอบ {studentsWithGroup.title}</Modal.Title>\r\n                    :<Modal.Title>Loading...</Modal.Title>\r\n                }\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {\r\n                    studentsWithGroup\r\n                        ?<>\r\n                            {\r\n                                Object.keys(studentsWithGroup).map(group=>{\r\n                                    let emailText='';\r\n                                    return <div key={group}>\r\n                                        <h3 style={{textTransform:'capitalize'}}>{group}</h3>\r\n                                        {\r\n                                            studentsWithGroup[group].map(std=>{\r\n                                                emailText+=`${std.RegKKU.KKUMAIL},`\r\n                                            })\r\n                                        }\r\n                                        <Form.Control rows={5} as='textarea'\r\n                                                      onChange={e=>{}}\r\n                                                      onClick={e=>e.target.select()}\r\n                                                      value={emailText.substr(0,emailText.length-1)}/>\r\n                                    </div>\r\n                                })\r\n                            }\r\n                        </>\r\n                        :<div>Loading....</div>\r\n                }\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={hideModal}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={hideModal}>\r\n                    Save Changes\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    </>\r\n}\r\n\r\n\r\nconst SchdBlock = ({schd,onEmail}) => {\r\n    const history = useHistory();\r\n    return <Col md={4}>\r\n        <div style={{padding: '10px'}}>\r\n            <Card>\r\n                <Card.Header>\r\n                    <Card.Title>\r\n                        <small>{schd.ExamTimeStart}-{schd.ExamTimeEnd}</small>\r\n                    </Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <div className=\"text-center\">\r\n                    {schd.ModuleType==\"1\"?<Alert variant=\"danger\">ทฤษฎี</Alert>:<Alert variant=\"info\">ปฏิบัติ</Alert>}\r\n                        <div className=\"text-center\">\r\n                            <Button className=\"ml-2\" onClick={e => history.push(Config.adminPath(`/schedule/${schd.SchdID}/${schd.SchdDetailID}`))}>Enter</Button>\r\n                            <Button variant=\"secondary\" className=\"ml-2\" onClick={onEmail}>Email</Button>\r\n                        </div>\r\n                    </div>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <Card.Text className=\"text-right\">Student: {schd.studentCount}</Card.Text>\r\n                </Card.Footer>\r\n            </Card>\r\n        </div>\r\n    </Col>\r\n}\r\n\r\nexport default observer(Schedule);\r\n","E:\\Github\\ems_zoom\\src\\components\\footer.js",["221"],"import {Container} from \"react-bootstrap\";\r\n\r\nconst Footer=()=>{\r\n    return <div className=\"footer\">\r\n        <div style={{padding:'10px'}}></div>\r\n    </div>\r\n}\r\nexport default Footer;\r\n","E:\\Github\\ems_zoom\\src\\components\\top-menu.js",["222","223","224","225","226"],"import {observer} from \"mobx-react\";\r\nimport {useContext} from \"react\";\r\nimport StateContext from \"../mobx/global-context\";\r\nimport {useLocation,NavLink,useParams,withRouter,useHistory} from 'react-router-dom';\r\nimport {Badge, Button} from \"react-bootstrap\";\r\nimport {userLogout} from \"./services\";\r\nimport Config from \"../config\";\r\n\r\n\r\nconst TopMenu=(props)=>{\r\n    const state = useContext(StateContext);\r\n    const history = useHistory();\r\n    const params = useParams();\r\n    async function logout(){\r\n        await userLogout();\r\n        state.setUser(null);\r\n        history.push(Config.adminPath('/login'));\r\n    }\r\n    return <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <a className=\"navbar-brand\" href=\"#\">Ems Check-in</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\r\n                aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to={Config.adminPath()} exact>Schedule</NavLink>\r\n                </li>\r\n                {\r\n                    state.scheduleMenu.map(mn=>\r\n                        <li key={mn.title} className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to={Config.adminPath(mn.to)} exact>-> {mn.title}</NavLink>\r\n                        </li>\r\n                    )\r\n                }\r\n            </ul>\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/\" exact>\r\n                        Username: <strong className=\"mr-2\">{state.currentUser.username}</strong><Button variant=\"danger\" onClick={e=>{logout()}}>Logout</Button>\r\n                    </NavLink>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </nav>\r\n}\r\nexport default observer(TopMenu);\r\n","E:\\Github\\ems_zoom\\src\\client-components\\exam-schedule-day.js",["227","228"],"import Header from \"./header\";\r\nimport {Badge, Button, Card, Col, Container, Row} from \"react-bootstrap\";\r\nimport classNames from 'classnames'\r\nimport {useHistory} from 'react-router-dom';\r\nconst striptags = require('striptags');\r\n\r\nconst ExamScheduleDay = ({schedules})=>{\r\n    console.log(schedules);\r\n    const history = useHistory();\r\n    if(!schedules)return <div>Loading...</div>\r\n    return <div>\r\n        <Header/>\r\n        <Container className=\"mt-4\">\r\n            <Row>\r\n                {\r\n                    schedules.map(schd=>{\r\n                        return <Col key={schd.SchdDetailID} md={6} className=\"mb-2\">\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    <div>{striptags(schd.DateRegist_Desc_Th)}</div>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    {schd.ModuleType=='1'?\r\n                                        <Badge variant='danger' className=\"mr-2\">Theory</Badge>\r\n                                        :\r\n                                        <Badge variant='info' className=\"mr-2\">Workshop</Badge>\r\n                                    }\r\n                                    <span>{schd.ExamDate} / {schd.ExamTimeStart}-{schd.ExamTimeEnd}</span>\r\n                                </Card.Body>\r\n                                <Card.Footer>\r\n                                    <div className=\"text-right\">\r\n                                        <Button variant='primary' className=\"ml-auto\" onClick={e=>{\r\n                                            let examType = schd.ModuleType?'workshop':'theory';\r\n                                            history.push(`/exam/${examType}/${schd.StdRegistID}/${schd.SchdDetailID}`)\r\n                                        }}>Start Exam</Button>\r\n                                    </div>\r\n                                </Card.Footer>\r\n                            </Card>\r\n                        </Col>\r\n                    })\r\n                }\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n}\r\nexport default ExamScheduleDay;\r\n","E:\\Github\\ems_zoom\\src\\client-components\\client-services.js",[],"E:\\Github\\ems_zoom\\src\\client-components\\check-in-process.js",["229","230","231","232","233","234","235"],"import {useContext, useEffect, useRef, useState} from \"react\";\r\nimport {checkClient, getMyPicture, studentLogout} from \"./client-services\";\r\nimport {Alert, Badge, Button, Card, Col, Container, Image, Row, Table} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport QRCode from 'qrcode';\r\nimport StateContext from \"../mobx/global-context\";\r\nimport {observer} from \"mobx-react\";\r\n\r\nconst CheckInProcess = ({state, StdRegistID, onApproved, onDenied, children}) => {\r\n\r\n    const [approve, setApprove] = useState(void 0);\r\n    const [meetUrl, setMeetUrl] = useState(null);\r\n    const [meetQRCode, setMeetQRCode] = useState(null);\r\n    const [myPicture, setMyPicture] = useState(void 0);\r\n    const timer = useRef(null);\r\n    const last_update = useRef(null);\r\n    const last_update_url = useRef(null);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        checker();\r\n        timer.current = setInterval(() => checker(), 5000);\r\n        return () => {\r\n            console.log('CLEAR');\r\n            clearInterval(timer.current);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (state.currentStudent) {\r\n            getMyPicture().then(picture=>{\r\n                if(picture){\r\n                    setMyPicture(picture.student_image_data)\r\n                }\r\n            })\r\n        }\r\n    }, [state.currentStudent])\r\n\r\n\r\n    function getQRCodeToState(url) {\r\n        if (!url) {\r\n            setMeetQRCode(null);\r\n            return;\r\n        }\r\n        QRCode.toDataURL(url)\r\n            .then(b64image => {\r\n                setMeetQRCode(b64image);\r\n            })\r\n            .catch(err => {\r\n                setMeetQRCode(null);\r\n            })\r\n    }\r\n\r\n    function checker() {\r\n        checkClient(StdRegistID).then(data => {\r\n            console.log(data);\r\n            if (last_update.current != data.last_update || last_update_url.current != data.last_update_url) {\r\n                if (data.check_in_status == \"1\") {\r\n                    setApprove(true);\r\n                    onApproved();\r\n                } else {\r\n                    if (data.meet_url) {\r\n                        let url = data.meet_url.match(/^http/) ? data.meet_url : `https://${data.meet_url}`;\r\n                        setMeetUrl(url);\r\n                        getQRCodeToState(url);\r\n                    } else {\r\n                        setMeetUrl(null);\r\n                        getQRCodeToState(null);\r\n                    }\r\n                    setApprove(false);\r\n                    onDenied();\r\n                }\r\n                last_update.current = data.last_update;\r\n                last_update_url.current = data.last_update_url;\r\n            }\r\n        });\r\n    }\r\n\r\n    async function logout() {\r\n        await studentLogout();\r\n        state.setStudent(null);\r\n        history.push('/login');\r\n    }\r\n\r\n    if (typeof approve == 'undefined') return <Alert variant='info'>Loading...</Alert>;\r\n    if (!approve) {\r\n        return <Container>\r\n            <Row>\r\n                <Col>\r\n                    <Card className=\"mt-4 bg-dark text-white\">\r\n                        <Card.Header>EMS Check-In</Card.Header>\r\n                        <Card.Body>\r\n                            <div className=\"text-center\">\r\n                                <Row>\r\n                                    <Col className=\"col-auto\">\r\n                                        {typeof myPicture == 'undefined'?\r\n                                         <Alert variant=\"info\">Loading...</Alert>\r\n                                            :\r\n                                            <>\r\n                                                {myPicture ?\r\n                                                    <div className=\"text-center\"><Image width=\"150px\" src={myPicture} fluid rounded></Image>\r\n                                                    </div>\r\n                                                    :\r\n                                                    <div className=\"text-center\"><Image width=\"150px\" src='/images/user_avatar.svg'\r\n                                                                                        fluid></Image></div>\r\n                                                }\r\n                                            </>\r\n                                        }\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <div style={{width:'400px'}}>\r\n                                            <Table className=\"text-white\">\r\n                                                <tbody>\r\n                                                <tr>\r\n                                                    <td colSpan={2}>Student detail</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th>Student ID:</th>\r\n                                                    <td>{state.currentStudent.studentID}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th>Fullname:</th>\r\n                                                    <td>{state.currentStudent.fname} {state.currentStudent.lname}</td>\r\n                                                </tr>\r\n                                                </tbody>\r\n                                            </Table>\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        {\r\n                                            !meetQRCode\r\n                                                ?\r\n                                                <>\r\n                                        <Alert variant='danger'>Please <span\r\n                                            className=\"badge badge-info\">Check-in</span> before start</Alert>\r\n                                                    <a className=\"btn btn-primary btn-sm ml-2 disabled\">Waiting meet...</a>\r\n                                                </>\r\n                                                :\r\n                                                <div className=\"text-center\">\r\n                                        <Alert variant=\"danger\" className=\"mb-2\">Please <span\r\n                                            className=\"badge badge-info\">Check-in</span> before start exam.</Alert>\r\n                                                    <div>\r\n                                                        <Alert variant='info' className=\"mb-2\">Use your mobile devices scan this\r\n                                                            QR-CODE to start Google Meet</Alert>\r\n                                                        <div className=\"mb-2\"><Image src={meetQRCode} rounded></Image></div>\r\n                                                        <div><Badge variant='success' className='mr-2'>Google Meet - Join:</Badge>\r\n                                                            <span style={{fontSize:'20px'}}>\r\n                                                                {(()=>{\r\n                                                                    let u = meetUrl.split('/');\r\n                                                                    return u[u.length-1];\r\n                                                                })()}\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                        }\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                            <div className=\"text-right\"><Button onClick={e => logout()} variant='danger'>Logout</Button>\r\n                            </div>\r\n                        </Card.Footer>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    }\r\n    return children;\r\n}\r\nexport default observer(CheckInProcess);\r\n","E:\\Github\\ems_zoom\\src\\client-components\\header.js",[],{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","severity":1,"message":"241","line":2,"column":36,"nodeType":"242","messageId":"243","endLine":2,"endColumn":44},{"ruleId":"240","severity":1,"message":"244","line":3,"column":8,"nodeType":"242","messageId":"243","endLine":3,"endColumn":13},{"ruleId":"240","severity":1,"message":"245","line":7,"column":8,"nodeType":"242","messageId":"243","endLine":7,"endColumn":12},{"ruleId":"240","severity":1,"message":"246","line":8,"column":8,"nodeType":"242","messageId":"243","endLine":8,"endColumn":18},{"ruleId":"240","severity":1,"message":"247","line":9,"column":8,"nodeType":"242","messageId":"243","endLine":9,"endColumn":17},{"ruleId":"240","severity":1,"message":"248","line":10,"column":8,"nodeType":"242","messageId":"243","endLine":10,"endColumn":19},{"ruleId":"240","severity":1,"message":"249","line":11,"column":25,"nodeType":"242","messageId":"243","endLine":11,"endColumn":30},{"ruleId":"240","severity":1,"message":"250","line":14,"column":9,"nodeType":"242","messageId":"243","endLine":14,"endColumn":18},{"ruleId":"240","severity":1,"message":"251","line":15,"column":9,"nodeType":"242","messageId":"243","endLine":15,"endColumn":19},{"ruleId":"240","severity":1,"message":"252","line":16,"column":9,"nodeType":"242","messageId":"243","endLine":16,"endColumn":14},{"ruleId":"240","severity":1,"message":"253","line":18,"column":8,"nodeType":"242","messageId":"243","endLine":18,"endColumn":16},{"ruleId":"240","severity":1,"message":"254","line":19,"column":8,"nodeType":"242","messageId":"243","endLine":19,"endColumn":18},{"ruleId":"240","severity":1,"message":"255","line":20,"column":8,"nodeType":"242","messageId":"243","endLine":20,"endColumn":14},{"ruleId":"240","severity":1,"message":"256","line":21,"column":8,"nodeType":"242","messageId":"243","endLine":21,"endColumn":12},{"ruleId":"240","severity":1,"message":"257","line":22,"column":8,"nodeType":"242","messageId":"243","endLine":22,"endColumn":19},{"ruleId":"240","severity":1,"message":"258","line":29,"column":9,"nodeType":"242","messageId":"243","endLine":29,"endColumn":17},{"ruleId":"240","severity":1,"message":"259","line":4,"column":8,"nodeType":"242","messageId":"243","endLine":4,"endColumn":13},{"ruleId":"260","severity":1,"message":"261","line":26,"column":8,"nodeType":"262","endLine":26,"endColumn":10,"suggestions":"263"},{"ruleId":"260","severity":1,"message":"264","line":26,"column":7,"nodeType":"262","endLine":26,"endColumn":9,"suggestions":"265"},{"ruleId":"266","severity":1,"message":"267","line":31,"column":41,"nodeType":"268","messageId":"269","endLine":31,"endColumn":43},{"ruleId":"270","severity":1,"message":"271","line":40,"column":38,"nodeType":"272","messageId":"273","endLine":40,"endColumn":40},{"ruleId":"240","severity":1,"message":"274","line":1,"column":53,"nodeType":"242","messageId":"243","endLine":1,"endColumn":64},{"ruleId":"240","severity":1,"message":"275","line":2,"column":8,"nodeType":"242","messageId":"243","endLine":2,"endColumn":14},{"ruleId":"240","severity":1,"message":"276","line":4,"column":9,"nodeType":"242","messageId":"243","endLine":4,"endColumn":13},{"ruleId":"260","severity":1,"message":"277","line":25,"column":8,"nodeType":"262","endLine":25,"endColumn":10,"suggestions":"278"},{"ruleId":"279","severity":1,"message":"280","line":31,"column":9,"nodeType":"281","messageId":"282","endLine":60,"endColumn":10},{"ruleId":"279","severity":1,"message":"280","line":90,"column":29,"nodeType":"281","messageId":"282","endLine":107,"endColumn":30},{"ruleId":"270","severity":1,"message":"271","line":111,"column":72,"nodeType":"272","messageId":"273","endLine":111,"endColumn":74},{"ruleId":"270","severity":1,"message":"271","line":112,"column":73,"nodeType":"272","messageId":"273","endLine":112,"endColumn":75},{"ruleId":"270","severity":1,"message":"271","line":113,"column":74,"nodeType":"272","messageId":"273","endLine":113,"endColumn":76},{"ruleId":"270","severity":1,"message":"271","line":114,"column":79,"nodeType":"272","messageId":"273","endLine":114,"endColumn":81},{"ruleId":"270","severity":1,"message":"271","line":115,"column":75,"nodeType":"272","messageId":"273","endLine":115,"endColumn":77},{"ruleId":"270","severity":1,"message":"271","line":154,"column":61,"nodeType":"272","messageId":"273","endLine":154,"endColumn":63},{"ruleId":"270","severity":1,"message":"271","line":155,"column":61,"nodeType":"272","messageId":"273","endLine":155,"endColumn":63},{"ruleId":"270","severity":1,"message":"271","line":156,"column":60,"nodeType":"272","messageId":"273","endLine":156,"endColumn":62},{"ruleId":"270","severity":1,"message":"271","line":157,"column":60,"nodeType":"272","messageId":"273","endLine":157,"endColumn":62},{"ruleId":"279","severity":1,"message":"280","line":160,"column":33,"nodeType":"281","messageId":"282","endLine":169,"endColumn":34},{"ruleId":"270","severity":1,"message":"271","line":174,"column":117,"nodeType":"272","messageId":"273","endLine":174,"endColumn":119},{"ruleId":"270","severity":1,"message":"271","line":196,"column":82,"nodeType":"272","messageId":"273","endLine":196,"endColumn":84},{"ruleId":"283","severity":1,"message":"284","line":229,"column":37,"nodeType":"285","endLine":229,"endColumn":141},{"ruleId":"240","severity":1,"message":"241","line":1,"column":9,"nodeType":"242","messageId":"243","endLine":1,"endColumn":17},{"ruleId":"260","severity":1,"message":"261","line":22,"column":8,"nodeType":"262","endLine":22,"endColumn":10,"suggestions":"286"},{"ruleId":"287","severity":1,"message":"288","line":38,"column":43,"nodeType":"289","endLine":38,"endColumn":48},{"ruleId":"240","severity":1,"message":"290","line":6,"column":9,"nodeType":"242","messageId":"243","endLine":6,"endColumn":15},{"ruleId":"240","severity":1,"message":"291","line":7,"column":10,"nodeType":"242","messageId":"243","endLine":7,"endColumn":13},{"ruleId":"240","severity":1,"message":"292","line":13,"column":5,"nodeType":"242","messageId":"243","endLine":13,"endColumn":29},{"ruleId":"240","severity":1,"message":"293","line":17,"column":10,"nodeType":"242","messageId":"243","endLine":17,"endColumn":22},{"ruleId":"260","severity":1,"message":"294","line":54,"column":8,"nodeType":"262","endLine":54,"endColumn":10,"suggestions":"295"},{"ruleId":"266","severity":1,"message":"296","line":62,"column":25,"nodeType":"268","messageId":"297","endLine":62,"endColumn":27},{"ruleId":"270","severity":1,"message":"271","line":65,"column":32,"nodeType":"272","messageId":"273","endLine":65,"endColumn":34},{"ruleId":"270","severity":1,"message":"271","line":65,"column":48,"nodeType":"272","messageId":"273","endLine":65,"endColumn":50},{"ruleId":"266","severity":1,"message":"267","line":65,"column":57,"nodeType":"298","messageId":"299","endLine":65,"endColumn":64},{"ruleId":"270","severity":1,"message":"271","line":72,"column":71,"nodeType":"272","messageId":"273","endLine":72,"endColumn":73},{"ruleId":"270","severity":1,"message":"300","line":75,"column":78,"nodeType":"272","messageId":"273","endLine":75,"endColumn":80},{"ruleId":"260","severity":1,"message":"301","line":88,"column":7,"nodeType":"262","endLine":88,"endColumn":24,"suggestions":"302"},{"ruleId":"266","severity":1,"message":"267","line":92,"column":24,"nodeType":"268","messageId":"269","endLine":92,"endColumn":26},{"ruleId":"270","severity":1,"message":"271","line":101,"column":33,"nodeType":"272","messageId":"273","endLine":101,"endColumn":35},{"ruleId":"270","severity":1,"message":"271","line":101,"column":59,"nodeType":"272","messageId":"273","endLine":101,"endColumn":61},{"ruleId":"270","severity":1,"message":"271","line":102,"column":33,"nodeType":"272","messageId":"273","endLine":102,"endColumn":35},{"ruleId":"270","severity":1,"message":"271","line":102,"column":59,"nodeType":"272","messageId":"273","endLine":102,"endColumn":61},{"ruleId":"303","severity":1,"message":"304","line":113,"column":30,"nodeType":"305","messageId":"306","endLine":113,"endColumn":31,"suggestions":"307"},{"ruleId":"270","severity":1,"message":"271","line":126,"column":17,"nodeType":"272","messageId":"273","endLine":126,"endColumn":19},{"ruleId":"270","severity":1,"message":"271","line":133,"column":53,"nodeType":"272","messageId":"273","endLine":133,"endColumn":55},{"ruleId":"266","severity":1,"message":"267","line":159,"column":25,"nodeType":"268","messageId":"269","endLine":159,"endColumn":27},{"ruleId":"266","severity":1,"message":"267","line":178,"column":42,"nodeType":"268","messageId":"269","endLine":178,"endColumn":44},{"ruleId":"240","severity":1,"message":"308","line":181,"column":31,"nodeType":"242","messageId":"243","endLine":181,"endColumn":40},{"ruleId":"270","severity":1,"message":"271","line":217,"column":49,"nodeType":"272","messageId":"273","endLine":217,"endColumn":51},{"ruleId":"270","severity":1,"message":"271","line":236,"column":54,"nodeType":"272","messageId":"273","endLine":236,"endColumn":56},{"ruleId":"270","severity":1,"message":"271","line":236,"column":72,"nodeType":"272","messageId":"273","endLine":236,"endColumn":74},{"ruleId":"270","severity":1,"message":"271","line":237,"column":53,"nodeType":"272","messageId":"273","endLine":237,"endColumn":55},{"ruleId":"270","severity":1,"message":"271","line":238,"column":53,"nodeType":"272","messageId":"273","endLine":238,"endColumn":55},{"ruleId":"270","severity":1,"message":"271","line":254,"column":53,"nodeType":"272","messageId":"273","endLine":254,"endColumn":55},{"ruleId":"270","severity":1,"message":"271","line":332,"column":58,"nodeType":"272","messageId":"273","endLine":332,"endColumn":60},{"ruleId":"270","severity":1,"message":"271","line":374,"column":94,"nodeType":"272","messageId":"273","endLine":374,"endColumn":96},{"ruleId":"270","severity":1,"message":"271","line":395,"column":76,"nodeType":"272","messageId":"273","endLine":395,"endColumn":78},{"ruleId":"270","severity":1,"message":"271","line":412,"column":73,"nodeType":"272","messageId":"273","endLine":412,"endColumn":75},{"ruleId":"309","severity":1,"message":"310","line":438,"column":25,"nodeType":"285","endLine":438,"endColumn":64},{"ruleId":"266","severity":1,"message":"267","line":45,"column":46,"nodeType":"268","messageId":"269","endLine":45,"endColumn":48},{"ruleId":"270","severity":1,"message":"271","line":46,"column":79,"nodeType":"272","messageId":"273","endLine":46,"endColumn":81},{"ruleId":"240","severity":1,"message":"311","line":2,"column":25,"nodeType":"242","messageId":"243","endLine":2,"endColumn":31},{"ruleId":"240","severity":1,"message":"312","line":8,"column":11,"nodeType":"242","messageId":"243","endLine":8,"endColumn":17},{"ruleId":"270","severity":1,"message":"271","line":14,"column":28,"nodeType":"272","messageId":"273","endLine":14,"endColumn":30},{"ruleId":"266","severity":1,"message":"267","line":18,"column":41,"nodeType":"268","messageId":"269","endLine":18,"endColumn":43},{"ruleId":"266","severity":1,"message":"267","line":23,"column":53,"nodeType":"268","messageId":"269","endLine":23,"endColumn":55},{"ruleId":"270","severity":1,"message":"271","line":27,"column":33,"nodeType":"272","messageId":"273","endLine":27,"endColumn":35},{"ruleId":"240","severity":1,"message":"251","line":6,"column":9,"nodeType":"242","messageId":"243","endLine":6,"endColumn":19},{"ruleId":"240","severity":1,"message":"249","line":9,"column":9,"nodeType":"242","messageId":"243","endLine":9,"endColumn":14},{"ruleId":"240","severity":1,"message":"313","line":13,"column":30,"nodeType":"242","messageId":"243","endLine":13,"endColumn":42},{"ruleId":"240","severity":1,"message":"314","line":15,"column":11,"nodeType":"242","messageId":"243","endLine":15,"endColumn":18},{"ruleId":"270","severity":1,"message":"271","line":38,"column":14,"nodeType":"272","messageId":"273","endLine":38,"endColumn":16},{"ruleId":"270","severity":1,"message":"271","line":41,"column":14,"nodeType":"272","messageId":"273","endLine":41,"endColumn":16},{"ruleId":"240","severity":1,"message":"315","line":1,"column":16,"nodeType":"242","messageId":"243","endLine":1,"endColumn":21},{"ruleId":"240","severity":1,"message":"259","line":6,"column":8,"nodeType":"242","messageId":"243","endLine":6,"endColumn":13},{"ruleId":"240","severity":1,"message":"316","line":9,"column":9,"nodeType":"242","messageId":"243","endLine":9,"endColumn":14},{"ruleId":"260","severity":1,"message":"317","line":19,"column":7,"nodeType":"262","endLine":19,"endColumn":9,"suggestions":"318"},{"ruleId":"266","severity":1,"message":"267","line":73,"column":77,"nodeType":"268","messageId":"269","endLine":73,"endColumn":79},{"ruleId":"270","severity":1,"message":"271","line":113,"column":37,"nodeType":"272","messageId":"273","endLine":113,"endColumn":39},{"ruleId":"240","severity":1,"message":"319","line":1,"column":9,"nodeType":"242","messageId":"243","endLine":1,"endColumn":18},{"ruleId":"240","severity":1,"message":"320","line":4,"column":9,"nodeType":"242","messageId":"243","endLine":4,"endColumn":20},{"ruleId":"240","severity":1,"message":"321","line":4,"column":39,"nodeType":"242","messageId":"243","endLine":4,"endColumn":49},{"ruleId":"240","severity":1,"message":"315","line":5,"column":9,"nodeType":"242","messageId":"243","endLine":5,"endColumn":14},{"ruleId":"240","severity":1,"message":"312","line":13,"column":11,"nodeType":"242","messageId":"243","endLine":13,"endColumn":17},{"ruleId":"283","severity":1,"message":"284","line":20,"column":9,"nodeType":"285","endLine":20,"endColumn":46},{"ruleId":"240","severity":1,"message":"322","line":3,"column":8,"nodeType":"242","messageId":"243","endLine":3,"endColumn":18},{"ruleId":"270","severity":1,"message":"271","line":23,"column":53,"nodeType":"272","messageId":"273","endLine":23,"endColumn":55},{"ruleId":"240","severity":1,"message":"323","line":1,"column":9,"nodeType":"242","messageId":"243","endLine":1,"endColumn":19},{"ruleId":"240","severity":1,"message":"324","line":6,"column":8,"nodeType":"242","messageId":"243","endLine":6,"endColumn":20},{"ruleId":"260","severity":1,"message":"261","line":27,"column":8,"nodeType":"262","endLine":27,"endColumn":10,"suggestions":"325"},{"ruleId":"270","severity":1,"message":"300","line":57,"column":37,"nodeType":"272","messageId":"273","endLine":57,"endColumn":39},{"ruleId":"270","severity":1,"message":"300","line":57,"column":84,"nodeType":"272","messageId":"273","endLine":57,"endColumn":86},{"ruleId":"270","severity":1,"message":"271","line":58,"column":42,"nodeType":"272","messageId":"273","endLine":58,"endColumn":44},{"ruleId":"283","severity":1,"message":"326","line":136,"column":53,"nodeType":"285","endLine":136,"endColumn":105},"no-native-reassign",["327"],"no-negated-in-lhs",["328"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'Home' is defined but never used.","'FullLayout' is defined but never used.","'ViewGroup' is defined but never used.","'ViewStudent' is defined but never used.","'toast' is defined but never used.","'useEffect' is defined but never used.","'checkLogin' is defined but never used.","'Alert' is defined but never used.","'Workshop' is defined but never used.","'ClientHome' is defined but never used.","'Theory' is defined but never used.","'Exam' is defined but never used.","'LoginClient' is defined but never used.","'location' is assigned a value but never used.","'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checker'. Either include it or remove the dependency array.","ArrayExpression",["329"],"React Hook useEffect has missing dependencies: 'SchdDetailID', 'SchdID', and 'state'. Either include them or remove the dependency array.",["330"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'FormControl' is defined but never used.","'Footer' is defined but never used.","'Form' is defined but never used.","React Hook useEffect has missing dependencies: 'SchdDetailID', 'StdRegistID', and 'reloadWorkshopFile'. Either include them or remove the dependency array.",["331"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["332"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'render' is defined but never used.","'uid' is defined but never used.","'getEmailByScheduleDetail' is defined but never used.","'confirmAlert' is defined but never used.","React Hook useEffect has missing dependencies: 'SchdDetailID', 'SchdID', 'group', 'reloadStudents', and 'state'. Either include them or remove the dependency array.",["333"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","ReturnStatement","expectedReturnValue","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'students'. Either include it or remove the dependency array.",["334"],"no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["335","336"],"'StudentID' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Navbar' is defined but never used.","'params' is assigned a value but never used.","'SchdDetailID' is assigned a value but never used.","'history' is assigned a value but never used.","'Badge' is defined but never used.","'$mobx' is defined but never used.","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.",["337"],"'Container' is defined but never used.","'useLocation' is defined but never used.","'withRouter' is defined but never used.","'classNames' is defined but never used.","'useContext' is defined but never used.","'StateContext' is defined but never used.",["338"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"339","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"messageId":"350","fix":"351","desc":"352"},{"messageId":"353","fix":"354","desc":"355"},{"desc":"356","fix":"357"},{"desc":"339","fix":"358"},"Update the dependencies array to be: [checker]",{"range":"359","text":"360"},"Update the dependencies array to be: [SchdDetailID, SchdID, state]",{"range":"361","text":"362"},"Update the dependencies array to be: [SchdDetailID, StdRegistID, reloadWorkshopFile]",{"range":"363","text":"364"},{"range":"365","text":"360"},"Update the dependencies array to be: [SchdDetailID, SchdID, group, reloadStudents, state]",{"range":"366","text":"367"},"Update the dependencies array to be: [students, userPairingText]",{"range":"368","text":"369"},"removeEscape",{"range":"370","text":"371"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"372","text":"373"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [state]",{"range":"374","text":"375"},{"range":"376","text":"360"},[810,812],"[checker]",[1057,1059],"[SchdDetailID, SchdID, state]",[1166,1168],"[SchdDetailID, StdRegistID, reloadWorkshopFile]",[694,696],[2278,2280],"[SchdDetailID, SchdID, group, reloadStudents, state]",[3692,3709],"[students, userPairingText]",[4408,4409],"",[4408,4408],"\\",[761,763],"[state]",[1085,1087]]