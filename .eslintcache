[{"E:\\Github\\ems_zoom\\src\\index.js":"1","E:\\Github\\ems_zoom\\src\\reportWebVitals.js":"2","E:\\Github\\ems_zoom\\src\\App.js":"3","E:\\Github\\ems_zoom\\src\\ui\\home.js":"4","E:\\Github\\ems_zoom\\src\\ui\\view-student.js":"5","E:\\Github\\ems_zoom\\src\\ui\\view-schedule.js":"6","E:\\Github\\ems_zoom\\src\\mobx\\global-context.js":"7","E:\\Github\\ems_zoom\\src\\ui\\email.js":"8","E:\\Github\\ems_zoom\\src\\mobx\\mobx-store.js":"9","E:\\Github\\ems_zoom\\src\\ui\\login.js":"10","E:\\Github\\ems_zoom\\src\\layouts\\full-layout.js":"11","E:\\Github\\ems_zoom\\src\\components\\top-menu.js":"12","E:\\Github\\ems_zoom\\src\\components\\footer.js":"13","E:\\Github\\ems_zoom\\src\\components\\schedule.js":"14","E:\\Github\\ems_zoom\\src\\config.js":"15","E:\\Github\\ems_zoom\\src\\components\\services.js":"16"},{"size":690,"mtime":1610037146193,"results":"17","hashOfConfig":"18"},{"size":375,"mtime":1610037146195,"results":"19","hashOfConfig":"18"},{"size":1279,"mtime":1610037146191,"results":"20","hashOfConfig":"18"},{"size":1897,"mtime":1610539454486,"results":"21","hashOfConfig":"18"},{"size":4419,"mtime":1610421451472,"results":"22","hashOfConfig":"18"},{"size":3150,"mtime":1610421451472,"results":"23","hashOfConfig":"18"},{"size":113,"mtime":1610037146194,"results":"24","hashOfConfig":"18"},{"size":151,"mtime":1610037146196,"results":"25","hashOfConfig":"18"},{"size":4705,"mtime":1610421451472,"results":"26","hashOfConfig":"18"},{"size":1256,"mtime":1610037146196,"results":"27","hashOfConfig":"18"},{"size":660,"mtime":1610037146194,"results":"28","hashOfConfig":"18"},{"size":2048,"mtime":1610421451471,"results":"29","hashOfConfig":"18"},{"size":189,"mtime":1610037146192,"results":"30","hashOfConfig":"18"},{"size":5054,"mtime":1610551943003,"results":"31","hashOfConfig":"18"},{"size":88,"mtime":1610421451471,"results":"32","hashOfConfig":"18"},{"size":666,"mtime":1610551916674,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"10uc4ty",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Github\\ems_zoom\\src\\index.js",[],["73","74"],"E:\\Github\\ems_zoom\\src\\reportWebVitals.js",[],"E:\\Github\\ems_zoom\\src\\App.js",[],"E:\\Github\\ems_zoom\\src\\ui\\home.js",["75"],"E:\\Github\\ems_zoom\\src\\ui\\view-student.js",["76","77","78","79"],"import {useParams} from \"react-router-dom\";\r\nimport {observer} from \"mobx-react\";\r\nimport {useContext, useEffect, useState} from \"react\";\r\nimport StateContext from \"../mobx/global-context\";\r\nimport {Badge, Button, Table} from \"react-bootstrap\";\r\nimport {render} from \"@testing-library/react\";\r\n\r\nconst ViewStudent = () => {\r\n    const state = useContext(StateContext);\r\n    const {id, group} = useParams();\r\n    const [schedule, setSchedule] = useState();\r\n\r\n    useEffect(() => {\r\n        state.scheduleMenu = [\r\n            {to: '/schedule/' + id, title: 'Group'},\r\n            {to: `/schedule/${id}/${group}`, title: 'Students'}\r\n        ];\r\n        setTimeout(() => {\r\n            let fakeData = {\r\n                schedule:{\r\n                    id: 1,\r\n                    schedule: 'ems-121212',\r\n                    examDate: '12-12-12',\r\n                    studentCount: 50,\r\n                },\r\n                students:[\r\n                    {\r\n                        code: '602254535-2',\r\n                        email: 'ffff@kkumail.com',\r\n                        fullname: 'xxxx oooo',\r\n                        approved: false,\r\n                        logged: false,\r\n                    },\r\n                    {\r\n                        code: '612234350-5',\r\n                        email: 'gggg@kkumail.com',\r\n                        fullname: 'nnn qqqq',\r\n                        approved: true,\r\n                        logged: true,\r\n                    },\r\n                ]\r\n            };\r\n            setSchedule(fakeData);\r\n        }, 500);\r\n\r\n    }, []);\r\n\r\n    function approve(std) {\r\n        setSchedule(old => {\r\n            let student = old.students.find(s => s.code == std.code);\r\n            if (student) student.approved = true;\r\n            return {...old};\r\n        });\r\n    }\r\n\r\n    function reject(std) {\r\n        setSchedule(old => {\r\n            let student = old.students.find(s => s.code == std.code);\r\n            if (student) student.approved = false;\r\n            return {...old};\r\n        });\r\n    }\r\n\r\n    return <div>\r\n        {\r\n            schedule\r\n                ? <>\r\n                    <h3>นักศึกในกลุ่ม {group}</h3>\r\n                    <Table>\r\n                        <thead>\r\n                        <tr>\r\n                            <td>#</td>\r\n                            <td>Code</td>\r\n                            <td>Fullname</td>\r\n                            <td>Email</td>\r\n                            <td>Status</td>\r\n                            <td>Check In</td>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            schedule.students.map((std, i) =>\r\n                                <tr key={std.code} className={std.approved ? 'bg-success text-white' : ''}>\r\n                                    <td>{i + 1}</td>\r\n                                    <td>{std.code}</td>\r\n                                    <td>{std.fullname}</td>\r\n                                    <td>{std.email}</td>\r\n                                    <td>\r\n                                        {\r\n                                            std.approved\r\n                                                ? <Badge variant=\"light\">Approved</Badge>\r\n                                                : <Badge variant=\"info\">Waiting</Badge>\r\n                                        }\r\n                                        {\r\n                                            std.logged && <Badge variant=\"secondary\" className=\"ml-2\">Logged In</Badge>\r\n                                        }\r\n                                    </td>\r\n                                    <td>\r\n                                        {std.approved\r\n                                            ? <Button variant=\"danger\" onClick={reject.bind(this, std)}>Reject</Button>\r\n                                            : <Button variant=\"success\" onClick={approve.bind(this, std)}>Approve</Button>\r\n                                        }\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                        </tbody>\r\n                    </Table>\r\n                </>\r\n                : <div>Loading...</div>\r\n        }\r\n    </div>\r\n}\r\nexport default observer(ViewStudent);","E:\\Github\\ems_zoom\\src\\ui\\view-schedule.js",["80","81","82"],"import {observer} from \"mobx-react\";\r\nimport {useContext, useEffect, useState} from \"react\";\r\nimport StateContext from \"../mobx/global-context\";\r\nimport {Link, useParams} from 'react-router-dom';\r\nimport {Button, Card, Col, Row} from \"react-bootstrap\";\r\n\r\nconst ViewSchedule = () => {\r\n    const state = useContext(StateContext);\r\n    const {id, group} = useParams();\r\n    const [schedule,setSchedule] = useState(null);\r\n    console.log('===', id, group);\r\n\r\n    useEffect(()=>{\r\n        state.scheduleMenu=[\r\n            {to:'/schedule/'+id,title:'Group'}\r\n        ];\r\n        setTimeout(()=>{\r\n            const schedule={\r\n                id: 1,\r\n                examCode: 'ems-121212',\r\n                examDate: '12-12-12',\r\n                studentCount: 50,\r\n                students:{\r\n                    Group1:[\r\n                        {\r\n                            code: '602254535-2',\r\n                            email: 'ffff@kkumail.com',\r\n                            fullname: 'xxxx oooo',\r\n                            approved: true,\r\n                            logined: true,\r\n                        },\r\n                        {\r\n                            code: '602253343-2',\r\n                            email: 'ttttee@kkumail.com',\r\n                            fullname: 'ffgf ssss',\r\n                            approved: false,\r\n                            logged: true,\r\n                        }\r\n                    ],\r\n                    Group2:[\r\n                        {\r\n                            code: '602254535-2',\r\n                            email: 'ffff@kkumail.com',\r\n                            fullname: 'xxxx oooo',\r\n                            approved: true,\r\n                            logged: true,\r\n                        },\r\n                        {\r\n                            code: '602253343-2',\r\n                            email: 'ttttee@kkumail.com',\r\n                            fullname: 'ffgf ssss',\r\n                            approved: false,\r\n                            logged: true,\r\n                        }\r\n                    ]\r\n                }\r\n            };\r\n            setSchedule({...schedule});\r\n        },500);\r\n    },[]);\r\n\r\n    function getGroup() {\r\n        let key = Object.keys(schedule.students)[group ? group - 1 : 0];\r\n        console.log('===', key);\r\n        return state.students[key] || [];\r\n    }\r\n    if(!schedule)return <div>Loading...</div>\r\n    return <>\r\n        <h3>รอบสอบ {schedule.examCode} ซึ่งมีทั้งหมด {Object.keys(schedule.students).length} กลุ่ม</h3>\r\n        <Row>\r\n            {\r\n                Object.keys(schedule.students).map(grp =>\r\n                    <Col key={grp}>\r\n                        <Card>\r\n                            <Card.Body>\r\n                                {grp} (50 คน) <Link to={`/schedule/${id}/${grp}`} className=\"btn btn-primary ml-2\">View</Link>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                )\r\n            }\r\n        </Row>\r\n    </>\r\n}\r\nexport default observer(ViewSchedule);","E:\\Github\\ems_zoom\\src\\mobx\\global-context.js",[],"E:\\Github\\ems_zoom\\src\\ui\\email.js",[],"E:\\Github\\ems_zoom\\src\\mobx\\mobx-store.js",["83","84"],"import {makeAutoObservable} from \"mobx\";\r\n\r\nclass MobxStore {\r\n    currentUser = 'xmuz';\r\n    daySchedule = [\r\n        {\r\n            date: '01-01-2020',\r\n            schedules: [\r\n                {\r\n                    id: 1,\r\n                    schedule: 'ems-121212',\r\n                    examDate: '12-12-12',\r\n                    studentCount: 50,\r\n                },\r\n                {\r\n                    id: 2,\r\n                    schedule: 'ems-55555',\r\n                    examDate: '12-12-12',\r\n                    studentCount: 70,\r\n                },\r\n                {\r\n                    id: 3,\r\n                    schedule: 'ems-55556',\r\n                    examDate: '12-12-12',\r\n                    studentCount: 60,\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            date: '01-01-2021',\r\n            schedules: [\r\n                {\r\n                    id: 1,\r\n                    schedule: 'ems-121212',\r\n                    examDate: '12-12-12',\r\n                    studentCount: 50,\r\n                },\r\n                {\r\n                    id: 2,\r\n                    schedule: 'ems-55555',\r\n                    examDate: '12-12-12',\r\n                    studentCount: 70,\r\n                },\r\n                {\r\n                    id: 3,\r\n                    schedule: 'ems-55556',\r\n                    examDate: '12-12-12',\r\n                    studentCount: 60,\r\n                }\r\n            ]\r\n        }\r\n    ];\r\n    students = {\r\n        Group1: [\r\n            {\r\n                code: '602254535-2',\r\n                email: 'ffff@kkumail.com',\r\n                fullname: 'xxxx oooo',\r\n                approved: true,\r\n                logged: true,\r\n            },\r\n            {\r\n                code: '602253343-2',\r\n                email: 'ttttee@kkumail.com',\r\n                fullname: 'ffgf ssss',\r\n                approved: false,\r\n            }\r\n        ],\r\n        Group2: [\r\n            {\r\n                code: '222222-2',\r\n                email: '2222@kkumail.com',\r\n                fullname: '2222 oooo',\r\n                approved: false,\r\n            },\r\n            {\r\n                code: '3333333-2',\r\n                email: '3333@kkumail.com',\r\n                fullname: '3333 ssss',\r\n                approved: false,\r\n            }\r\n        ]\r\n    };\r\n\r\n    scheduleMenu=[];\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    getScheduleYear(year){\r\n        let schedule=[\r\n            {\r\n                date: '01-01-2020',\r\n                schedules: [\r\n                    {\r\n                        id: 1,\r\n                        schedule: 'ems-121212',\r\n                        examDate: '12-12-12',\r\n                        studentCount: 50,\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        schedule: 'ems-55555',\r\n                        examDate: '12-12-12',\r\n                        studentCount: 70,\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        schedule: 'ems-55556',\r\n                        examDate: '12-12-12',\r\n                        studentCount: 60,\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                date: '01-01-2021',\r\n                schedules: [\r\n                    {\r\n                        id: 1,\r\n                        schedule: 'ems-121212',\r\n                        examDate: '12-12-12',\r\n                        studentCount: 50,\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        schedule: 'ems-55555',\r\n                        examDate: '12-12-12',\r\n                        studentCount: 70,\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        schedule: 'ems-55556',\r\n                        examDate: '12-12-12',\r\n                        studentCount: 60,\r\n                    }\r\n                ]\r\n            }\r\n        ];\r\n        return schedule;\r\n    }\r\n\r\n    setUser(user) {\r\n        this.currentUser = user;\r\n    }\r\n\r\n    studentApprove(code) {\r\n        let student = this.findStudent(code);\r\n        if (student) {\r\n            student.approved = true;\r\n        }\r\n    }\r\n\r\n    studentReject(code) {\r\n        let student = this.findStudent(code);\r\n        if (student) {\r\n            student.approved = false;\r\n        }\r\n    }\r\n    findStudent(code) {\r\n        let student = void 0;\r\n        Object.keys(this.students).map(group => {\r\n            if (!student) student = this.students[group].find(std => std.code == code);\r\n        })\r\n        return student;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default MobxStore;","E:\\Github\\ems_zoom\\src\\ui\\login.js",[],"E:\\Github\\ems_zoom\\src\\layouts\\full-layout.js",["85","86"],"import React from 'react';\r\nimport {Col, Container, Navbar, Row} from \"react-bootstrap\";\r\nimport TopMenu from \"../components/top-menu\";\r\nimport Footer from \"../components/footer\";\r\nimport {useParams,withRouter} from \"react-router-dom\";\r\n\r\nconst FullLayout = (props)=>{\r\n    const params = useParams();\r\n    console.log('top layout===',props);\r\n    return <>\r\n        <div className=\"container-wrapper\">\r\n            <TopMenu/>\r\n            <Container>\r\n                <Row>\r\n                    <Col>{props.children}</Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n        <Footer/>\r\n    </>\r\n}\r\nexport default withRouter(FullLayout);","E:\\Github\\ems_zoom\\src\\components\\top-menu.js",["87","88","89"],"import {observer} from \"mobx-react\";\r\nimport {useContext} from \"react\";\r\nimport StateContext from \"../mobx/global-context\";\r\nimport {useLocation,NavLink,useParams,withRouter} from 'react-router-dom';\r\n\r\nconst TopMenu=(props)=>{\r\n    const state = useContext(StateContext);\r\n    // const location = useLocation();\r\n    const params = useParams();\r\n    console.log('top===',params);\r\n    return <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <a className=\"navbar-brand\" href=\"#\">Ems Check-in</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\r\n                aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/\" exact>Schedule</NavLink>\r\n                </li>\r\n                {\r\n                    state.scheduleMenu.map(mn=>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to={mn.to} exact>-> {mn.title}</NavLink>\r\n                        </li>\r\n                    )\r\n                }\r\n            </ul>\r\n        </div>\r\n        {/*<div className=\"collapse navbar-collapse\" id=\"navbarNav\">*/}\r\n        {/*    {location && location.pathname.match(/\\/schedule/) &&*/}\r\n        {/*    <ul className=\"navbar-nav\">*/}\r\n        {/*        {*/}\r\n        {/*            Object.keys(students).map(grp=>(*/}\r\n        {/*                <li className=\"nav-item\">*/}\r\n        {/*                    <NavLink className=\"nav-link\" to={`/schedule/${id}/group/${group}`}>{grp}</NavLink>*/}\r\n        {/*                </li>*/}\r\n        {/*            ))*/}\r\n        {/*        }*/}\r\n        {/*    </ul>*/}\r\n        {/*    }*/}\r\n        {/*</div>*/}\r\n    </nav>\r\n}\r\nexport default observer(TopMenu);","E:\\Github\\ems_zoom\\src\\components\\footer.js",["90"],"import {Container} from \"react-bootstrap\";\r\n\r\nconst Footer=()=>{\r\n    return <div className=\"footer\">\r\n        <div style={{padding:'10px'}}>ddd</div>\r\n    </div>\r\n}\r\nexport default Footer;","E:\\Github\\ems_zoom\\src\\components\\schedule.js",["91","92","93","94","95","96","97","98","99","100"],"E:\\Github\\ems_zoom\\src\\config.js",[],"E:\\Github\\ems_zoom\\src\\components\\services.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":4,"column":8,"nodeType":"107","messageId":"108","endLine":4,"endColumn":13},{"ruleId":"105","severity":1,"message":"109","line":6,"column":9,"nodeType":"107","messageId":"108","endLine":6,"endColumn":15},{"ruleId":"110","severity":1,"message":"111","line":46,"column":8,"nodeType":"112","endLine":46,"endColumn":10,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":50,"column":57,"nodeType":"116","messageId":"117","endLine":50,"endColumn":59},{"ruleId":"114","severity":1,"message":"115","line":58,"column":57,"nodeType":"116","messageId":"117","endLine":58,"endColumn":59},{"ruleId":"105","severity":1,"message":"118","line":5,"column":9,"nodeType":"107","messageId":"108","endLine":5,"endColumn":15},{"ruleId":"110","severity":1,"message":"119","line":60,"column":7,"nodeType":"112","endLine":60,"endColumn":9,"suggestions":"120"},{"ruleId":"105","severity":1,"message":"121","line":62,"column":14,"nodeType":"107","messageId":"108","endLine":62,"endColumn":22},{"ruleId":"122","severity":1,"message":"123","line":162,"column":46,"nodeType":"124","messageId":"125","endLine":162,"endColumn":48},{"ruleId":"114","severity":1,"message":"115","line":163,"column":79,"nodeType":"116","messageId":"117","endLine":163,"endColumn":81},{"ruleId":"105","severity":1,"message":"126","line":2,"column":25,"nodeType":"107","messageId":"108","endLine":2,"endColumn":31},{"ruleId":"105","severity":1,"message":"127","line":8,"column":11,"nodeType":"107","messageId":"108","endLine":8,"endColumn":17},{"ruleId":"105","severity":1,"message":"128","line":4,"column":9,"nodeType":"107","messageId":"108","endLine":4,"endColumn":20},{"ruleId":"105","severity":1,"message":"129","line":4,"column":39,"nodeType":"107","messageId":"108","endLine":4,"endColumn":49},{"ruleId":"130","severity":1,"message":"131","line":12,"column":9,"nodeType":"132","endLine":12,"endColumn":46},{"ruleId":"105","severity":1,"message":"133","line":1,"column":9,"nodeType":"107","messageId":"108","endLine":1,"endColumn":18},{"ruleId":"105","severity":1,"message":"134","line":1,"column":16,"nodeType":"107","messageId":"108","endLine":1,"endColumn":21},{"ruleId":"105","severity":1,"message":"135","line":1,"column":42,"nodeType":"107","messageId":"108","endLine":1,"endColumn":45},{"ruleId":"105","severity":1,"message":"106","line":6,"column":8,"nodeType":"107","messageId":"108","endLine":6,"endColumn":13},{"ruleId":"105","severity":1,"message":"136","line":7,"column":8,"nodeType":"107","messageId":"108","endLine":7,"endColumn":14},{"ruleId":"105","severity":1,"message":"137","line":9,"column":9,"nodeType":"107","messageId":"108","endLine":9,"endColumn":14},{"ruleId":"110","severity":1,"message":"138","line":19,"column":7,"nodeType":"112","endLine":19,"endColumn":9,"suggestions":"139"},{"ruleId":"105","severity":1,"message":"140","line":27,"column":14,"nodeType":"107","messageId":"108","endLine":27,"endColumn":23},{"ruleId":"122","severity":1,"message":"123","line":53,"column":41,"nodeType":"124","messageId":"125","endLine":53,"endColumn":43},{"ruleId":"122","severity":1,"message":"123","line":55,"column":39,"nodeType":"124","messageId":"125","endLine":55,"endColumn":41},{"ruleId":"105","severity":1,"message":"141","line":112,"column":7,"nodeType":"107","messageId":"108","endLine":112,"endColumn":16},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'render' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'group', 'id', and 'state'. Either include them or remove the dependency array.","ArrayExpression",["144"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'state'. Either include them or remove the dependency array.",["145"],"'getGroup' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Navbar' is defined but never used.","'params' is assigned a value but never used.","'useLocation' is defined but never used.","'withRouter' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Container' is defined but never used.","'Badge' is defined but never used.","'Row' is defined but never used.","'Config' is defined but never used.","'$mobx' is defined but never used.","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.",["146"],"'showEmail' is defined but never used.","'SchdBlock' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},"Update the dependencies array to be: [group, id, state]",{"range":"153","text":"154"},"Update the dependencies array to be: [id, state]",{"range":"155","text":"156"},"Update the dependencies array to be: [state]",{"range":"157","text":"158"},[1579,1581],"[group, id, state]",[2208,2210],"[id, state]",[725,727],"[state]"]