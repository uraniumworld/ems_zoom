[{"C:\\Github\\ems_zoom\\src\\index.js":"1","C:\\Github\\ems_zoom\\src\\App.js":"2","C:\\Github\\ems_zoom\\src\\reportWebVitals.js":"3","C:\\Github\\ems_zoom\\src\\mobx\\global-context.js":"4","C:\\Github\\ems_zoom\\src\\ui\\email.js":"5","C:\\Github\\ems_zoom\\src\\ui\\login.js":"6","C:\\Github\\ems_zoom\\src\\mobx\\mobx-store.js":"7","C:\\Github\\ems_zoom\\src\\ui\\view-student.js":"8","C:\\Github\\ems_zoom\\src\\layouts\\full-layout.js":"9","C:\\Github\\ems_zoom\\src\\ui\\home.js":"10","C:\\Github\\ems_zoom\\src\\components\\top-menu.js":"11","C:\\Github\\ems_zoom\\src\\components\\footer.js":"12","C:\\Github\\ems_zoom\\src\\components\\schedule.js":"13","C:\\Github\\ems_zoom\\src\\config.js":"14","C:\\Github\\ems_zoom\\src\\components\\services.js":"15","C:\\Github\\ems_zoom\\src\\ui\\view-group.js":"16"},{"size":669,"mtime":1610006267186,"results":"17","hashOfConfig":"18"},{"size":1525,"mtime":1610700851017,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":113,"mtime":1609837365305,"results":"21","hashOfConfig":"18"},{"size":151,"mtime":1610005492784,"results":"22","hashOfConfig":"18"},{"size":1256,"mtime":1609837982803,"results":"23","hashOfConfig":"18"},{"size":4705,"mtime":1610075942040,"results":"24","hashOfConfig":"18"},{"size":9905,"mtime":1610702326053,"results":"25","hashOfConfig":"18"},{"size":660,"mtime":1609922252057,"results":"26","hashOfConfig":"18"},{"size":1897,"mtime":1610595551487,"results":"27","hashOfConfig":"18"},{"size":2063,"mtime":1610693038748,"results":"28","hashOfConfig":"18"},{"size":189,"mtime":1609906390906,"results":"29","hashOfConfig":"18"},{"size":5313,"mtime":1610683933489,"results":"30","hashOfConfig":"18"},{"size":88,"mtime":1610356721291,"results":"31","hashOfConfig":"18"},{"size":2562,"mtime":1610698565085,"results":"32","hashOfConfig":"18"},{"size":2967,"mtime":1610693073251,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"165z2ew",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"36"},"C:\\Github\\ems_zoom\\src\\index.js",[],["74","75"],"C:\\Github\\ems_zoom\\src\\App.js",["76"],"C:\\Github\\ems_zoom\\src\\reportWebVitals.js",[],"C:\\Github\\ems_zoom\\src\\mobx\\global-context.js",[],"C:\\Github\\ems_zoom\\src\\ui\\email.js",[],"C:\\Github\\ems_zoom\\src\\ui\\login.js",[],"C:\\Github\\ems_zoom\\src\\mobx\\mobx-store.js",["77","78"],"import {makeAutoObservable} from \"mobx\";\r\n\r\nclass MobxStore {\r\n    currentUser = 'xmuz';\r\n    daySchedule = [\r\n        {\r\n            date: '01-01-2020',\r\n            schedules: [\r\n                {\r\n                    id: 1,\r\n                    schedule: 'ems-121212',\r\n                    examDate: '12-12-12',\r\n                    studentCount: 50,\r\n                },\r\n                {\r\n                    id: 2,\r\n                    schedule: 'ems-55555',\r\n                    examDate: '12-12-12',\r\n                    studentCount: 70,\r\n                },\r\n                {\r\n                    id: 3,\r\n                    schedule: 'ems-55556',\r\n                    examDate: '12-12-12',\r\n                    studentCount: 60,\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            date: '01-01-2021',\r\n            schedules: [\r\n                {\r\n                    id: 1,\r\n                    schedule: 'ems-121212',\r\n                    examDate: '12-12-12',\r\n                    studentCount: 50,\r\n                },\r\n                {\r\n                    id: 2,\r\n                    schedule: 'ems-55555',\r\n                    examDate: '12-12-12',\r\n                    studentCount: 70,\r\n                },\r\n                {\r\n                    id: 3,\r\n                    schedule: 'ems-55556',\r\n                    examDate: '12-12-12',\r\n                    studentCount: 60,\r\n                }\r\n            ]\r\n        }\r\n    ];\r\n    students = {\r\n        Group1: [\r\n            {\r\n                code: '602254535-2',\r\n                email: 'ffff@kkumail.com',\r\n                fullname: 'xxxx oooo',\r\n                approved: true,\r\n                logged: true,\r\n            },\r\n            {\r\n                code: '602253343-2',\r\n                email: 'ttttee@kkumail.com',\r\n                fullname: 'ffgf ssss',\r\n                approved: false,\r\n            }\r\n        ],\r\n        Group2: [\r\n            {\r\n                code: '222222-2',\r\n                email: '2222@kkumail.com',\r\n                fullname: '2222 oooo',\r\n                approved: false,\r\n            },\r\n            {\r\n                code: '3333333-2',\r\n                email: '3333@kkumail.com',\r\n                fullname: '3333 ssss',\r\n                approved: false,\r\n            }\r\n        ]\r\n    };\r\n\r\n    scheduleMenu=[];\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    getScheduleYear(year){\r\n        let schedule=[\r\n            {\r\n                date: '01-01-2020',\r\n                schedules: [\r\n                    {\r\n                        id: 1,\r\n                        schedule: 'ems-121212',\r\n                        examDate: '12-12-12',\r\n                        studentCount: 50,\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        schedule: 'ems-55555',\r\n                        examDate: '12-12-12',\r\n                        studentCount: 70,\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        schedule: 'ems-55556',\r\n                        examDate: '12-12-12',\r\n                        studentCount: 60,\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                date: '01-01-2021',\r\n                schedules: [\r\n                    {\r\n                        id: 1,\r\n                        schedule: 'ems-121212',\r\n                        examDate: '12-12-12',\r\n                        studentCount: 50,\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        schedule: 'ems-55555',\r\n                        examDate: '12-12-12',\r\n                        studentCount: 70,\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        schedule: 'ems-55556',\r\n                        examDate: '12-12-12',\r\n                        studentCount: 60,\r\n                    }\r\n                ]\r\n            }\r\n        ];\r\n        return schedule;\r\n    }\r\n\r\n    setUser(user) {\r\n        this.currentUser = user;\r\n    }\r\n\r\n    studentApprove(code) {\r\n        let student = this.findStudent(code);\r\n        if (student) {\r\n            student.approved = true;\r\n        }\r\n    }\r\n\r\n    studentReject(code) {\r\n        let student = this.findStudent(code);\r\n        if (student) {\r\n            student.approved = false;\r\n        }\r\n    }\r\n    findStudent(code) {\r\n        let student = void 0;\r\n        Object.keys(this.students).map(group => {\r\n            if (!student) student = this.students[group].find(std => std.code == code);\r\n        })\r\n        return student;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default MobxStore;","C:\\Github\\ems_zoom\\src\\ui\\view-student.js",["79","80","81","82","83","84","85","86","87","88","89","90","91"],"C:\\Github\\ems_zoom\\src\\layouts\\full-layout.js",["92","93"],"import React from 'react';\r\nimport {Col, Container, Navbar, Row} from \"react-bootstrap\";\r\nimport TopMenu from \"../components/top-menu\";\r\nimport Footer from \"../components/footer\";\r\nimport {useParams,withRouter} from \"react-router-dom\";\r\n\r\nconst FullLayout = (props)=>{\r\n    const params = useParams();\r\n    console.log('top layout===',props);\r\n    return <>\r\n        <div className=\"container-wrapper\">\r\n            <TopMenu/>\r\n            <Container>\r\n                <Row>\r\n                    <Col>{props.children}</Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n        <Footer/>\r\n    </>\r\n}\r\nexport default withRouter(FullLayout);","C:\\Github\\ems_zoom\\src\\ui\\home.js",["94"],"import Schedule from \"../components/schedule\";\r\nimport {Col, Form, Row} from \"react-bootstrap\";\r\nimport {useState} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst currentDate=new Date();\r\nconst currentMonth=currentDate.getMonth();\r\nconst currentYear=currentDate.getFullYear();\r\nconst Home = ()=>{\r\n    const [selectedMonth,setSelectedMonth]=useState(currentMonth+1);\r\n    const [selectedYear,setSelectedYear]=useState(currentYear);\r\n\r\n\r\n    return <div>\r\n        <Row>\r\n            <Col md={6}>\r\n                <Form.Group>\r\n                    <Form.Label>Month</Form.Label>\r\n                    <Form.Control as=\"select\" value={selectedMonth} onChange={e=>{\r\n                        setSelectedMonth(e.target.value)\r\n                    }}>\r\n                        {\r\n                            [...new Array(31)].map((v,i)=>{\r\n                                let value = i+1;\r\n                                return <option key={value} value={value}>{value}</option>\r\n                            })\r\n                        }\r\n                    </Form.Control>\r\n                </Form.Group>\r\n            </Col>\r\n            <Col md={6}>\r\n                <Form.Group>\r\n                    <Form.Label>Year</Form.Label>\r\n                    <Form.Control as=\"select\" value={selectedYear} onChange={e=>{\r\n                        setSelectedYear(e.target.value)\r\n                    }}>\r\n                        {\r\n                            [...new Array(5)].map((v,i)=>{\r\n                                let value = currentYear-i;\r\n                                return <option key={value} value={value}>{value}</option>\r\n                            })\r\n                        }\r\n                    </Form.Control>\r\n                </Form.Group>\r\n            </Col>\r\n        </Row>\r\n        <Schedule month={selectedMonth} year={selectedYear}/>\r\n    </div>\r\n}\r\nexport default Home;\r\n","C:\\Github\\ems_zoom\\src\\components\\top-menu.js",["95","96","97"],"import {observer} from \"mobx-react\";\r\nimport {useContext} from \"react\";\r\nimport StateContext from \"../mobx/global-context\";\r\nimport {useLocation,NavLink,useParams,withRouter} from 'react-router-dom';\r\n\r\nconst TopMenu=(props)=>{\r\n    const state = useContext(StateContext);\r\n    // const location = useLocation();\r\n    const params = useParams();\r\n    console.log('top===',params);\r\n    return <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <a className=\"navbar-brand\" href=\"#\">Ems Check-in</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\r\n                aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/\" exact>Schedule</NavLink>\r\n                </li>\r\n                {\r\n                    state.scheduleMenu.map(mn=>\r\n                        <li key={mn.title} className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to={mn.to} exact>-> {mn.title}</NavLink>\r\n                        </li>\r\n                    )\r\n                }\r\n            </ul>\r\n        </div>\r\n        {/*<div className=\"collapse navbar-collapse\" id=\"navbarNav\">*/}\r\n        {/*    {location && location.pathname.match(/\\/schedule/) &&*/}\r\n        {/*    <ul className=\"navbar-nav\">*/}\r\n        {/*        {*/}\r\n        {/*            Object.keys(students).map(grp=>(*/}\r\n        {/*                <li className=\"nav-item\">*/}\r\n        {/*                    <NavLink className=\"nav-link\" to={`/schedule/${id}/group/${group}`}>{grp}</NavLink>*/}\r\n        {/*                </li>*/}\r\n        {/*            ))*/}\r\n        {/*        }*/}\r\n        {/*    </ul>*/}\r\n        {/*    }*/}\r\n        {/*</div>*/}\r\n    </nav>\r\n}\r\nexport default observer(TopMenu);","C:\\Github\\ems_zoom\\src\\components\\footer.js",["98"],"import {Container} from \"react-bootstrap\";\r\n\r\nconst Footer=()=>{\r\n    return <div className=\"footer\">\r\n        <div style={{padding:'10px'}}>ddd</div>\r\n    </div>\r\n}\r\nexport default Footer;","C:\\Github\\ems_zoom\\src\\components\\schedule.js",["99","100","101","102","103","104","105"],"import {Alert, Badge, Button, Card, Col, Row, Modal, Form} from \"react-bootstrap\";\r\nimport {observer} from \"mobx-react\";\r\nimport {useContext, useEffect, useState} from \"react\";\r\nimport StateContext from \"../mobx/global-context\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Config from \"../config\";\r\nimport {getEmailByScheduleDetail, getSchedules} from \"./services\";\r\nimport {$mobx} from \"mobx\";\r\n\r\nconst Schedule = ({month,year}) => {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [studentsWithGroup, setStudentsWithGroup] = useState(null);\r\n    const [schedules,setSchedules] = useState(null);\r\n    const state = useContext(StateContext);\r\n\r\n    useEffect(()=>{\r\n        state.scheduleMenu=[];\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n       getSchedules(month,year).then(results=>{\r\n           setSchedules(results);\r\n       });\r\n    },[month,year]);\r\n\r\n    async function showEmail(schd){\r\n        let studentsWithGroup = await getEmailByScheduleDetail(schd.SchdID,schd.SchdDetailID);\r\n        setStudentsWithGroup(studentsWithGroup);\r\n        setShowModal(true);\r\n    }\r\n    function hideModal(){\r\n        setStudentsWithGroup(null);\r\n        setShowModal(false);\r\n    }\r\n    return <>\r\n        <h3>รอบสอบของ ปี {year}</h3>\r\n        {\r\n            schedules && Object.keys(schedules).map(day => {\r\n                return (\r\n                    <Card key={day} className=\"mt-2\">\r\n                        <Card.Header>\r\n                            <Card.Text>การสอบวันที่ {day}</Card.Text>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Row>\r\n                                {schedules[day].map((schd,i) =>\r\n                                    <SchdBlock key={`${schd.examDate}_${i}`} schd={schd} onEmail={showEmail.bind(this,schd)}/>\r\n                                )}\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                )\r\n            })\r\n        }\r\n        <Modal show={showModal} onHide={hideModal}>\r\n            <Modal.Header closeButton>\r\n                {studentsWithGroup\r\n                    ?<Modal.Title>Email ในรอบสอบ {studentsWithGroup.title}</Modal.Title>\r\n                    :<Modal.Title>Loading...</Modal.Title>\r\n                }\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {\r\n                    studentsWithGroup\r\n                        ?<>\r\n                            {\r\n                                Object.keys(studentsWithGroup).map(group=>{\r\n                                    let emailText='';\r\n                                    return <div key={group}>\r\n                                        <h3 style={{textTransform:'capitalize'}}>{group}</h3>\r\n                                        {\r\n                                            studentsWithGroup[group].map(std=>{\r\n                                                emailText+=`${std.RegKKU.KKUMAIL},`\r\n                                            })\r\n                                        }\r\n                                        <Form.Control rows={5} as='textarea'\r\n                                                      onChange={e=>{}}\r\n                                                      onClick={e=>e.target.select()}\r\n                                                      value={emailText.substr(0,emailText.length-1)}/>\r\n                                    </div>\r\n                                })\r\n                            }\r\n                        </>\r\n                        :<div>Loading....</div>\r\n                }\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={hideModal}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={hideModal}>\r\n                    Save Changes\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    </>\r\n}\r\n\r\n\r\nconst SchdBlock = ({schd,onEmail}) => {\r\n    const history = useHistory();\r\n    return <Col md={4}>\r\n        <div style={{padding: '10px'}}>\r\n            <Card>\r\n                <Card.Header>\r\n                    <Card.Title>\r\n                        <small>{schd.ExamTimeStart}-{schd.ExamTimeEnd}</small>\r\n                    </Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <div className=\"text-center\">\r\n                    {schd.ModuleType==\"1\"?<Alert variant=\"info\">ทฤษฎี</Alert>:<Alert variant=\"dark\">ปฏิบัติ</Alert>}\r\n                        <div className=\"text-center\">\r\n                            <Button className=\"ml-2\" onClick={e => history.push(`/schedule/${schd.SchdID}/${schd.SchdDetailID}`)}>Enter</Button>\r\n                            <Button variant=\"secondary\" className=\"ml-2\" onClick={onEmail}>Email</Button>\r\n                        </div>\r\n                    </div>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <Card.Text className=\"text-right\">Student: {schd.studentCount}</Card.Text>\r\n                </Card.Footer>\r\n            </Card>\r\n        </div>\r\n    </Col>\r\n}\r\n\r\nexport default observer(Schedule);\r\n","C:\\Github\\ems_zoom\\src\\config.js",[],"C:\\Github\\ems_zoom\\src\\components\\services.js",["106","107","108","109"],"C:\\Github\\ems_zoom\\src\\ui\\view-group.js",["110","111"],"import {observer} from \"mobx-react\";\r\nimport {useContext, useEffect, useState} from \"react\";\r\nimport StateContext from \"../mobx/global-context\";\r\nimport {Link, useParams} from 'react-router-dom';\r\nimport {Badge, Button, Card, Col, Form, Modal, Row} from \"react-bootstrap\";\r\nimport {getEmailByScheduleDetail, getScheduleInfo} from \"../components/services\";\r\n\r\nconst ViewGroup = () => {\r\n    const state = useContext(StateContext);\r\n    const {SchdID, SchdDetailID} = useParams();\r\n    const [schedule,setSchedule] = useState(null);\r\n    const [studentsWithGroup,setStudentsWithGroup] = useState(null);\r\n    const [showingGroup,setShowingGroup] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        state.scheduleMenu=[\r\n            {to:`/schedule/${SchdID}/${SchdDetailID}`,title:'Group'}\r\n        ];\r\n        getEmailByScheduleDetail(SchdID,SchdDetailID).then(res=>{\r\n            setStudentsWithGroup(res);\r\n        });\r\n        getScheduleInfo(SchdID,SchdDetailID).then(res=>{\r\n            setSchedule(res);\r\n        })\r\n    },[]);\r\n\r\n    function getEmail(group) {\r\n        if(!studentsWithGroup[group])return;\r\n        let text='';\r\n        studentsWithGroup[group].map(std=>{\r\n            text+=`${std.RegKKU.KKUMAIL},`;\r\n        })\r\n        return text.substr(0,text.length-1);\r\n    }\r\n    if(!schedule || !studentsWithGroup)return <div>Loading...</div>\r\n    return <>\r\n        <h3>รอบสอบ {schedule.SchdCode} ซึ่งมีทั้งหมด {studentsWithGroup && Object.keys(studentsWithGroup).length} กลุ่ม</h3>\r\n        <Row>\r\n            {\r\n                studentsWithGroup && Object.keys(studentsWithGroup).map(grp =>\r\n                    <Col key={grp} md={6}>\r\n                        <Card className=\"mt-2\">\r\n                            <Card.Body>\r\n                                <Badge className=\"text-uppercase\">{grp}</Badge> ({studentsWithGroup[grp].length} คน) <Link to={`/schedule/${SchdID}/${SchdDetailID}/${grp}`} className=\"btn btn-primary ml-2\">View</Link>\r\n                                <Button variant=\"secondary\" className=\"ml-2\" onClick={setShowingGroup.bind(this,grp)}>Email</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                )\r\n            }\r\n        </Row>\r\n        <Modal show={!!showingGroup} onHide={e=>setShowingGroup(null)}>\r\n            <Modal.Header closeButton>\r\n                <span className=\"text-uppercase\">{showingGroup}</span> : Email\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form.Control rows={20} as=\"textarea\" onChange={e=>{}} onClick={e=>e.target.select()} value={getEmail(showingGroup)}/>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={e=>setShowingGroup(null)}>\r\n                    Close\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    </>\r\n}\r\nexport default observer(ViewGroup);",{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":12,"column":25,"nodeType":"118","messageId":"119","endLine":12,"endColumn":30},{"ruleId":"120","severity":1,"message":"121","line":162,"column":46,"nodeType":"122","messageId":"123","endLine":162,"endColumn":48},{"ruleId":"124","severity":1,"message":"125","line":163,"column":79,"nodeType":"126","messageId":"127","endLine":163,"endColumn":81},{"ruleId":"116","severity":1,"message":"128","line":6,"column":9,"nodeType":"118","messageId":"119","endLine":6,"endColumn":15},{"ruleId":"116","severity":1,"message":"129","line":11,"column":5,"nodeType":"118","messageId":"119","endLine":11,"endColumn":29},{"ruleId":"116","severity":1,"message":"130","line":20,"column":17,"nodeType":"118","messageId":"119","endLine":20,"endColumn":24},{"ruleId":"131","severity":1,"message":"132","line":66,"column":8,"nodeType":"133","endLine":66,"endColumn":10,"suggestions":"134"},{"ruleId":"124","severity":1,"message":"125","line":80,"column":17,"nodeType":"126","messageId":"127","endLine":80,"endColumn":19},{"ruleId":"135","severity":1,"message":"136","line":108,"column":25,"nodeType":"137","endLine":114,"endColumn":27},{"ruleId":"124","severity":1,"message":"125","line":160,"column":65,"nodeType":"126","messageId":"127","endLine":160,"endColumn":67},{"ruleId":"124","severity":1,"message":"125","line":160,"column":91,"nodeType":"126","messageId":"127","endLine":160,"endColumn":93},{"ruleId":"124","severity":1,"message":"125","line":161,"column":65,"nodeType":"126","messageId":"127","endLine":161,"endColumn":67},{"ruleId":"124","severity":1,"message":"125","line":161,"column":91,"nodeType":"126","messageId":"127","endLine":161,"endColumn":93},{"ruleId":"124","severity":1,"message":"125","line":164,"column":99,"nodeType":"126","messageId":"127","endLine":164,"endColumn":101},{"ruleId":"124","severity":1,"message":"125","line":171,"column":76,"nodeType":"126","messageId":"127","endLine":171,"endColumn":78},{"ruleId":"124","severity":1,"message":"125","line":185,"column":73,"nodeType":"126","messageId":"127","endLine":185,"endColumn":75},{"ruleId":"116","severity":1,"message":"138","line":2,"column":25,"nodeType":"118","messageId":"119","endLine":2,"endColumn":31},{"ruleId":"116","severity":1,"message":"139","line":8,"column":11,"nodeType":"118","messageId":"119","endLine":8,"endColumn":17},{"ruleId":"116","severity":1,"message":"140","line":4,"column":8,"nodeType":"118","messageId":"119","endLine":4,"endColumn":13},{"ruleId":"116","severity":1,"message":"141","line":4,"column":9,"nodeType":"118","messageId":"119","endLine":4,"endColumn":20},{"ruleId":"116","severity":1,"message":"142","line":4,"column":39,"nodeType":"118","messageId":"119","endLine":4,"endColumn":49},{"ruleId":"143","severity":1,"message":"144","line":12,"column":9,"nodeType":"137","endLine":12,"endColumn":46},{"ruleId":"116","severity":1,"message":"145","line":1,"column":9,"nodeType":"118","messageId":"119","endLine":1,"endColumn":18},{"ruleId":"116","severity":1,"message":"146","line":1,"column":16,"nodeType":"118","messageId":"119","endLine":1,"endColumn":21},{"ruleId":"116","severity":1,"message":"140","line":6,"column":8,"nodeType":"118","messageId":"119","endLine":6,"endColumn":13},{"ruleId":"116","severity":1,"message":"147","line":7,"column":8,"nodeType":"118","messageId":"119","endLine":7,"endColumn":14},{"ruleId":"116","severity":1,"message":"148","line":9,"column":9,"nodeType":"118","messageId":"119","endLine":9,"endColumn":14},{"ruleId":"131","severity":1,"message":"149","line":19,"column":7,"nodeType":"133","endLine":19,"endColumn":9,"suggestions":"150"},{"ruleId":"120","severity":1,"message":"121","line":73,"column":77,"nodeType":"122","messageId":"123","endLine":73,"endColumn":79},{"ruleId":"124","severity":1,"message":"125","line":113,"column":37,"nodeType":"126","messageId":"127","endLine":113,"endColumn":39},{"ruleId":"124","severity":1,"message":"125","line":12,"column":28,"nodeType":"126","messageId":"127","endLine":12,"endColumn":30},{"ruleId":"120","severity":1,"message":"121","line":16,"column":41,"nodeType":"122","messageId":"123","endLine":16,"endColumn":43},{"ruleId":"120","severity":1,"message":"121","line":23,"column":53,"nodeType":"122","messageId":"123","endLine":23,"endColumn":55},{"ruleId":"124","severity":1,"message":"125","line":27,"column":33,"nodeType":"126","messageId":"127","endLine":27,"endColumn":35},{"ruleId":"131","severity":1,"message":"151","line":25,"column":7,"nodeType":"133","endLine":25,"endColumn":9,"suggestions":"152"},{"ruleId":"120","severity":1,"message":"121","line":30,"column":41,"nodeType":"122","messageId":"123","endLine":30,"endColumn":43},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'render' is defined but never used.","'getEmailByScheduleDetail' is defined but never used.","'setShow' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'SchdDetailID', 'SchdID', 'group', and 'state'. Either include them or remove the dependency array.","ArrayExpression",["155"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'Navbar' is defined but never used.","'params' is assigned a value but never used.","'axios' is defined but never used.","'useLocation' is defined but never used.","'withRouter' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Container' is defined but never used.","'Badge' is defined but never used.","'Config' is defined but never used.","'$mobx' is defined but never used.","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.",["156"],"React Hook useEffect has missing dependencies: 'SchdDetailID', 'SchdID', and 'state'. Either include them or remove the dependency array.",["157"],"no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},"Update the dependencies array to be: [SchdDetailID, SchdID, group, state]",{"range":"164","text":"165"},"Update the dependencies array to be: [state]",{"range":"166","text":"167"},"Update the dependencies array to be: [SchdDetailID, SchdID, state]",{"range":"168","text":"169"},[2471,2473],"[SchdDetailID, SchdID, group, state]",[761,763],"[state]",[1024,1026],"[SchdDetailID, SchdID, state]"]