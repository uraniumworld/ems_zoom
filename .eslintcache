[{"C:\\Github\\ems_zoom\\src\\index.js":"1","C:\\Github\\ems_zoom\\src\\reportWebVitals.js":"2","C:\\Github\\ems_zoom\\src\\App.js":"3","C:\\Github\\ems_zoom\\src\\mobx\\global-context.js":"4","C:\\Github\\ems_zoom\\src\\ui\\home.js":"5","C:\\Github\\ems_zoom\\src\\config.js":"6","C:\\Github\\ems_zoom\\src\\ui\\login.js":"7","C:\\Github\\ems_zoom\\src\\ui\\view-group.js":"8","C:\\Github\\ems_zoom\\src\\ui\\view-student.js":"9","C:\\Github\\ems_zoom\\src\\layouts\\full-layout.js":"10","C:\\Github\\ems_zoom\\src\\mobx\\mobx-store.js":"11","C:\\Github\\ems_zoom\\src\\components\\services.js":"12","C:\\Github\\ems_zoom\\src\\client-ui\\workshop.js":"13","C:\\Github\\ems_zoom\\src\\client-ui\\theory.js":"14","C:\\Github\\ems_zoom\\src\\client-ui\\exam.js":"15","C:\\Github\\ems_zoom\\src\\client-ui\\client-home.js":"16","C:\\Github\\ems_zoom\\src\\components\\schedule.js":"17","C:\\Github\\ems_zoom\\src\\components\\top-menu.js":"18","C:\\Github\\ems_zoom\\src\\components\\footer.js":"19","C:\\Github\\ems_zoom\\src\\client-components\\client-services.js":"20","C:\\Github\\ems_zoom\\src\\client-components\\check-in-process.js":"21","C:\\Github\\ems_zoom\\src\\client-components\\exam-schedule-day.js":"22","C:\\Github\\ems_zoom\\src\\client-ui\\login-client.js":"23","C:\\Github\\ems_zoom\\src\\ui\\admin.js":"24","C:\\Github\\ems_zoom\\src\\client-ui\\student.js":"25","C:\\Github\\ems_zoom\\src\\client-components\\header.js":"26","C:\\Github\\ems_zoom\\src\\client-components\\client-top-menu.js":"27"},{"size":689,"mtime":1610935637950,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"29"},{"size":1727,"mtime":1611288845325,"results":"31","hashOfConfig":"29"},{"size":113,"mtime":1609837365305,"results":"32","hashOfConfig":"29"},{"size":1897,"mtime":1610595551487,"results":"33","hashOfConfig":"29"},{"size":166,"mtime":1610935637950,"results":"34","hashOfConfig":"29"},{"size":1820,"mtime":1610935637958,"results":"35","hashOfConfig":"29"},{"size":3363,"mtime":1611565409511,"results":"36","hashOfConfig":"29"},{"size":23720,"mtime":1611297523318,"results":"37","hashOfConfig":"29"},{"size":621,"mtime":1611289576256,"results":"38","hashOfConfig":"29"},{"size":1146,"mtime":1611289153568,"results":"39","hashOfConfig":"29"},{"size":4554,"mtime":1611565928735,"results":"40","hashOfConfig":"29"},{"size":11889,"mtime":1611563391232,"results":"41","hashOfConfig":"29"},{"size":79,"mtime":1610935637947,"results":"42","hashOfConfig":"29"},{"size":1377,"mtime":1611303220962,"results":"43","hashOfConfig":"29"},{"size":91,"mtime":1610935637946,"results":"44","hashOfConfig":"29"},{"size":5333,"mtime":1610935637948,"results":"45","hashOfConfig":"29"},{"size":2120,"mtime":1610935637949,"results":"46","hashOfConfig":"29"},{"size":188,"mtime":1610935637948,"results":"47","hashOfConfig":"29"},{"size":1582,"mtime":1611306595685,"results":"48","hashOfConfig":"29"},{"size":8376,"mtime":1611307941395,"results":"49","hashOfConfig":"29"},{"size":2169,"mtime":1611297679979,"results":"50","hashOfConfig":"29"},{"size":2084,"mtime":1611298791795,"results":"51","hashOfConfig":"29"},{"size":1840,"mtime":1610940723849,"results":"52","hashOfConfig":"29"},{"size":1633,"mtime":1611544396286,"results":"53","hashOfConfig":"29"},{"size":303,"mtime":1610941504166,"results":"54","hashOfConfig":"29"},{"size":1865,"mtime":1611544991321,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"165z2ew",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"58"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"C:\\Github\\ems_zoom\\src\\index.js",[],["124","125"],"C:\\Github\\ems_zoom\\src\\reportWebVitals.js",[],"C:\\Github\\ems_zoom\\src\\App.js",["126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141"],"import './App.css';\r\nimport {Route, Switch, useLocation,Redirect} from 'react-router-dom';\r\nimport Login from \"./ui/login\";\r\nimport StateContext from \"./mobx/global-context\";\r\nimport MobxStore from \"./mobx/mobx-store\";\r\nimport {observer} from \"mobx-react\";\r\nimport Home from \"./ui/home\";\r\nimport FullLayout from \"./layouts/full-layout\";\r\nimport ViewGroup from \"./ui/view-group\";\r\nimport ViewStudent from \"./ui/view-student\";\r\nimport {ToastContainer, toast, Slide} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport {useEffect} from \"react\";\r\nimport {checkLogin} from \"./components/services\";\r\nimport {Alert} from \"react-bootstrap\"; // Import css\r\nimport Config from './config';\r\nimport Workshop from \"./client-ui/workshop\";\r\nimport ClientHome from \"./client-ui/client-home\";\r\nimport Theory from \"./client-ui/theory\";\r\nimport Exam from \"./client-ui/exam\";\r\nimport LoginClient from \"./client-ui/login-client\";\r\nimport Admin from \"./ui/admin\";\r\nimport Student from \"./client-ui/student\";\r\n\r\nexport const mobxStore = new MobxStore();\r\n\r\nfunction App() {\r\n    let location = useLocation();\r\n    let {adminPath} = Config;\r\n    return (\r\n        <StateContext.Provider value={mobxStore}>\r\n            <Switch>\r\n                <Route path={adminPath()}>\r\n                    <Admin/>\r\n                </Route>\r\n                <Route path=\"/\">\r\n                    <Student/>\r\n                </Route>\r\n            </Switch>\r\n            <ToastContainer\r\n                transition={Slide}\r\n                limit={3}\r\n                autoClose={2000}\r\n            />\r\n        </StateContext.Provider>\r\n    );\r\n}\r\n\r\nexport default observer(App);\r\n","C:\\Github\\ems_zoom\\src\\mobx\\global-context.js",[],"C:\\Github\\ems_zoom\\src\\ui\\home.js",["142"],"import Schedule from \"../components/schedule\";\r\nimport {Col, Form, Row} from \"react-bootstrap\";\r\nimport {useState} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst currentDate=new Date();\r\nconst currentMonth=currentDate.getMonth();\r\nconst currentYear=currentDate.getFullYear();\r\nconst Home = ()=>{\r\n    const [selectedMonth,setSelectedMonth]=useState(currentMonth+1);\r\n    const [selectedYear,setSelectedYear]=useState(currentYear);\r\n\r\n\r\n    return <div>\r\n        <Row>\r\n            <Col md={6}>\r\n                <Form.Group>\r\n                    <Form.Label>Month</Form.Label>\r\n                    <Form.Control as=\"select\" value={selectedMonth} onChange={e=>{\r\n                        setSelectedMonth(e.target.value)\r\n                    }}>\r\n                        {\r\n                            [...new Array(31)].map((v,i)=>{\r\n                                let value = i+1;\r\n                                return <option key={value} value={value}>{value}</option>\r\n                            })\r\n                        }\r\n                    </Form.Control>\r\n                </Form.Group>\r\n            </Col>\r\n            <Col md={6}>\r\n                <Form.Group>\r\n                    <Form.Label>Year</Form.Label>\r\n                    <Form.Control as=\"select\" value={selectedYear} onChange={e=>{\r\n                        setSelectedYear(e.target.value)\r\n                    }}>\r\n                        {\r\n                            [...new Array(5)].map((v,i)=>{\r\n                                let value = currentYear-i;\r\n                                return <option key={value} value={value}>{value}</option>\r\n                            })\r\n                        }\r\n                    </Form.Control>\r\n                </Form.Group>\r\n            </Col>\r\n        </Row>\r\n        <Schedule month={selectedMonth} year={selectedYear}/>\r\n    </div>\r\n}\r\nexport default Home;\r\n","C:\\Github\\ems_zoom\\src\\config.js",[],"C:\\Github\\ems_zoom\\src\\ui\\login.js",[],"C:\\Github\\ems_zoom\\src\\ui\\view-group.js",["143","144","145"],"C:\\Github\\ems_zoom\\src\\ui\\view-student.js",["146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179"],"import {useParams} from \"react-router-dom\";\r\nimport {observer} from \"mobx-react\";\r\nimport {useContext, useEffect, useState} from \"react\";\r\nimport StateContext from \"../mobx/global-context\";\r\nimport {Alert, Badge, Button, Col, Form, FormControl, Image, InputGroup, Modal, Row, Table} from \"react-bootstrap\";\r\nimport {render} from \"@testing-library/react\";\r\nimport { uid } from 'uid';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport ScrollToTop from 'react-scroll-up';\r\nimport {\r\n    changeCheckInState,\r\n    getCheckInStudents,\r\n    getEmailByScheduleDetail, getMeetURL,\r\n    getScheduleInfo, removeMeetURL, setMeetURL, pairUserData, confirmBox, loadStudentPicture\r\n} from \"../components/services\";\r\nimport {toast} from \"react-toastify\";\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\n\r\nlet reloadStudentsTimer=void 0;\r\nlet reloadStudentPicturesTimer=void 0;\r\nconst ViewStudent = () => {\r\n    const state = useContext(StateContext);\r\n    const {SchdID, SchdDetailID,group} = useParams();\r\n    const [schedule, setSchedule] = useState();\r\n    const [meetRoom,setMeetRoom] = useState('');\r\n    const [students,setStudents] = useState([]);\r\n    const [loadingBtn,setLoadingBtn] = useState({});\r\n    const [filter,setFilter] = useState('');\r\n    const [copiedState,setCopiedState] = useState(0);\r\n    const [userPairingText,setUserPairingText] = useState('');\r\n    const [userPairing,setUserPairing] = useState(null);\r\n    const [showEmail,setShowEmail] = useState(false);\r\n\r\n    useEffect(() => {\r\n        state.scheduleMenu = [\r\n            {to: `/schedule/${SchdID}/${SchdDetailID}`, title: 'Group'},\r\n            {to: `/schedule/${SchdID}/${SchdDetailID}/${group}`, title: 'Students'}\r\n        ];\r\n        getMeetURL(SchdID,SchdDetailID,group).then(data=>{\r\n            if(data){\r\n                setMeetRoom(data.meet_url);\r\n                setCopiedState(4);\r\n            }\r\n        });\r\n        reloadStudents();\r\n        getScheduleInfo(SchdID,SchdDetailID).then(res=>{\r\n            setSchedule(res);\r\n        })\r\n        reloadStudentPicturesTimer=setInterval(()=>{reloadStudents()},15*1000);\r\n        return ()=>{\r\n            clearInterval(reloadStudentsTimer);\r\n            clearInterval(reloadStudentPicturesTimer);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        let textArr=userPairingText.split(/\\n/);\r\n        let buffer={};\r\n        let currentName=null;\r\n        let expGetName=new RegExp('(.+)(?:\\\\d+:\\\\d+) ?(?:AM|PM)?');\r\n        let expGetCode=new RegExp('((?:\\\\d{9}\\\\-\\\\d{1})|(?:\\\\d{10}))');\r\n        textArr.map(line=>{\r\n            let name=line.match(expGetName);\r\n            let code=line.match(expGetCode);\r\n            if(name && (name[1]=='You'||name[1]=='คุณ'))return;\r\n            if(name){\r\n                currentName=name[1].trim();\r\n                if(currentName.substr(-1).match(/1/)){\r\n                    currentName=currentName.substr(0,currentName.length-1);\r\n                }\r\n            }else if(currentName && code){\r\n                let existed = students.find(student=>student.StudentID==fixStudentCode(code[1]));\r\n                let existedCopied={...existed};\r\n                if(existedCopied){\r\n                    if(existedCopied.avatar_name && existedCopied.avatar_name!=currentName){\r\n                        console.log(existedCopied.avatar_name,currentName);\r\n                        existedCopied.pairError=true;\r\n                    }\r\n                    buffer[currentName]=existedCopied;\r\n                }\r\n            }\r\n        })\r\n        if(Object.keys(buffer).length>0){\r\n            setUserPairing({...buffer});\r\n        }else{\r\n            setUserPairing(null);\r\n        }\r\n    },[userPairingText]);\r\n\r\n    function reloadStudents(){\r\n        getCheckInStudents(SchdID,SchdDetailID,group).then(res=>{\r\n            res.map(std=>{\r\n                loadStudentPicture(std.Username).then(()=>{});\r\n            })\r\n            setStudents(sortState(res));\r\n        });\r\n    }\r\n\r\n    function sortState(students){\r\n        students.sort((a,b)=>{\r\n            if(a.check_in_status=='1' && b.check_in_status=='0')return 1;\r\n            if(a.check_in_status=='0' && b.check_in_status=='1')return -1;\r\n            return 0;\r\n        })\r\n        return students;\r\n    }\r\n\r\n    function approve(std) {\r\n        chState(std,1);\r\n    }\r\n\r\n    function fixStudentCode(code){\r\n        if(!code.match(/\\d{9}\\-\\d{1}/)){\r\n            return code.substr(0,9)+'-'+code.substr(-1)\r\n        }\r\n        return code;\r\n    }\r\n\r\n    async function reject(std) {\r\n        chState(std,0);\r\n    }\r\n\r\n    async function chState(std,state){\r\n        setLoadingBtn(prevState => ({...prevState,[std.StdRegistID]:true}))\r\n        await changeCheckInState(std.StdRegistID,state);\r\n        if(state==1){\r\n            toast.success(std.StudentID+' Approved.');\r\n        }else{\r\n            toast.success(std.StudentID+' Rejected.');\r\n        }\r\n        setTimeout(()=>{\r\n            setStudents(old => {\r\n                let existed = old.find(v=>v.Username==std.Username);\r\n                existed.check_in_status=state;\r\n                return sortState(old);\r\n            });\r\n            setLoadingBtn(prevState => ({...prevState,[std.StdRegistID]:false}))\r\n        },200);\r\n        clearTimeout(reloadStudentsTimer);\r\n        reloadStudentsTimer=setTimeout(async ()=>{\r\n            reloadStudents();\r\n        },2000);\r\n    }\r\n\r\n    function startGoogleMeet(){\r\n        setCopiedState(1);\r\n        setTimeout(()=>{\r\n            setCopiedState(2);\r\n            setTimeout(()=>{\r\n                window.open(\"https://meet.google.com\");\r\n                setCopiedState(3);\r\n            },2000);\r\n        },1000);\r\n\r\n    }\r\n\r\n    function getEmail(){\r\n        let emailText='';\r\n        students.map(std=>{\r\n            emailText+=std.email+',';\r\n        });\r\n        return emailText.substr(0,emailText.length-1);\r\n    }\r\n\r\n    async function broadcast(){\r\n        if(meetRoom.match(/meet.google.com\\//)){\r\n            await setMeetURL(SchdID,SchdDetailID,group,meetRoom);\r\n            setCopiedState(4);\r\n            toast.success(`Broadcast success.`);\r\n        }else{\r\n            toast.warn('Please fill Google meet link.')\r\n        }\r\n    }\r\n\r\n    async function pairUser(approve=false){\r\n        if(!userPairing) return;\r\n        let buffer=[];\r\n        Object.keys(userPairing).map(pair=>{\r\n            let student=userPairing[pair];\r\n            if(student){\r\n                let {Username,StudentID}=student;\r\n                buffer.push({\r\n                    approve,\r\n                    Username,\r\n                    avatar_name:pair,\r\n                    SchdID,\r\n                    SchdDetailID,\r\n                    group\r\n                });\r\n            }\r\n\r\n        })\r\n        await pairUserData(buffer);\r\n        setUserPairingText('');\r\n        reloadStudents();\r\n        if(approve){\r\n            toast.success('Pair user and approve success.')\r\n        }else{\r\n            toast.success('Pair user success.')\r\n        }\r\n    }\r\n\r\n    function pairUserAndApprove(){\r\n        confirmBox('Pair user and Approve',null,()=>{\r\n            pairUser(true);\r\n        })\r\n    }\r\n\r\n    return <div>\r\n        {\r\n            (schedule && students)\r\n                ? <>\r\n                    <Row>\r\n                        <Col>\r\n                            <div>\r\n                                <Form.Group>\r\n                                    {copiedState==4\r\n                                        ?\r\n                                        <Button variant=\"danger\" onClick={e=>{\r\n                                            confirmBox('Stop broadcast',null,()=>{\r\n                                                removeMeetURL(SchdID,SchdDetailID,group).then(()=>{\r\n                                                    setCopiedState(0);\r\n                                                    setMeetRoom('');\r\n                                                })\r\n                                            })\r\n                                        }}>Stop Google meet</Button>\r\n                                        :\r\n                                        <CopyToClipboard text={getEmail()}\r\n                                                          onCopy={()=>{startGoogleMeet()}}\r\n                                        >\r\n                                            <Button variant=\"primary\">Start Google meet</Button>\r\n                                        </CopyToClipboard>\r\n                                    }\r\n                                    {!!copiedState &&\r\n                                    <div>\r\n                                        {(copiedState==1 || copiedState==2) && <Alert variant=\"success\" className=\"mt-2 mb-1\">Copied email to clipboard.</Alert>}\r\n                                        {copiedState==2 && <Alert variant=\"warning\">Starting Google meet.</Alert>}\r\n                                        {copiedState==3 && <div>\r\n                                            <InputGroup className=\"mb-3 mt-4\" id=\"search\">\r\n                                                <InputGroup.Prepend>\r\n                                                    <InputGroup.Text id=\"basic-addon1\">Google meet URL</InputGroup.Text>\r\n                                                </InputGroup.Prepend>\r\n                                                <FormControl\r\n                                                    placeholder=\"meet.google.com/xxx-yyy-zzz\"\r\n                                                    value={meetRoom}\r\n                                                    onChange={e=>setMeetRoom(e.target.value)}\r\n                                                />\r\n                                                <InputGroup.Append>\r\n                                                    <Button variant=\"danger\" onClick={e=>{broadcast()}}>Broadcast</Button>\r\n                                                </InputGroup.Append>\r\n                                            </InputGroup>\r\n                                        </div>\r\n                                        }\r\n                                        {copiedState==4 &&\r\n                                        <>\r\n                                            <Alert variant=\"success\" className=\"mt-2\">Broadcasting... <Badge variant=\"danger\">{meetRoom}</Badge> to every client.</Alert>\r\n                                            <Row>\r\n                                                <Col md={6}>\r\n                                                    <Form.Group>\r\n                                                        <Form.Label>User pairing tool</Form.Label>\r\n                                                        <Form.Control as=\"textarea\" rows={7} value={userPairingText} onChange={e=>setUserPairingText(e.target.value)}/>\r\n                                                    </Form.Group>\r\n                                                </Col>\r\n                                                <Col md={6}>\r\n                                                    <Form.Group>\r\n                                                        <Form.Label>User pairing results</Form.Label>\r\n                                                        {userPairing\r\n                                                            ?\r\n                                                            <Table>\r\n                                                                <thead>\r\n                                                                <tr>\r\n                                                                    <th>Code</th>\r\n                                                                    <th>Name</th>\r\n                                                                    <th>Google meet name</th>\r\n                                                                </tr>\r\n                                                                </thead>\r\n                                                                <tbody>\r\n                                                                {Object.keys(userPairing).map((pair,i)=>{\r\n                                                                    let student=userPairing[pair];\r\n                                                                   return  <tr key={student.StudentID+'_'+i}>\r\n                                                                       <td>{student.pairError\r\n                                                                           ?\r\n                                                                           <div>{student.StudentID}\r\n                                                                               <Badge className=\"ml-1\" variant=\"danger\">\r\n                                                                                   Existed -> {student.avatar_name}\r\n                                                                               </Badge>\r\n                                                                           </div>\r\n                                                                           :\r\n                                                                           student.StudentID}\r\n                                                                       </td>\r\n                                                                       <td>{student.FirstName_Th} {student.LastName_Th}</td>\r\n                                                                       <td>{pair}</td>\r\n                                                                   </tr>\r\n                                                                    })\r\n                                                                }\r\n                                                                </tbody>\r\n                                                            </Table>\r\n                                                            :\r\n                                                            <div>Waiting... input</div>\r\n\r\n                                                        }\r\n                                                    </Form.Group>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            {userPairing && Object.keys(userPairing).length>0 &&\r\n                                            <>\r\n                                                <Form.Group className=\"text-center\">\r\n                                                    <Button onClick={e=>pairUser()} className=\"mr-4\">Pair</Button>\r\n                                                    <Button onClick={e=>pairUserAndApprove()} variant=\"secondary\">Pair and approve</Button>\r\n                                                </Form.Group>\r\n                                            </>\r\n                                            }\r\n                                        </>\r\n                                        }\r\n                                    </div>\r\n                                    }\r\n                                    </Form.Group>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Row>\r\n                                <Col xs={'auto'}>\r\n                                    <h3>นักศึกในกลุ่ม <span className=\"text-uppercase\">{group}</span></h3>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Button variant=\"outline-secondary\" className=\"ml-2\" onClick={e=>setShowEmail(true)}>View email</Button>\r\n                                </Col>\r\n                            </Row>\r\n                            <div dangerouslySetInnerHTML={{__html:schedule.DateRegist_Desc_Th}}></div>\r\n                            <div>ภาค {schedule.ModuleType==1?<Badge variant=\"danger\">ทฤษฎี</Badge>:<Badge variant=\"info\">ปฏิบัติ</Badge>} ประจำวันที่ {schedule.ExamDate} / {schedule.ExamTimeStart}-{schedule.ExamTimeEnd}</div>\r\n                            <InputGroup className=\"mb-3 mt-4\" id=\"search\">\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text id=\"basic-addon1\">ค้นหา</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl\r\n                                    placeholder=\"Code | Avatar name | FName | LName | Email\"\r\n                                    value={filter}\r\n                                    onChange={e=>setFilter(e.target.value)}\r\n                                />\r\n                                <InputGroup.Append>\r\n                                    <Button variant=\"dark\" onClick={e=>setFilter('')}>Reset</Button>\r\n                                </InputGroup.Append>\r\n                            </InputGroup>\r\n                            <Table className=\"sticky table-hover\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    <th>Picture</th>\r\n                                    <th>Code</th>\r\n                                    <th>Avatar name</th>\r\n                                    <th>Name</th>\r\n                                    <th>Email</th>\r\n                                    <th>Status</th>\r\n                                    <th>Check In</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {\r\n                                    students && students\r\n                                        .filter(std=>{\r\n                                            if(!filter)return true;\r\n                                            let regExp=new RegExp(`${filter}`,'ig');\r\n                                            return (\r\n                                                std.StudentID.match(regExp)\r\n                                                || std.FirstName_Th.match(regExp)\r\n                                                || std.LastName_Th.match(regExp)\r\n                                                || std.email.match(regExp)\r\n                                                || (std.avatar_name && std.avatar_name.match(regExp))\r\n                                            )\r\n                                        })\r\n                                        .map((std, i) =>\r\n                                            <tr key={'std_'+i} className={std.check_in_status=='1' ? 'text-success text-white' : ''}>\r\n                                                <td>{i + 1}</td>\r\n                                                <td width=\"150\">\r\n                                                    {typeof state.studentPicture[std.Username] == 'undefined'?\r\n                                                        <Alert variant='info'>Loading...</Alert>\r\n                                                        :\r\n                                                        <>\r\n                                                            {state.studentPicture[std.Username]?\r\n                                                                <Image src={state.studentPicture[std.Username]} fluid rounded/>\r\n                                                                :\r\n                                                                <Image style={{opacity:'0.3'}} src='/images/user_avatar.svg' fluid rounded/>\r\n                                                            }\r\n                                                        </>\r\n                                                    }\r\n                                                </td>\r\n                                                <td style={{whiteSpace:'nowrap'}}>{std.StudentID}</td>\r\n                                                <td>{std.avatar_name?<strong variant='info' style={{fontSize:'110%'}}>{std.avatar_name}</strong>:'Not pair'}</td>\r\n                                                <td>{std.FirstName_Th} {std.LastName_Th}</td>\r\n                                                <td>{std.email}</td>\r\n                                                <td>\r\n                                                    {\r\n                                                        std.check_in_status=='1'\r\n                                                            ? <Badge variant=\"success\" className=\"ml-1\">Approved</Badge>\r\n                                                            : <Badge variant=\"info\" className=\"ml-1\">Waiting</Badge>\r\n                                                    }\r\n                                                    {\r\n                                                        std.IPAddress && <Badge variant=\"warning\" className=\"ml-1\">{std.IPAddress}</Badge>\r\n                                                    }\r\n                                                    <div>\r\n                                                        {\r\n                                                            std.IsStart && <Badge variant=\"secondary\" className=\"ml-1\">Logged In</Badge>\r\n                                                        }\r\n                                                        {\r\n                                                            std.IsEnd && <Badge variant=\"danger\" className=\"ml-1\">Exited</Badge>\r\n                                                        }\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td>\r\n                                                    {std.check_in_status=='1'\r\n                                                        ? <Button variant=\"danger\" type=\"button\" disabled={loadingBtn[std.StdRegistID]} onClick={reject.bind(this, std)}>Reject{loadingBtn[std.StdRegistID]?'...':''}</Button>\r\n                                                        : <Button variant=\"success\" type=\"button\" disabled={loadingBtn[std.StdRegistID]} onClick={approve.bind(this, std)}>Approve{loadingBtn[std.StdRegistID]?'...':''}</Button>\r\n                                                    }\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                }\r\n                                </tbody>\r\n                            </Table>\r\n                        </Col>\r\n                    </Row>\r\n                    <Modal show={showEmail} onHide={e=>setShowEmail(false)}>\r\n                        <Modal.Header closeButton>\r\n                            <span className=\"text-uppercase\">Email {group}:</span>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Form.Control rows={20} as=\"textarea\" onChange={e=>{}} onClick={e=>e.target.select()} value={getEmail()}/>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={e=>setShowEmail(false)}>\r\n                                Close\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                    <ScrollToTop showUnder={160}>\r\n                        <img src=\"/images/up_arrow_round.png\"/>\r\n                    </ScrollToTop>\r\n                </>\r\n                : <div>Loading...</div>\r\n        }\r\n    </div>\r\n}\r\nexport default observer(ViewStudent);\r\n","C:\\Github\\ems_zoom\\src\\layouts\\full-layout.js",["180","181"],"import React from 'react';\r\nimport {Col, Container, Navbar, Row} from \"react-bootstrap\";\r\nimport TopMenu from \"../components/top-menu\";\r\nimport Footer from \"../components/footer\";\r\nimport {useParams,withRouter} from \"react-router-dom\";\r\n\r\nconst FullLayout = (props)=>{\r\n    const params = useParams();\r\n    return <>\r\n        <div className=\"container-wrapper\">\r\n            <TopMenu/>\r\n            <Container>\r\n                <Row>\r\n                    <Col>{props.children}</Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n        <Footer/>\r\n    </>\r\n}\r\nexport default withRouter(FullLayout);\r\n","C:\\Github\\ems_zoom\\src\\mobx\\mobx-store.js",["182","183"],"import {makeAutoObservable} from \"mobx\";\r\n\r\nclass MobxStore {\r\n    currentUser = void 0;\r\n    currentStudent = void 0;\r\n\r\n    scheduleMenu=[];\r\n\r\n    studentPicture={};\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    setStudentPicture(Username,student_image_data){\r\n        this.studentPicture={\r\n            ...this.studentPicture,\r\n            [Username]:student_image_data\r\n        }\r\n    }\r\n\r\n    setUser(user) {\r\n        this.currentUser = user;\r\n    }\r\n\r\n    setStudent(student){\r\n        this.currentStudent=student;\r\n    }\r\n\r\n    studentApprove(code) {\r\n        let student = this.findStudent(code);\r\n        if (student) {\r\n            student.approved = true;\r\n        }\r\n    }\r\n\r\n    studentReject(code) {\r\n        let student = this.findStudent(code);\r\n        if (student) {\r\n            student.approved = false;\r\n        }\r\n    }\r\n    findStudent(code) {\r\n        let student = void 0;\r\n        Object.keys(this.students).map(group => {\r\n            if (!student) student = this.students[group].find(std => std.code == code);\r\n        })\r\n        return student;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default MobxStore;\r\n","C:\\Github\\ems_zoom\\src\\components\\services.js",["184","185","186","187"],"C:\\Github\\ems_zoom\\src\\client-ui\\workshop.js",["188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208"],"C:\\Github\\ems_zoom\\src\\client-ui\\theory.js",[],"C:\\Github\\ems_zoom\\src\\client-ui\\exam.js",["209","210","211","212","213","214"],"import {useParams} from \"react-router-dom\";\r\nimport CheckInProcess from \"../client-components/check-in-process\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport Workshop from \"./workshop\";\r\nimport ExamScheduleDay from \"../client-components/exam-schedule-day\";\r\nimport {checkLogin, getExamSchedules} from \"../client-components/client-services\";\r\nimport {observer} from \"mobx-react\";\r\nimport StateContext from \"../mobx/global-context\";\r\nimport {toast} from \"react-toastify\";\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst Exam=()=>{\r\n    const {type,StdRegistID, SchdDetailID} = useParams();\r\n    const state = useContext(StateContext);\r\n    const history = useHistory();\r\n    const [examSchedule,setExamSchedule] = useState();\r\n\r\n    useEffect(()=>{\r\n        getExamSchedules().then(data=>{\r\n            setExamSchedule(data);\r\n        });\r\n    },[]);\r\n    function onApproved(){\r\n\r\n    }\r\n    function onDenied(){\r\n\r\n    }\r\n    if(!type){\r\n        return <ExamScheduleDay schedules={examSchedule}/>\r\n    }\r\n    return <CheckInProcess\r\n        state={state}\r\n        StdRegistID={StdRegistID}\r\n        onApproved={onApproved}\r\n        onDenied={onDenied}\r\n    >\r\n        {type=='workshop' &&\r\n            <Workshop/>\r\n        }\r\n        {type=='theory' &&\r\n        <Workshop/>\r\n        }\r\n    </CheckInProcess>\r\n}\r\nexport default observer(Exam);\r\n","C:\\Github\\ems_zoom\\src\\client-ui\\client-home.js",[],"C:\\Github\\ems_zoom\\src\\components\\schedule.js",["215","216","217","218","219","220"],"import {Alert, Badge, Button, Card, Col, Row, Modal, Form} from \"react-bootstrap\";\r\nimport {observer} from \"mobx-react\";\r\nimport {useContext, useEffect, useState} from \"react\";\r\nimport StateContext from \"../mobx/global-context\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Config from \"../config\";\r\nimport {getEmailByScheduleDetail, getSchedules} from \"./services\";\r\nimport {$mobx} from \"mobx\";\r\n\r\nconst Schedule = ({month,year}) => {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [studentsWithGroup, setStudentsWithGroup] = useState(null);\r\n    const [schedules,setSchedules] = useState(null);\r\n    const state = useContext(StateContext);\r\n\r\n    useEffect(()=>{\r\n        state.scheduleMenu=[];\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n       getSchedules(month,year).then(results=>{\r\n           setSchedules(results);\r\n       });\r\n    },[month,year]);\r\n\r\n    async function showEmail(schd){\r\n        let studentsWithGroup = await getEmailByScheduleDetail(schd.SchdID,schd.SchdDetailID);\r\n        setStudentsWithGroup(studentsWithGroup);\r\n        setShowModal(true);\r\n    }\r\n    function hideModal(){\r\n        setStudentsWithGroup(null);\r\n        setShowModal(false);\r\n    }\r\n    return <>\r\n        <h3>รอบสอบของ ปี {year}</h3>\r\n        {\r\n            schedules && Object.keys(schedules).map(day => {\r\n                return (\r\n                    <Card key={day} className=\"mt-2\">\r\n                        <Card.Header>\r\n                            <Card.Text>การสอบวันที่ {day}</Card.Text>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Row>\r\n                                {schedules[day].map((schd,i) =>\r\n                                    <SchdBlock key={`${schd.examDate}_${i}`} schd={schd} onEmail={showEmail.bind(this,schd)}/>\r\n                                )}\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                )\r\n            })\r\n        }\r\n        <Modal show={showModal} onHide={hideModal}>\r\n            <Modal.Header closeButton>\r\n                {studentsWithGroup\r\n                    ?<Modal.Title>Email ในรอบสอบ {studentsWithGroup.title}</Modal.Title>\r\n                    :<Modal.Title>Loading...</Modal.Title>\r\n                }\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {\r\n                    studentsWithGroup\r\n                        ?<>\r\n                            {\r\n                                Object.keys(studentsWithGroup).map(group=>{\r\n                                    let emailText='';\r\n                                    return <div key={group}>\r\n                                        <h3 style={{textTransform:'capitalize'}}>{group}</h3>\r\n                                        {\r\n                                            studentsWithGroup[group].map(std=>{\r\n                                                emailText+=`${std.RegKKU.KKUMAIL},`\r\n                                            })\r\n                                        }\r\n                                        <Form.Control rows={5} as='textarea'\r\n                                                      onChange={e=>{}}\r\n                                                      onClick={e=>e.target.select()}\r\n                                                      value={emailText.substr(0,emailText.length-1)}/>\r\n                                    </div>\r\n                                })\r\n                            }\r\n                        </>\r\n                        :<div>Loading....</div>\r\n                }\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={hideModal}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={hideModal}>\r\n                    Save Changes\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    </>\r\n}\r\n\r\n\r\nconst SchdBlock = ({schd,onEmail}) => {\r\n    const history = useHistory();\r\n    return <Col md={4}>\r\n        <div style={{padding: '10px'}}>\r\n            <Card>\r\n                <Card.Header>\r\n                    <Card.Title>\r\n                        <small>{schd.ExamTimeStart}-{schd.ExamTimeEnd}</small>\r\n                    </Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <div className=\"text-center\">\r\n                    {schd.ModuleType==\"1\"?<Alert variant=\"danger\">ทฤษฎี</Alert>:<Alert variant=\"info\">ปฏิบัติ</Alert>}\r\n                        <div className=\"text-center\">\r\n                            <Button className=\"ml-2\" onClick={e => history.push(Config.adminPath(`/schedule/${schd.SchdID}/${schd.SchdDetailID}`))}>Enter</Button>\r\n                            <Button variant=\"secondary\" className=\"ml-2\" onClick={onEmail}>Email</Button>\r\n                        </div>\r\n                    </div>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <Card.Text className=\"text-right\">Student: {schd.studentCount}</Card.Text>\r\n                </Card.Footer>\r\n            </Card>\r\n        </div>\r\n    </Col>\r\n}\r\n\r\nexport default observer(Schedule);\r\n","C:\\Github\\ems_zoom\\src\\components\\top-menu.js",["221","222","223","224","225"],"import {observer} from \"mobx-react\";\r\nimport {useContext} from \"react\";\r\nimport StateContext from \"../mobx/global-context\";\r\nimport {useLocation,NavLink,useParams,withRouter,useHistory} from 'react-router-dom';\r\nimport {Badge, Button} from \"react-bootstrap\";\r\nimport {userLogout} from \"./services\";\r\nimport Config from \"../config\";\r\n\r\n\r\nconst TopMenu=(props)=>{\r\n    const state = useContext(StateContext);\r\n    const history = useHistory();\r\n    const params = useParams();\r\n    async function logout(){\r\n        await userLogout();\r\n        state.setUser(null);\r\n        history.push(Config.adminPath('/login'));\r\n    }\r\n    return <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <a className=\"navbar-brand\" href=\"#\">Ems Check-in</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\r\n                aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to={Config.adminPath()} exact>Schedule</NavLink>\r\n                </li>\r\n                {\r\n                    state.scheduleMenu.map(mn=>\r\n                        <li key={mn.title} className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to={Config.adminPath(mn.to)} exact>-> {mn.title}</NavLink>\r\n                        </li>\r\n                    )\r\n                }\r\n            </ul>\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/\" exact>\r\n                        Username: <strong className=\"mr-2\">{state.currentUser.username}</strong><Button variant=\"danger\" onClick={e=>{logout()}}>Logout</Button>\r\n                    </NavLink>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </nav>\r\n}\r\nexport default observer(TopMenu);\r\n","C:\\Github\\ems_zoom\\src\\components\\footer.js",["226"],"import {Container} from \"react-bootstrap\";\r\n\r\nconst Footer=()=>{\r\n    return <div className=\"footer\">\r\n        <div style={{padding:'10px'}}></div>\r\n    </div>\r\n}\r\nexport default Footer;\r\n","C:\\Github\\ems_zoom\\src\\client-components\\client-services.js",[],"C:\\Github\\ems_zoom\\src\\client-components\\check-in-process.js",["227","228","229","230","231","232","233"],"import {useContext, useEffect, useRef, useState} from \"react\";\r\nimport {checkClient, getMyPicture, studentLogout} from \"./client-services\";\r\nimport {Alert, Badge, Button, Card, Col, Container, Image, Row, Table} from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport QRCode from 'qrcode';\r\nimport StateContext from \"../mobx/global-context\";\r\nimport {observer} from \"mobx-react\";\r\n\r\nconst CheckInProcess = ({state, StdRegistID, onApproved, onDenied, children}) => {\r\n\r\n    const [approve, setApprove] = useState(void 0);\r\n    const [meetUrl, setMeetUrl] = useState(null);\r\n    const [meetQRCode, setMeetQRCode] = useState(null);\r\n    const [myPicture, setMyPicture] = useState(void 0);\r\n    const timer = useRef(null);\r\n    const last_update = useRef(null);\r\n    const last_update_url = useRef(null);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        checker();\r\n        timer.current = setInterval(() => checker(), 5000);\r\n        return () => {\r\n            console.log('CLEAR');\r\n            clearInterval(timer.current);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (state.currentStudent) {\r\n            getMyPicture().then(picture=>{\r\n                if(picture){\r\n                    setMyPicture(picture.student_image_data)\r\n                }\r\n            })\r\n        }\r\n    }, [state.currentStudent])\r\n\r\n\r\n    function getQRCodeToState(url) {\r\n        if (!url) {\r\n            setMeetQRCode(null);\r\n            return;\r\n        }\r\n        QRCode.toDataURL(url)\r\n            .then(b64image => {\r\n                setMeetQRCode(b64image);\r\n            })\r\n            .catch(err => {\r\n                setMeetQRCode(null);\r\n            })\r\n    }\r\n\r\n    function checker() {\r\n        checkClient(StdRegistID).then(data => {\r\n            console.log(data);\r\n            if (last_update.current != data.last_update || last_update_url.current != data.last_update_url) {\r\n                if (data.check_in_status == \"1\") {\r\n                    setApprove(true);\r\n                    onApproved();\r\n                } else {\r\n                    if (data.meet_url) {\r\n                        let url = data.meet_url.match(/^http/) ? data.meet_url : `https://${data.meet_url}`;\r\n                        setMeetUrl(url);\r\n                        getQRCodeToState(url);\r\n                    } else {\r\n                        setMeetUrl(null);\r\n                        getQRCodeToState(null);\r\n                    }\r\n                    setApprove(false);\r\n                    onDenied();\r\n                }\r\n                last_update.current = data.last_update;\r\n                last_update_url.current = data.last_update_url;\r\n            }\r\n        });\r\n    }\r\n\r\n    async function logout() {\r\n        await studentLogout();\r\n        state.setStudent(null);\r\n        history.push('/login');\r\n    }\r\n\r\n    if (typeof approve == 'undefined') return <Alert variant='info'>Loading...</Alert>;\r\n    if (!approve) {\r\n        return <Container>\r\n            <Row>\r\n                <Col>\r\n                    <Card className=\"mt-4 bg-dark text-white\">\r\n                        <Card.Header>EMS Check-In</Card.Header>\r\n                        <Card.Body>\r\n                            <div className=\"text-center\">\r\n                                <Row>\r\n                                    <Col className=\"col-auto\">\r\n                                        {typeof myPicture == 'undefined'?\r\n                                         <Alert variant=\"info\">Loading...</Alert>\r\n                                            :\r\n                                            <>\r\n                                                {myPicture ?\r\n                                                    <div className=\"text-center\"><Image width=\"150px\" src={myPicture} fluid rounded></Image>\r\n                                                    </div>\r\n                                                    :\r\n                                                    <div className=\"text-center\"><Image width=\"150px\" src='/images/user_avatar.svg'\r\n                                                                                        fluid></Image></div>\r\n                                                }\r\n                                            </>\r\n                                        }\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <div style={{width:'400px'}}>\r\n                                            <Table className=\"text-white\">\r\n                                                <tbody>\r\n                                                <tr>\r\n                                                    <td colSpan={2}>Student detail</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th>Student ID:</th>\r\n                                                    <td>{state.currentStudent.studentID}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th>Fullname:</th>\r\n                                                    <td>{state.currentStudent.fname} {state.currentStudent.lname}</td>\r\n                                                </tr>\r\n                                                </tbody>\r\n                                            </Table>\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        {\r\n                                            !meetQRCode\r\n                                                ?\r\n                                                <>\r\n                                        <Alert variant='danger'>Please <span\r\n                                            className=\"badge badge-info\">Check-in</span> before start</Alert>\r\n                                                    <a className=\"btn btn-primary btn-sm ml-2 disabled\">Waiting meet...</a>\r\n                                                </>\r\n                                                :\r\n                                                <div className=\"text-center\">\r\n                                        <Alert variant=\"danger\" className=\"mb-2\">Please <span\r\n                                            className=\"badge badge-info\">Check-in</span> before start exam.</Alert>\r\n                                                    <div>\r\n                                                        <Alert variant='info' className=\"mb-2\">Use your mobile devices scan this\r\n                                                            QR-CODE to start Google Meet</Alert>\r\n                                                        <div className=\"mb-2\"><Image src={meetQRCode} rounded></Image></div>\r\n                                                        <div><Badge variant='success' className='mr-2'>Google Meet - Join:</Badge>\r\n                                                            <span style={{fontSize:'20px'}}>\r\n                                                                {(()=>{\r\n                                                                    let u = meetUrl.split('/');\r\n                                                                    return u[u.length-1];\r\n                                                                })()}\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                        }\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                            <div className=\"text-right\"><Button onClick={e => logout()} variant='danger'>Logout</Button>\r\n                            </div>\r\n                        </Card.Footer>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    }\r\n    return children;\r\n}\r\nexport default observer(CheckInProcess);\r\n","C:\\Github\\ems_zoom\\src\\client-components\\exam-schedule-day.js",["234","235"],"import Header from \"./header\";\r\nimport {Badge, Button, Card, Col, Container, Row} from \"react-bootstrap\";\r\nimport classNames from 'classnames'\r\nconst striptags = require('striptags');\r\n\r\nconst ExamScheduleDay = ({schedules})=>{\r\n    console.log(schedules);\r\n    if(!schedules)return <div>Loading...</div>\r\n    return <div>\r\n        <Header/>\r\n        <Container className=\"mt-4\">\r\n            <Row>\r\n                {\r\n                    schedules.map(schd=>{\r\n                        return <Col key={schd.SchdDetailID} md={6} className=\"mb-2\">\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    <div>{striptags(schd.DateRegist_Desc_Th)}</div>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    {schd.ModuleType=='1'?\r\n                                        <Badge variant='danger' className=\"mr-2\">Theory</Badge>\r\n                                        :\r\n                                        <Badge variant='info' className=\"mr-2\">Workshop</Badge>\r\n                                    }\r\n                                    <span>{schd.ExamDate} / {schd.ExamTimeStart}-{schd.ExamTimeEnd}</span>\r\n                                </Card.Body>\r\n                                <Card.Footer>\r\n                                    <div className=\"text-right\">\r\n                                        <Button variant='primary' className=\"ml-auto\">Start Exam</Button>\r\n                                    </div>\r\n                                </Card.Footer>\r\n                            </Card>\r\n                        </Col>\r\n                    })\r\n                }\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n}\r\nexport default ExamScheduleDay;","C:\\Github\\ems_zoom\\src\\client-ui\\login-client.js",[],"C:\\Github\\ems_zoom\\src\\ui\\admin.js",["236"],"import FullLayout from \"../layouts/full-layout\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport Home from \"./home\";\r\nimport ViewGroup from \"./view-group\";\r\nimport ViewStudent from \"./view-student\";\r\nimport Login from \"./login\";\r\nimport {observer} from \"mobx-react\";\r\nimport {useContext, useEffect} from \"react\";\r\nimport StateContext from \"../mobx/global-context\";\r\nimport Config from \"../config\";\r\nimport {Alert} from \"react-bootstrap\";\r\nimport {checkLogin} from \"../components/services\";\r\n\r\nlet timer;\r\nconst Admin = ()=>{\r\n    const state = useContext(StateContext);\r\n    let {adminPath} = Config;\r\n    useEffect(() => {\r\n        checker();\r\n        timer=setInterval(() => {\r\n            checker()\r\n        }, 5 * 60000)\r\n        return ()=>{\r\n            clearInterval(timer);\r\n        }\r\n    }, []);\r\n    function checker() {\r\n        checkLogin().then(user => {\r\n            if (user) {\r\n                state.setUser(user);\r\n            } else {\r\n                state.setUser(null);\r\n            }\r\n        })\r\n    }\r\n    if (typeof state.currentUser == 'undefined') return <Alert variant='info'>Loading...</Alert>\r\n    return <>\r\n        {state.currentUser\r\n            ?\r\n            <FullLayout>\r\n                <Switch>\r\n                    <Route path={adminPath()} exact component={Home}/>\r\n                    <Route path={adminPath('/schedule/:SchdID(\\\\d+)/:SchdDetailID(\\\\d+)')} exact\r\n                           component={ViewGroup}/>\r\n                    <Route path={adminPath('/schedule/:SchdID(\\\\d+)/:SchdDetailID(\\\\d+)/:group')}\r\n                           component={ViewStudent}/>\r\n                </Switch>\r\n            </FullLayout>\r\n            :\r\n            <Switch>\r\n                <Route path=\"*\" component={Login}/>\r\n            </Switch>\r\n        }\r\n    </>\r\n}\r\nexport default observer(Admin);","C:\\Github\\ems_zoom\\src\\client-ui\\student.js",["237","238"],"import {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Exam from \"./exam\";\r\nimport ClientHome from \"./client-home\";\r\nimport LoginClient from \"./login-client\";\r\nimport {useContext, useEffect} from \"react\";\r\nimport StateContext from \"../mobx/global-context\";\r\nimport {checkLogin} from \"../client-components/client-services\";\r\nimport {Alert} from \"react-bootstrap\";\r\nimport {observer} from \"mobx-react\";\r\n\r\nlet timer;\r\nconst Student = ()=>{\r\n    const state = useContext(StateContext);\r\n    useEffect(() => {\r\n        checker();\r\n        timer=setInterval(() => {\r\n            checker()\r\n        }, 5 * 60000)\r\n        return ()=>{\r\n            clearInterval(timer);\r\n        }\r\n    }, []);\r\n    function checker() {\r\n        checkLogin().then(user => {\r\n            if (user) {\r\n                state.setStudent(user);\r\n            } else {\r\n                state.setStudent(null);\r\n            }\r\n        })\r\n    }\r\n    if (typeof state.currentStudent == 'undefined') return <Alert variant='info'>Loading...</Alert>\r\n    return <>\r\n        {state.currentStudent\r\n            ?\r\n            <Switch>\r\n                <Route path=\"/\" exact component={ClientHome}/>\r\n                <Route path=\"/exam\" exact exact component={Exam}/>\r\n                <Route path=\"/exam/:type/:StdRegistID/:SchdDetailID\" component={Exam}/>\r\n                <Redirect to=\"/exam\"/>\r\n            </Switch>\r\n            :\r\n            <Switch>\r\n                <Route path=\"/\" exact component={ClientHome}/>\r\n                <Route path=\"*\" component={LoginClient}/>\r\n            </Switch>\r\n        }\r\n    </>\r\n}\r\nexport default observer(Student);","C:\\Github\\ems_zoom\\src\\client-components\\header.js",[],"C:\\Github\\ems_zoom\\src\\client-components\\client-top-menu.js",[],{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","severity":1,"message":"244","line":2,"column":36,"nodeType":"245","messageId":"246","endLine":2,"endColumn":44},{"ruleId":"243","severity":1,"message":"247","line":3,"column":8,"nodeType":"245","messageId":"246","endLine":3,"endColumn":13},{"ruleId":"243","severity":1,"message":"248","line":7,"column":8,"nodeType":"245","messageId":"246","endLine":7,"endColumn":12},{"ruleId":"243","severity":1,"message":"249","line":8,"column":8,"nodeType":"245","messageId":"246","endLine":8,"endColumn":18},{"ruleId":"243","severity":1,"message":"250","line":9,"column":8,"nodeType":"245","messageId":"246","endLine":9,"endColumn":17},{"ruleId":"243","severity":1,"message":"251","line":10,"column":8,"nodeType":"245","messageId":"246","endLine":10,"endColumn":19},{"ruleId":"243","severity":1,"message":"252","line":11,"column":25,"nodeType":"245","messageId":"246","endLine":11,"endColumn":30},{"ruleId":"243","severity":1,"message":"253","line":14,"column":9,"nodeType":"245","messageId":"246","endLine":14,"endColumn":18},{"ruleId":"243","severity":1,"message":"254","line":15,"column":9,"nodeType":"245","messageId":"246","endLine":15,"endColumn":19},{"ruleId":"243","severity":1,"message":"255","line":16,"column":9,"nodeType":"245","messageId":"246","endLine":16,"endColumn":14},{"ruleId":"243","severity":1,"message":"256","line":18,"column":8,"nodeType":"245","messageId":"246","endLine":18,"endColumn":16},{"ruleId":"243","severity":1,"message":"257","line":19,"column":8,"nodeType":"245","messageId":"246","endLine":19,"endColumn":18},{"ruleId":"243","severity":1,"message":"258","line":20,"column":8,"nodeType":"245","messageId":"246","endLine":20,"endColumn":14},{"ruleId":"243","severity":1,"message":"259","line":21,"column":8,"nodeType":"245","messageId":"246","endLine":21,"endColumn":12},{"ruleId":"243","severity":1,"message":"260","line":22,"column":8,"nodeType":"245","messageId":"246","endLine":22,"endColumn":19},{"ruleId":"243","severity":1,"message":"261","line":29,"column":9,"nodeType":"245","messageId":"246","endLine":29,"endColumn":17},{"ruleId":"243","severity":1,"message":"262","line":4,"column":8,"nodeType":"245","messageId":"246","endLine":4,"endColumn":13},{"ruleId":"263","severity":1,"message":"264","line":26,"column":7,"nodeType":"265","endLine":26,"endColumn":9,"suggestions":"266"},{"ruleId":"267","severity":1,"message":"268","line":31,"column":41,"nodeType":"269","messageId":"270","endLine":31,"endColumn":43},{"ruleId":"271","severity":1,"message":"272","line":40,"column":38,"nodeType":"273","messageId":"274","endLine":40,"endColumn":40},{"ruleId":"243","severity":1,"message":"275","line":6,"column":9,"nodeType":"245","messageId":"246","endLine":6,"endColumn":15},{"ruleId":"243","severity":1,"message":"276","line":7,"column":10,"nodeType":"245","messageId":"246","endLine":7,"endColumn":13},{"ruleId":"243","severity":1,"message":"277","line":13,"column":5,"nodeType":"245","messageId":"246","endLine":13,"endColumn":29},{"ruleId":"243","severity":1,"message":"278","line":17,"column":10,"nodeType":"245","messageId":"246","endLine":17,"endColumn":22},{"ruleId":"263","severity":1,"message":"279","line":54,"column":8,"nodeType":"265","endLine":54,"endColumn":10,"suggestions":"280"},{"ruleId":"267","severity":1,"message":"281","line":62,"column":25,"nodeType":"269","messageId":"282","endLine":62,"endColumn":27},{"ruleId":"271","severity":1,"message":"272","line":65,"column":32,"nodeType":"273","messageId":"274","endLine":65,"endColumn":34},{"ruleId":"271","severity":1,"message":"272","line":65,"column":48,"nodeType":"273","messageId":"274","endLine":65,"endColumn":50},{"ruleId":"267","severity":1,"message":"268","line":65,"column":57,"nodeType":"283","messageId":"284","endLine":65,"endColumn":64},{"ruleId":"271","severity":1,"message":"272","line":72,"column":71,"nodeType":"273","messageId":"274","endLine":72,"endColumn":73},{"ruleId":"271","severity":1,"message":"285","line":75,"column":78,"nodeType":"273","messageId":"274","endLine":75,"endColumn":80},{"ruleId":"263","severity":1,"message":"286","line":88,"column":7,"nodeType":"265","endLine":88,"endColumn":24,"suggestions":"287"},{"ruleId":"267","severity":1,"message":"268","line":92,"column":24,"nodeType":"269","messageId":"270","endLine":92,"endColumn":26},{"ruleId":"271","severity":1,"message":"272","line":101,"column":33,"nodeType":"273","messageId":"274","endLine":101,"endColumn":35},{"ruleId":"271","severity":1,"message":"272","line":101,"column":59,"nodeType":"273","messageId":"274","endLine":101,"endColumn":61},{"ruleId":"271","severity":1,"message":"272","line":102,"column":33,"nodeType":"273","messageId":"274","endLine":102,"endColumn":35},{"ruleId":"271","severity":1,"message":"272","line":102,"column":59,"nodeType":"273","messageId":"274","endLine":102,"endColumn":61},{"ruleId":"288","severity":1,"message":"289","line":113,"column":30,"nodeType":"290","messageId":"291","endLine":113,"endColumn":31,"suggestions":"292"},{"ruleId":"271","severity":1,"message":"272","line":126,"column":17,"nodeType":"273","messageId":"274","endLine":126,"endColumn":19},{"ruleId":"271","severity":1,"message":"272","line":133,"column":53,"nodeType":"273","messageId":"274","endLine":133,"endColumn":55},{"ruleId":"267","severity":1,"message":"268","line":159,"column":25,"nodeType":"269","messageId":"270","endLine":159,"endColumn":27},{"ruleId":"267","severity":1,"message":"268","line":178,"column":42,"nodeType":"269","messageId":"270","endLine":178,"endColumn":44},{"ruleId":"243","severity":1,"message":"293","line":181,"column":31,"nodeType":"245","messageId":"246","endLine":181,"endColumn":40},{"ruleId":"271","severity":1,"message":"272","line":217,"column":49,"nodeType":"273","messageId":"274","endLine":217,"endColumn":51},{"ruleId":"271","severity":1,"message":"272","line":236,"column":54,"nodeType":"273","messageId":"274","endLine":236,"endColumn":56},{"ruleId":"271","severity":1,"message":"272","line":236,"column":72,"nodeType":"273","messageId":"274","endLine":236,"endColumn":74},{"ruleId":"271","severity":1,"message":"272","line":237,"column":53,"nodeType":"273","messageId":"274","endLine":237,"endColumn":55},{"ruleId":"271","severity":1,"message":"272","line":238,"column":53,"nodeType":"273","messageId":"274","endLine":238,"endColumn":55},{"ruleId":"271","severity":1,"message":"272","line":254,"column":53,"nodeType":"273","messageId":"274","endLine":254,"endColumn":55},{"ruleId":"271","severity":1,"message":"272","line":332,"column":58,"nodeType":"273","messageId":"274","endLine":332,"endColumn":60},{"ruleId":"271","severity":1,"message":"272","line":374,"column":94,"nodeType":"273","messageId":"274","endLine":374,"endColumn":96},{"ruleId":"271","severity":1,"message":"272","line":395,"column":76,"nodeType":"273","messageId":"274","endLine":395,"endColumn":78},{"ruleId":"271","severity":1,"message":"272","line":412,"column":73,"nodeType":"273","messageId":"274","endLine":412,"endColumn":75},{"ruleId":"294","severity":1,"message":"295","line":438,"column":25,"nodeType":"296","endLine":438,"endColumn":64},{"ruleId":"243","severity":1,"message":"297","line":2,"column":25,"nodeType":"245","messageId":"246","endLine":2,"endColumn":31},{"ruleId":"243","severity":1,"message":"298","line":8,"column":11,"nodeType":"245","messageId":"246","endLine":8,"endColumn":17},{"ruleId":"267","severity":1,"message":"268","line":45,"column":46,"nodeType":"269","messageId":"270","endLine":45,"endColumn":48},{"ruleId":"271","severity":1,"message":"272","line":46,"column":79,"nodeType":"273","messageId":"274","endLine":46,"endColumn":81},{"ruleId":"271","severity":1,"message":"272","line":14,"column":28,"nodeType":"273","messageId":"274","endLine":14,"endColumn":30},{"ruleId":"267","severity":1,"message":"268","line":18,"column":41,"nodeType":"269","messageId":"270","endLine":18,"endColumn":43},{"ruleId":"267","severity":1,"message":"268","line":23,"column":53,"nodeType":"269","messageId":"270","endLine":23,"endColumn":55},{"ruleId":"271","severity":1,"message":"272","line":27,"column":33,"nodeType":"273","messageId":"274","endLine":27,"endColumn":35},{"ruleId":"243","severity":1,"message":"299","line":3,"column":5,"nodeType":"245","messageId":"246","endLine":3,"endColumn":10},{"ruleId":"243","severity":1,"message":"300","line":11,"column":5,"nodeType":"245","messageId":"246","endLine":11,"endColumn":8},{"ruleId":"243","severity":1,"message":"297","line":12,"column":5,"nodeType":"245","messageId":"246","endLine":12,"endColumn":11},{"ruleId":"243","severity":1,"message":"301","line":15,"column":8,"nodeType":"245","messageId":"246","endLine":15,"endColumn":14},{"ruleId":"243","severity":1,"message":"302","line":17,"column":9,"nodeType":"245","messageId":"246","endLine":17,"endColumn":13},{"ruleId":"263","severity":1,"message":"303","line":39,"column":8,"nodeType":"265","endLine":39,"endColumn":10,"suggestions":"304"},{"ruleId":"305","severity":1,"message":"306","line":45,"column":9,"nodeType":"307","messageId":"308","endLine":74,"endColumn":10},{"ruleId":"305","severity":1,"message":"306","line":96,"column":9,"nodeType":"307","messageId":"308","endLine":105,"endColumn":10},{"ruleId":"305","severity":1,"message":"306","line":117,"column":29,"nodeType":"307","messageId":"308","endLine":134,"endColumn":30},{"ruleId":"271","severity":1,"message":"272","line":138,"column":72,"nodeType":"273","messageId":"274","endLine":138,"endColumn":74},{"ruleId":"271","severity":1,"message":"272","line":139,"column":73,"nodeType":"273","messageId":"274","endLine":139,"endColumn":75},{"ruleId":"271","severity":1,"message":"272","line":140,"column":74,"nodeType":"273","messageId":"274","endLine":140,"endColumn":76},{"ruleId":"271","severity":1,"message":"272","line":141,"column":79,"nodeType":"273","messageId":"274","endLine":141,"endColumn":81},{"ruleId":"271","severity":1,"message":"272","line":142,"column":75,"nodeType":"273","messageId":"274","endLine":142,"endColumn":77},{"ruleId":"271","severity":1,"message":"272","line":155,"column":61,"nodeType":"273","messageId":"274","endLine":155,"endColumn":63},{"ruleId":"271","severity":1,"message":"272","line":156,"column":61,"nodeType":"273","messageId":"274","endLine":156,"endColumn":63},{"ruleId":"271","severity":1,"message":"272","line":157,"column":60,"nodeType":"273","messageId":"274","endLine":157,"endColumn":62},{"ruleId":"271","severity":1,"message":"272","line":158,"column":60,"nodeType":"273","messageId":"274","endLine":158,"endColumn":62},{"ruleId":"271","severity":1,"message":"272","line":164,"column":117,"nodeType":"273","messageId":"274","endLine":164,"endColumn":119},{"ruleId":"271","severity":1,"message":"272","line":192,"column":82,"nodeType":"273","messageId":"274","endLine":192,"endColumn":84},{"ruleId":"309","severity":1,"message":"310","line":225,"column":37,"nodeType":"296","endLine":225,"endColumn":141},{"ruleId":"243","severity":1,"message":"254","line":6,"column":9,"nodeType":"245","messageId":"246","endLine":6,"endColumn":19},{"ruleId":"243","severity":1,"message":"252","line":9,"column":9,"nodeType":"245","messageId":"246","endLine":9,"endColumn":14},{"ruleId":"243","severity":1,"message":"311","line":13,"column":30,"nodeType":"245","messageId":"246","endLine":13,"endColumn":42},{"ruleId":"243","severity":1,"message":"312","line":15,"column":11,"nodeType":"245","messageId":"246","endLine":15,"endColumn":18},{"ruleId":"271","severity":1,"message":"272","line":38,"column":14,"nodeType":"273","messageId":"274","endLine":38,"endColumn":16},{"ruleId":"271","severity":1,"message":"272","line":41,"column":14,"nodeType":"273","messageId":"274","endLine":41,"endColumn":16},{"ruleId":"243","severity":1,"message":"299","line":1,"column":16,"nodeType":"245","messageId":"246","endLine":1,"endColumn":21},{"ruleId":"243","severity":1,"message":"262","line":6,"column":8,"nodeType":"245","messageId":"246","endLine":6,"endColumn":13},{"ruleId":"243","severity":1,"message":"313","line":9,"column":9,"nodeType":"245","messageId":"246","endLine":9,"endColumn":14},{"ruleId":"263","severity":1,"message":"314","line":19,"column":7,"nodeType":"265","endLine":19,"endColumn":9,"suggestions":"315"},{"ruleId":"267","severity":1,"message":"268","line":73,"column":77,"nodeType":"269","messageId":"270","endLine":73,"endColumn":79},{"ruleId":"271","severity":1,"message":"272","line":113,"column":37,"nodeType":"273","messageId":"274","endLine":113,"endColumn":39},{"ruleId":"243","severity":1,"message":"316","line":4,"column":9,"nodeType":"245","messageId":"246","endLine":4,"endColumn":20},{"ruleId":"243","severity":1,"message":"317","line":4,"column":39,"nodeType":"245","messageId":"246","endLine":4,"endColumn":49},{"ruleId":"243","severity":1,"message":"299","line":5,"column":9,"nodeType":"245","messageId":"246","endLine":5,"endColumn":14},{"ruleId":"243","severity":1,"message":"298","line":13,"column":11,"nodeType":"245","messageId":"246","endLine":13,"endColumn":17},{"ruleId":"309","severity":1,"message":"310","line":20,"column":9,"nodeType":"296","endLine":20,"endColumn":46},{"ruleId":"243","severity":1,"message":"318","line":1,"column":9,"nodeType":"245","messageId":"246","endLine":1,"endColumn":18},{"ruleId":"243","severity":1,"message":"319","line":1,"column":9,"nodeType":"245","messageId":"246","endLine":1,"endColumn":19},{"ruleId":"243","severity":1,"message":"320","line":6,"column":8,"nodeType":"245","messageId":"246","endLine":6,"endColumn":20},{"ruleId":"263","severity":1,"message":"321","line":27,"column":8,"nodeType":"265","endLine":27,"endColumn":10,"suggestions":"322"},{"ruleId":"271","severity":1,"message":"285","line":57,"column":37,"nodeType":"273","messageId":"274","endLine":57,"endColumn":39},{"ruleId":"271","severity":1,"message":"285","line":57,"column":84,"nodeType":"273","messageId":"274","endLine":57,"endColumn":86},{"ruleId":"271","severity":1,"message":"272","line":58,"column":42,"nodeType":"273","messageId":"274","endLine":58,"endColumn":44},{"ruleId":"309","severity":1,"message":"323","line":136,"column":53,"nodeType":"296","endLine":136,"endColumn":105},{"ruleId":"243","severity":1,"message":"324","line":3,"column":8,"nodeType":"245","messageId":"246","endLine":3,"endColumn":18},{"ruleId":"271","severity":1,"message":"272","line":21,"column":53,"nodeType":"273","messageId":"274","endLine":21,"endColumn":55},{"ruleId":"263","severity":1,"message":"321","line":26,"column":8,"nodeType":"265","endLine":26,"endColumn":10,"suggestions":"325"},{"ruleId":"263","severity":1,"message":"321","line":22,"column":8,"nodeType":"265","endLine":22,"endColumn":10,"suggestions":"326"},{"ruleId":"327","severity":1,"message":"328","line":38,"column":43,"nodeType":"329","endLine":38,"endColumn":48},"no-native-reassign",["330"],"no-negated-in-lhs",["331"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'Home' is defined but never used.","'FullLayout' is defined but never used.","'ViewGroup' is defined but never used.","'ViewStudent' is defined but never used.","'toast' is defined but never used.","'useEffect' is defined but never used.","'checkLogin' is defined but never used.","'Alert' is defined but never used.","'Workshop' is defined but never used.","'ClientHome' is defined but never used.","'Theory' is defined but never used.","'Exam' is defined but never used.","'LoginClient' is defined but never used.","'location' is assigned a value but never used.","'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'SchdDetailID', 'SchdID', and 'state'. Either include them or remove the dependency array.","ArrayExpression",["332"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'render' is defined but never used.","'uid' is defined but never used.","'getEmailByScheduleDetail' is defined but never used.","'confirmAlert' is defined but never used.","React Hook useEffect has missing dependencies: 'SchdDetailID', 'SchdID', 'group', 'reloadStudents', and 'state'. Either include them or remove the dependency array.",["333"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","ReturnStatement","expectedReturnValue","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'students'. Either include it or remove the dependency array.",["334"],"no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["335","336"],"'StudentID' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Navbar' is defined but never used.","'params' is assigned a value but never used.","'Badge' is defined but never used.","'Nav' is defined but never used.","'Footer' is defined but never used.","'Form' is defined but never used.","React Hook useEffect has missing dependencies: 'SchdDetailID', 'StdRegistID', and 'reloadWorkshopFile'. Either include them or remove the dependency array.",["337"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'SchdDetailID' is assigned a value but never used.","'history' is assigned a value but never used.","'$mobx' is defined but never used.","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.",["338"],"'useLocation' is defined but never used.","'withRouter' is defined but never used.","'Container' is defined but never used.","'useContext' is defined but never used.","'StateContext' is defined but never used.","React Hook useEffect has a missing dependency: 'checker'. Either include it or remove the dependency array.",["339"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'classNames' is defined but never used.",["340"],["341"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"messageId":"348","fix":"349","desc":"350"},{"messageId":"351","fix":"352","desc":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"358","fix":"360"},{"desc":"358","fix":"361"},"Update the dependencies array to be: [SchdDetailID, SchdID, state]",{"range":"362","text":"363"},"Update the dependencies array to be: [SchdDetailID, SchdID, group, reloadStudents, state]",{"range":"364","text":"365"},"Update the dependencies array to be: [students, userPairingText]",{"range":"366","text":"367"},"removeEscape",{"range":"368","text":"369"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"370","text":"371"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [SchdDetailID, StdRegistID, reloadWorkshopFile]",{"range":"372","text":"373"},"Update the dependencies array to be: [state]",{"range":"374","text":"375"},"Update the dependencies array to be: [checker]",{"range":"376","text":"377"},{"range":"378","text":"377"},{"range":"379","text":"377"},[1057,1059],"[SchdDetailID, SchdID, state]",[2278,2280],"[SchdDetailID, SchdID, group, reloadStudents, state]",[3692,3709],"[students, userPairingText]",[4402,4403],"",[4402,4402],"\\",[1308,1310],"[SchdDetailID, StdRegistID, reloadWorkshopFile]",[761,763],"[state]",[1085,1087],"[checker]",[810,812],[694,696]]